===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\.github\workflows\backend-ci.yml =====
name: backend-ci

on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      TESTCONTAINERS_RYUK_DISABLED: "true"
      TESTCONTAINERS_CHECKS_DISABLE: "true"
      DOCKER_BUILDKIT: "1"
      DOTNET_CLI_TELEMETRY_OPTOUT: "1"
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "1"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: "8.0.x" }

      - name: Verify Docker
        run: |
          docker version
          docker info

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore ThoughtGarden.sln

      - name: Build
        run: dotnet build ThoughtGarden.sln --no-restore --configuration Release

      - name: Test (Testcontainers)
        run: dotnet test ThoughtGarden.sln --no-build --configuration Release --verbosity normal

      - name: Cleanup Docker (since Ryuk is off)
        if: always()
        run: |
          docker ps -aq | xargs -r docker rm -fv
          docker network prune -f
          docker volume prune -f
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\.github\workflows\backend-ci.yml =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\docker\docker-compose.yml =====
services:
  db:
    image: postgres:15
    container_name: thoughtgarden_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: thoughtgarden
      POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5"
    ports:
      - "5432:5432"
    volumes:
      - thoughtgarden_db_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: thoughtgarden_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  thoughtgarden_db_data:
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\docker\docker-compose.yml =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\node_modules\.package-lock.json =====
{
  "name": "thought_garden_backend",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {}
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\node_modules\.package-lock.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\appsettings.json =====
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Cors": {
    "AllowedOrigins": [
      "http://localhost:19006",
      "http://127.0.0.1:19006"
    ]
  }

}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\appsettings.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\ThoughtGarden.Api.deps.json =====
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "ThoughtGarden.Api/1.0.0": {
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "EFCore.NamingConventions": "9.0.0",
          "HotChocolate.AspNetCore": "15.1.9",
          "HotChocolate.AspNetCore.Authorization": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "HotChocolate.Data.EntityFramework": "15.1.9",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.19",
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Design": "9.0.8",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "Swashbuckle.AspNetCore": "6.6.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "runtime": {
          "ThoughtGarden.Api.dll": {}
        }
      },
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        }
      },
      "ChilliCream.Nitro.App/28.0.7": {
        "dependencies": {
          "Yarp.ReverseProxy": "2.3.0"
        },
        "runtime": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {
            "assemblyVersion": "28.0.0.0",
            "fileVersion": "28.0.7.0"
          }
        }
      },
      "EFCore.NamingConventions/9.0.0": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/EFCore.NamingConventions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        }
      },
      "GreenDonut/15.1.9": {
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Abstractions/15.1.9": {
        "runtime": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data.Abstractions/15.1.9": {
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data.EntityFramework/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data.Primitives/15.1.9": {
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate/15.1.9": {
        "dependencies": {
          "HotChocolate.Authorization": "15.1.9",
          "HotChocolate.CostAnalysis": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9",
          "HotChocolate.Types.CursorPagination.Extensions": "15.1.9",
          "HotChocolate.Types.Mutations": "15.1.9",
          "HotChocolate.Types.Queries": "15.1.9",
          "HotChocolate.Validation": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Abstractions/15.1.9": {
        "dependencies": {
          "HotChocolate.Primitives": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.AspNetCore/15.1.9": {
        "dependencies": {
          "ChilliCream.Nitro.App": "28.0.7",
          "HotChocolate": "15.1.9",
          "HotChocolate.Subscriptions.InMemory": "15.1.9",
          "HotChocolate.Transport.Sockets": "15.1.9",
          "HotChocolate.Types.Scalars.Upload": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.AspNetCore.Authorization/15.1.9": {
        "dependencies": {
          "HotChocolate": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Authorization/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.CostAnalysis/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Data/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Data.EntityFramework/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.EntityFramework": "15.1.9",
          "HotChocolate": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Execution/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9",
          "HotChocolate.Validation": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Execution.Abstractions/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Execution.Projections/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Features/15.1.9": {
        "runtime": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Fetching/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9",
          "HotChocolate.Language.Utf8": "15.1.9",
          "HotChocolate.Language.Visitors": "15.1.9",
          "HotChocolate.Language.Web": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.SyntaxTree/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.Utf8/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.Visitors/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.Web/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.Utf8": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Primitives/15.1.9": {
        "dependencies": {
          "HotChocolate.Language": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Subscriptions/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Utilities": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Subscriptions.InMemory/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Subscriptions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Transport.Sockets/15.1.9": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Features": "15.1.9",
          "HotChocolate.Types.Shared": "15.1.9",
          "HotChocolate.Utilities": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.CursorPagination/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Errors/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Mutations/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Queries/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Scalars.Upload/15.1.9": {
        "dependencies": {
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Shared/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Utilities/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Utilities.DependencyInjection/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Validation/15.1.9": {
        "dependencies": {
          "HotChocolate.Types": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "Humanizer.Core/2.14.1": {
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "assemblyVersion": "2.14.0.0",
            "fileVersion": "2.14.1.48190"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.19.0",
            "fileVersion": "8.0.1925.37204"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "Microsoft.Build.Framework/17.8.3": {},
      "Microsoft.Build.Locator/1.7.8": {
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.7.8.28074"
          }
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {},
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "9.0.8",
          "System.Threading.Channels": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "dependencies": {
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.8",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {},
      "Microsoft.EntityFrameworkCore.Design/9.0.8": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyModel": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.Extensions.ApiDescription.Server/6.0.5": {},
      "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.8": {
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.8",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "assemblyVersion": "9.0.0.8",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "System.Diagnostics.DiagnosticSource": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.ObjectPool/8.0.0": {},
      "Microsoft.Extensions.Options/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.14.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.14.0": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.IdentityModel.Logging": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.OpenApi/1.6.14": {
        "runtime": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "assemblyVersion": "1.6.14.0",
            "fileVersion": "1.6.14.0"
          }
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {
            "assemblyVersion": "3.0.0.0",
            "fileVersion": "3.0.0.1"
          }
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        }
      },
      "Swashbuckle.AspNetCore/6.6.2": {
        "dependencies": {
          "Microsoft.Extensions.ApiDescription.Server": "6.0.5",
          "Swashbuckle.AspNetCore.Swagger": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerGen": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerUI": "6.6.2"
        }
      },
      "Swashbuckle.AspNetCore.Swagger/6.6.2": {
        "dependencies": {
          "Microsoft.OpenApi": "1.6.14"
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        }
      },
      "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
        "dependencies": {
          "Swashbuckle.AspNetCore.Swagger": "6.6.2"
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        }
      },
      "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        }
      },
      "System.CodeDom/6.0.0": {
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Collections.Immutable/7.0.0": {},
      "System.Composition/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Convention/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.8": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "System.IO.Hashing/8.0.0": {
        "runtime": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.23.53103"
          }
        }
      },
      "System.IO.Pipelines/9.0.8": {
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.Reflection.Metadata/7.0.0": {
        "dependencies": {
          "System.Collections.Immutable": "7.0.0"
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Text.Encodings.Web/9.0.8": {
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.Text.Json/9.0.8": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8",
          "System.Text.Encodings.Web": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.Threading.Channels/7.0.0": {},
      "Yarp.ReverseProxy/2.3.0": {
        "dependencies": {
          "System.IO.Hashing": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "assemblyVersion": "2.3.0.0",
            "fileVersion": "2.300.25.12702"
          }
        }
      }
    }
  },
  "libraries": {
    "ThoughtGarden.Api/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "ChilliCream.Nitro.App/28.0.7": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-G6CZod8ForeoVMXigRyAxTTqiiUYcppE85UY/zy4XLMunpF1Ginn5njWK+F+93bw3x5SssPR/fexEpOtQqkVLw==",
      "path": "chillicream.nitro.app/28.0.7",
      "hashPath": "chillicream.nitro.app.28.0.7.nupkg.sha512"
    },
    "EFCore.NamingConventions/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-heKIYzPdEWx+Ba4xuG6jfEssW9rEi7I0lX38eoN7wo7qgg9uw7nn8UEmDQfwGEYPzSDpetCVANnDr5tqt2Asjg==",
      "path": "efcore.namingconventions/9.0.0",
      "hashPath": "efcore.namingconventions.9.0.0.nupkg.sha512"
    },
    "GreenDonut/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-482fPqj2Q7enNUsUDENHjrghwI1GPlUbsGQ425SdFJNSl6hhrWzNjMmwd2x1V6NZJCDWk6TAjJ35NK22T1eNNw==",
      "path": "greendonut/15.1.9",
      "hashPath": "greendonut.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-imB88uJvK18ZxMwmnLW1XRE7nPU0rRsV5pFzpbuzfVDabedsEqOnoGQDSOJUORJ1Dn6ZOFH7PBxWh92MnXP8JA==",
      "path": "greendonut.abstractions/15.1.9",
      "hashPath": "greendonut.abstractions.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-T5mfw9CnQKhl4sa+5RbfBNk9hGTdSiGnUCYGFyXcREfLGMMe7kfOabjhR6T7FB7kZeEWb8GqcipU655jMbTX/w==",
      "path": "greendonut.data/15.1.9",
      "hashPath": "greendonut.data.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-E/a5ms3kV8niLBPB0s7rkVuYV1yRAR6JHasTrMg9a9Yk0U18yUj28wXEKwZY1A3mze2S2vF3kebQDAHCN5bjwg==",
      "path": "greendonut.data.abstractions/15.1.9",
      "hashPath": "greendonut.data.abstractions.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.EntityFramework/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dBEK3bkLoq46n7Tg+Vn77FTXJn7ugp2OWcgo+CeqGTfQa+8MbWY9IohQGjAMFLt4TigTnU0ek63keNACv5vl5g==",
      "path": "greendonut.data.entityframework/15.1.9",
      "hashPath": "greendonut.data.entityframework.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.Primitives/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-U7uS+C7lEvlgn48xtSFCHMKSjV0oJXgtlbYe6KPWZSJfhDwFxfUFmD58Tn1BxVpCbUqAjr7TzHZaNelhzIu/8A==",
      "path": "greendonut.data.primitives/15.1.9",
      "hashPath": "greendonut.data.primitives.15.1.9.nupkg.sha512"
    },
    "HotChocolate/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-VTVw4bKfnLYuVU4BPzRLILU+IpN+ixblF4uqQ1aMQgwTueLfQ9cycQqvlunWBisRsrtbhcalyn/ksHYn9zgv3A==",
      "path": "hotchocolate/15.1.9",
      "hashPath": "hotchocolate.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-jQL/Va5z9sksqG1/++Mm4nzwl5I+qppOOnV6z2/SeZ9BseaBxao9njBMd6wBkfMgbOoiOh5FGqWCVna7mdhJcw==",
      "path": "hotchocolate.abstractions/15.1.9",
      "hashPath": "hotchocolate.abstractions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.AspNetCore/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9G60X0PbDZOaA3k8gbIHTS9vwjvBo6jbKwQe8VKr6liEVHNWXYu2kvaxqQbIgd4FuG759Ie1TKLHSwX411ceag==",
      "path": "hotchocolate.aspnetcore/15.1.9",
      "hashPath": "hotchocolate.aspnetcore.15.1.9.nupkg.sha512"
    },
    "HotChocolate.AspNetCore.Authorization/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YQKitD1Yp0QdKPCcggHqGLuDDifJspmFTERyDyNxy4ZEL+emvc3PbTNqHp+/l/t+zRLtssNIpLoja1vXZ0sRqg==",
      "path": "hotchocolate.aspnetcore.authorization/15.1.9",
      "hashPath": "hotchocolate.aspnetcore.authorization.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Authorization/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wfKg+7F/DNzugwAHA4fd1flBStmfa7aXCo4fvpwFAqqpp3zguoKzzSVLw8VC1Ob0uTUutHWtqVVbBMYP8Cmq9g==",
      "path": "hotchocolate.authorization/15.1.9",
      "hashPath": "hotchocolate.authorization.15.1.9.nupkg.sha512"
    },
    "HotChocolate.CostAnalysis/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-XYseRG+XLHlmE8TnY6/dZCleKxxhHomR0kiriqaQ9Nt2nuJ0l8CTy7ucXK4ZYdikBrz46/KxXj0RwicIJzSN1Q==",
      "path": "hotchocolate.costanalysis/15.1.9",
      "hashPath": "hotchocolate.costanalysis.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Data/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xYiRcqB3MTazm1+taZlnWk6qMDaF47DvyTakB+ERaotqSlHyXkQWuX5vPXyhGCTncu7Wvppv6HkOSdw5x1Q9lA==",
      "path": "hotchocolate.data/15.1.9",
      "hashPath": "hotchocolate.data.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Data.EntityFramework/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-BQ6c+NvWoygeok0ZwNf5Iof6CeFt+FBE2F8LOxCUW3r5t2g792CTG1tiZ7ZfrrAi3qwu3YdOYcLw+6tX+5M6pw==",
      "path": "hotchocolate.data.entityframework/15.1.9",
      "hashPath": "hotchocolate.data.entityframework.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pTf6SyyMWiQLAp8NHcSBb/DYbkzEcVLLhrdh0BkX2VKwL6iknH3lKuQjP25LryIBiBpdB2ddl8ULNBjRBXMmMQ==",
      "path": "hotchocolate.execution/15.1.9",
      "hashPath": "hotchocolate.execution.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-x4Tx+n7e45tySRfBISeN8DCt2dcqPrR/JC/1dbnTVkgL5conIybhlfChuLNK36TbGPCNhqYgmow/jyNoorSAdg==",
      "path": "hotchocolate.execution.abstractions/15.1.9",
      "hashPath": "hotchocolate.execution.abstractions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution.Projections/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xcASpOZxMWNa8o8OIlduqPGgpNHaxYVp8K8hzWunCpWP2JsR39a/U/YE8J3Yaj3x4KUlBNXiTq914axLY4qkTA==",
      "path": "hotchocolate.execution.projections/15.1.9",
      "hashPath": "hotchocolate.execution.projections.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Features/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dFNkiW5BeA/B37/WdeZzX3o4mBfGzpQtWM4O7iI7pzlXnInLwNB7nuD1B186eulNnRiQBCSqM0ZcFjbLtUuzag==",
      "path": "hotchocolate.features/15.1.9",
      "hashPath": "hotchocolate.features.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Fetching/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-oH0qn/8CjiOQJmyag3IX/qFPJ4Aoc3Xz3I/MqPETQ40IRkwN0RrXfnFYgyulcF9O0VTGoUFUf4G8sT67CP6ffg==",
      "path": "hotchocolate.fetching/15.1.9",
      "hashPath": "hotchocolate.fetching.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/6uru5EbOPm5lKZ0VRzEVfP11mbKIhaPlQINybWMCXq1LAn21P0DgY/fVCh2AoNeFeITCTO8itqPv4vLntsnQg==",
      "path": "hotchocolate.language/15.1.9",
      "hashPath": "hotchocolate.language.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.SyntaxTree/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Tzuk9ZnpgLZNnxUl79tRYpr2/Gt/W6g8LvwcXkpU+aejGOi6UHxYJtas30U4XQOCPyEd24Waw1WdtVe2AYil3A==",
      "path": "hotchocolate.language.syntaxtree/15.1.9",
      "hashPath": "hotchocolate.language.syntaxtree.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Utf8/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-E/53yeCEZUpjLsxkCunN7AgMZVaIPnvZopqB6oyD+ygZjm7zkpWgssnI621GL0WxAmTbr7ehrHx5EXt8dN/TQw==",
      "path": "hotchocolate.language.utf8/15.1.9",
      "hashPath": "hotchocolate.language.utf8.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Visitors/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9LVHdE/22DwxpTzD+U0hTRik8oD+yqPr0gO9WlOHbqqV4oaI6m07KdkF6F48Z8evmMLtfPWmOjUX2dNI5k9Wgg==",
      "path": "hotchocolate.language.visitors/15.1.9",
      "hashPath": "hotchocolate.language.visitors.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Web/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SMRx4Ix4/EW2Dk3gBgyEbuPPUPkZdCOHIyiNeUzyWYuGOe7T/aj2pTBYUlKLxCJhWeH++BViEGMpx4J7uzKo0A==",
      "path": "hotchocolate.language.web/15.1.9",
      "hashPath": "hotchocolate.language.web.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Primitives/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-41ZTC75xe4cPJ4FcogVBktp5U6tOplwlbmqwLreY/yY7WikghlNAooczGJQFJiutEl0IkCanLLVKeizPY2dJAw==",
      "path": "hotchocolate.primitives/15.1.9",
      "hashPath": "hotchocolate.primitives.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Subscriptions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Vw4UK1J/ck5HBV+prYKaS0fcPKWMynBWML49pQOVDqtRDctoCNNIk0w7G83QWRNmrQwLr70unUeh8jkeTl5U2A==",
      "path": "hotchocolate.subscriptions/15.1.9",
      "hashPath": "hotchocolate.subscriptions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Subscriptions.InMemory/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mbrdirU8+4O6J0zovdxoEQaqHmyeqwKMn2Yk82rOj67+M4Wd69Tl/7OF59bBFG8Plrk+fqnEb/DW5Iv8w6mnWA==",
      "path": "hotchocolate.subscriptions.inmemory/15.1.9",
      "hashPath": "hotchocolate.subscriptions.inmemory.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Transport.Sockets/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ex9DQdgwUa8tdQDl1W2dWCBH24BE8+hgp++8iQKUFC5a00caAe6g9lzAzFCfv2s2OFIb97YzGxvct26qvCF+Aw==",
      "path": "hotchocolate.transport.sockets/15.1.9",
      "hashPath": "hotchocolate.transport.sockets.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4nATgti5zOSsEyRFW0CNmYctQ7kwaINFisPTiQ7TvTD1DD7sOxWxEjEFJtuZcgocK+1OkmAlpx7jUU1+SclU6A==",
      "path": "hotchocolate.types/15.1.9",
      "hashPath": "hotchocolate.types.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.CursorPagination/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4EEq9WgIhWOLhkG+pSc7rsnMqE0urhUv1SsbNYx60h+xAw7R39b+kC8sL8Yjjtypw4Sr1xDjE2NIj9dCOm4tw==",
      "path": "hotchocolate.types.cursorpagination/15.1.9",
      "hashPath": "hotchocolate.types.cursorpagination.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uYU38ejpAnAQYMavSxZ2UuFdCKdOLeaDytEGgAmgJS48LgZrlwRI6PAj7tK7tugzgFReMn1zeXUmfgBf2SZtng==",
      "path": "hotchocolate.types.cursorpagination.extensions/15.1.9",
      "hashPath": "hotchocolate.types.cursorpagination.extensions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Errors/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4stl4t1o97u26oXmYOrtTgznvDCECnOquXctbHbh8kjGYzmwHeCw5Wga09K4mPoi+bdJA47jTgZwUdC8ja8xKw==",
      "path": "hotchocolate.types.errors/15.1.9",
      "hashPath": "hotchocolate.types.errors.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Mutations/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lnODSHF51sjH6MUOs90s0vvROiQx3YGGe0ZJxqg0uZShrdiIygbw6jA1S9mf9VHj4q04WuJIsC5pGf89Rk19iw==",
      "path": "hotchocolate.types.mutations/15.1.9",
      "hashPath": "hotchocolate.types.mutations.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Queries/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EmmTu5NX402uvmCAaiNw623ty4BfxBDrCl1BPVhCLShmoQKfS8WXduImtGZFvjSNN1eJ6hT4IDDjNCtgmCV3Kw==",
      "path": "hotchocolate.types.queries/15.1.9",
      "hashPath": "hotchocolate.types.queries.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Scalars.Upload/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eBAhdK80UpxGKUoQ3+GXivSHTjV3Qf73p5BRRZcQGSfN/05R9UE2TtNfNDNbXsPmEXN7vSYbLtvtyvD+0AWodA==",
      "path": "hotchocolate.types.scalars.upload/15.1.9",
      "hashPath": "hotchocolate.types.scalars.upload.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Shared/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-I34zCMRDoH27Ma0G1xF/WL6j9H9NCGxfkXY6axlIemtH1ZgSYbQCUTw6UdeSZyGbBlwAObxh54c96NsPIlay3Q==",
      "path": "hotchocolate.types.shared/15.1.9",
      "hashPath": "hotchocolate.types.shared.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Utilities/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-z1pmsidrY/2u+26lzqfxP3YlxhLBQyPyyWmbrTRAta6riy4AT5iTRlCrApVZRZJxvrRsrI0Q8rz6k+nsXPn75A==",
      "path": "hotchocolate.utilities/15.1.9",
      "hashPath": "hotchocolate.utilities.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Utilities.DependencyInjection/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ReYfZNdFn9CPDwkWtUrDfziLvr5wqvkV1NPPf3g27VYLskzOGYQ0PJfZgzyj1JfR+FYnjKjcjITenzrRc+0Q4w==",
      "path": "hotchocolate.utilities.dependencyinjection/15.1.9",
      "hashPath": "hotchocolate.utilities.dependencyinjection.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Validation/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WwkVdB83XzehdRrSbqVsj83/Vnpia0fGNPv60jEbyhdZZUzMRF/g8VW2+JaFFi3PVGk+Ccd11yKbyGAh4au/cw==",
      "path": "hotchocolate.validation/15.1.9",
      "hashPath": "hotchocolate.validation.15.1.9.nupkg.sha512"
    },
    "Humanizer.Core/2.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "path": "humanizer.core/2.14.1",
      "hashPath": "humanizer.core.2.14.1.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vkGkpvEGGLFHeYhlBqdJiOL/7aYiUmLg2PTfuDDjBDUDb5QTpoeWLNOOoodTlu88J+GluGE+DFF1kd9hxJd5bA==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.19",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.19.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512"
    },
    "Microsoft.Build.Framework/17.8.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "path": "microsoft.build.framework/17.8.3",
      "hashPath": "microsoft.build.framework.17.8.3.nupkg.sha512"
    },
    "Microsoft.Build.Locator/1.7.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "path": "microsoft.build.locator/1.7.8",
      "hashPath": "microsoft.build.locator.1.7.8.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hashPath": "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bNGdPhN762+BIIO5MFYLjafRqkSS1MqLOc/erd55InvLnFxt9H3N5JNsuag1ZHyBor1VtD42U0CHpgqkWeAYgQ==",
      "path": "microsoft.entityframeworkcore/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-B2yfAIQRRAQ4zvvWqh+HudD+juV3YoLlpXnrog3tU0PM9AFpuq6xo0+mEglN1P43WgdcUiF+65CWBcZe35s15Q==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2EYStCXt4Hi9p3J3EYMQbItJDtASJd064Kcs8C8hj8Jt5srILrR9qlaL0Ryvk8NrWQoCQvIELsmiuqLEZMLvGA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-02e8OcoumSUAES3VkXrMT9EnNCUKWJoifn5+8fFEbAtRhKL3xg2a/Mj6rsAUGF7tkYFox6oKzJCn0jbm6b8Lbw==",
      "path": "microsoft.entityframeworkcore.design/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.design.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OVhfyxiHxMvYpwQ8Jy3YZi4koy6TK5/Q7C1oq3z6db+HEGuu6x9L1BX5zDIdJxxlRePMyO4D8ORiXj/D7+MUqw==",
      "path": "microsoft.entityframeworkcore.relational/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Ckb5EDBUNJdFWyajfXzUIMRkhf52fHZOQuuZg/oiu8y7zDCVwD0iHhew6MnThjHmevanpxL3f5ci2TtHQEN6bw==",
      "path": "microsoft.extensions.apidescription.server/6.0.5",
      "hashPath": "microsoft.extensions.apidescription.server.6.0.5.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4h7bsVoKoiK+SlPM+euX/ayGnKZhl47pPCidLTiio9xyG+vgVVfcYxcYQgjm0SCrdSxjG0EGIAKF8EFr3G8Ifw==",
      "path": "microsoft.extensions.caching.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-grR+oPyj8HVn4DT8CFUUdSw2pZZKS13KjytFe4txpHQliGM1GEDotohmjgvyl3hm7RFB3FRqvbouEX3/1ewp5A==",
      "path": "microsoft.extensions.caching.memory/9.0.8",
      "hashPath": "microsoft.extensions.caching.memory.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yNou2KM35RvzOh4vUFtl2l33rWPvOCoba+nzEDJ+BgD8aOL/jew4WPCibQvntRfOJ2pJU8ARygSMD+pdjvDHuA==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-JJjI2Fa+QtZcUyuNjbKn04OjIUX5IgFGFu/Xc+qvzh1rXdZHLcnqqVXhR4093bGirTwacRlHiVg1XYI9xum6QQ==",
      "path": "microsoft.extensions.dependencyinjection/9.0.8",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xY3lTjj4+ZYmiKIkyWitddrp1uL5uYiweQjqo4BKBw01ZC4HhcfgLghDpPZcUlppgWAFqFy9SgkiYWOMx365pw==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyModel/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3CW02zNjyqJ2eORo8Zkznpw6+QvK+tYUKZgKuKuAIYdy73TRFvpaqCwYws1k6/lMSJ7ZqABfWn0/wa5bRsIJ4w==",
      "path": "microsoft.extensions.dependencymodel/9.0.8",
      "hashPath": "microsoft.extensions.dependencymodel.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Z/7ze+0iheT7FJeZPqJKARYvyC2bmwu3whbm/48BJjdlGVvgDguoCqJIkI/67NkroTYobd5geai1WheNQvWrgA==",
      "path": "microsoft.extensions.logging/9.0.8",
      "hashPath": "microsoft.extensions.logging.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pYnAffJL7ARD/HCnnPvnFKSIHnTSmWz84WIlT9tPeQ4lHNiu0Az7N/8itihWvcF8sT+VVD5lq8V+ckMzu4SbOw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.ObjectPool/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4pm+XgxSukskwjzDDfSjG4KNUIOdFF2VaqZZDtTzoyQMOVSnlV6ZM8a9aVu5dg9LVZTB//utzSc8fOi0b0Mb2Q==",
      "path": "microsoft.extensions.objectpool/8.0.0",
      "hashPath": "microsoft.extensions.objectpool.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OmTaQ0v4gxGQkehpwWIqPoEiwsPuG/u4HUsbOFoWGx4DKET2AXzopnFe/fE608FIhzc/kcg2p8JdyMRCCUzitQ==",
      "path": "microsoft.extensions.options/9.0.8",
      "hashPath": "microsoft.extensions.options.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tizSIOEsIgSNSSh+hKeUVPK7xmTIjR8s+mJWOu1KXV3htvNQiPMFRMO17OdI1y/4ZApdBVk49u/08QGC9yvLug==",
      "path": "microsoft.extensions.primitives/9.0.8",
      "hashPath": "microsoft.extensions.primitives.9.0.8.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-iwbCpSjD3ehfTwBhtSNEtKPK0ICun6ov7Ibx6ISNA9bfwIyzI2Siwyi9eJFCJBwxowK9xcA1mj+jBWiigeqgcQ==",
      "path": "microsoft.identitymodel.abstractions/8.14.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4jOpiA4THdtpLyMdAb24dtj7+6GmvhOhxf5XHLYWmPKF8ApEnApal1UnJsKO4HxUWRXDA6C4WQVfYyqsRhpNpQ==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.14.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eqqnemdW38CKZEHS6diA50BV94QICozDZEvSrsvN3SJXUFwVB9gy+/oz76gldP7nZliA16IglXjXTCTdmU/Ejg==",
      "path": "microsoft.identitymodel.logging/8.14.0",
      "hashPath": "microsoft.identitymodel.logging.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lKIZiBiGd36k02TCdMHp1KlNWisyIvQxcYJvIkz7P4gSQ9zi8dgh6S5Grj8NNG7HWYIPfQymGyoZ6JB5d1Lo1g==",
      "path": "microsoft.identitymodel.tokens/8.14.0",
      "hashPath": "microsoft.identitymodel.tokens.8.14.0.nupkg.sha512"
    },
    "Microsoft.OpenApi/1.6.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tTaBT8qjk3xINfESyOPE2rIellPvB7qpVqiWiyA/lACVvz+xOGiXhFUfohcx82NLbi5avzLW0lx+s6oAqQijfw==",
      "path": "microsoft.openapi/1.6.14",
      "hashPath": "microsoft.openapi.1.6.14.nupkg.sha512"
    },
    "Mono.TextTemplating/3.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "path": "mono.texttemplating/3.0.0",
      "hashPath": "mono.texttemplating.3.0.0.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+NB4UYVYN6AhDSjW0IJAd1AGD8V33gemFNLPaxKTtPkHB+HaKAKf9MGAEUPivEWvqeQfcKIw8lJaHq6LHljRuw==",
      "path": "swashbuckle.aspnetcore/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.Swagger/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ovgPTSYX83UrQUWiS5vzDcJ8TEX1MAxBgDFMK45rC24MorHEPQlZAHlaXj/yth4Zf6xcktpUgTEBvffRQVwDKA==",
      "path": "swashbuckle.aspnetcore.swagger/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swagger.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zv4ikn4AT1VYuOsDCpktLq4QDq08e7Utzbir86M5/ZkRaLXbCPF11E1/vTmOiDzRTl0zTZINQU2qLKwTcHgfrA==",
      "path": "swashbuckle.aspnetcore.swaggergen/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swaggergen.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mBBb+/8Hm2Q3Wygag+hu2jj69tZW5psuv0vMRXY07Wy+Rrj40vRP8ZTbKBhs91r45/HXT4aY4z0iSBYx1h6JvA==",
      "path": "swashbuckle.aspnetcore.swaggerui/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swaggerui.6.6.2.nupkg.sha512"
    },
    "System.CodeDom/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "path": "system.codedom/6.0.0",
      "hashPath": "system.codedom.6.0.0.nupkg.sha512"
    },
    "System.Collections.Immutable/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dQPcs0U1IKnBdRDBkrCTi1FoajSTBzLcVTpjO4MBCMC7f4pDOIPzgBoX8JjG7X6uZRJ8EBxsi8+DR1JuwjnzOQ==",
      "path": "system.collections.immutable/7.0.0",
      "hashPath": "system.collections.immutable.7.0.0.nupkg.sha512"
    },
    "System.Composition/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "path": "system.composition/7.0.0",
      "hashPath": "system.composition.7.0.0.nupkg.sha512"
    },
    "System.Composition.AttributedModel/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "path": "system.composition.attributedmodel/7.0.0",
      "hashPath": "system.composition.attributedmodel.7.0.0.nupkg.sha512"
    },
    "System.Composition.Convention/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "path": "system.composition.convention/7.0.0",
      "hashPath": "system.composition.convention.7.0.0.nupkg.sha512"
    },
    "System.Composition.Hosting/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "path": "system.composition.hosting/7.0.0",
      "hashPath": "system.composition.hosting.7.0.0.nupkg.sha512"
    },
    "System.Composition.Runtime/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "path": "system.composition.runtime/7.0.0",
      "hashPath": "system.composition.runtime.7.0.0.nupkg.sha512"
    },
    "System.Composition.TypedParts/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "path": "system.composition.typedparts/7.0.0",
      "hashPath": "system.composition.typedparts.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Lj8/a1Hzli1z6jo8H9urc16GxkpVJtJM+W9fmivXMNu7nwzHziGkxn4vO0DFscMbudkEVKSezdDuHk5kgM0X/g==",
      "path": "system.diagnostics.diagnosticsource/9.0.8",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.8.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EYGgN/S+HK7S6F3GaaPLFAfK0UzMrkXFyWCvXpQWFYmZln3dqtbyIO7VuTM/iIIPMzkelg8ZLlBPvMhxj6nOAA==",
      "path": "system.identitymodel.tokens.jwt/8.14.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.14.0.nupkg.sha512"
    },
    "System.IO.Hashing/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ne1843evDugl0md7Fjzy6QjJrzsjh46ZKbhf8GwBXb5f/gw97J4bxMs0NQKifDuThh/f0bZ0e62NPl1jzTuRqA==",
      "path": "system.io.hashing/8.0.0",
      "hashPath": "system.io.hashing.8.0.0.nupkg.sha512"
    },
    "System.IO.Pipelines/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6vPmJt73mgUo1gzc/OcXlJvClz/2jxZ4TQPRfriVaLoGRH2mye530D9WHJYbFQRNMxF3PWCoeofsFdCyN7fLzA==",
      "path": "system.io.pipelines/9.0.8",
      "hashPath": "system.io.pipelines.9.0.8.nupkg.sha512"
    },
    "System.Reflection.Metadata/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MclTG61lsD9sYdpNz9xsKBzjsmsfCtcMZYXz/IUr2zlhaTaABonlr1ESeompTgM+Xk+IwtGYU7/voh3YWB/fWw==",
      "path": "system.reflection.metadata/7.0.0",
      "hashPath": "system.reflection.metadata.7.0.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+LotQsM4wBJ4PG7uRkyul4wqL4Fz7R4ty6uXrCNZUhbaHYANgrPaYR2ZpMVpdCjQEJ17Jr1NMN8hv4SHaHY4A==",
      "path": "system.text.encodings.web/9.0.8",
      "hashPath": "system.text.encodings.web.9.0.8.nupkg.sha512"
    },
    "System.Text.Json/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mIQir9jBqk0V7X0Nw5hzPJZC8DuGdf+2DS3jAVsr6rq5+/VyH5rza0XGcONJUWBrZ+G6BCwNyjWYd9lncBu48A==",
      "path": "system.text.json/9.0.8",
      "hashPath": "system.text.json.9.0.8.nupkg.sha512"
    },
    "System.Threading.Channels/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "path": "system.threading.channels/7.0.0",
      "hashPath": "system.threading.channels.7.0.0.nupkg.sha512"
    },
    "Yarp.ReverseProxy/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gxtkN3a+9biu9V9Zd5NaTO6VZWXAnS2mhQ0R/VXmSPoTuiQNZsakKikrKpDtKxrL5nUYzbRsHtl40WNq+ZBKKg==",
      "path": "yarp.reverseproxy/2.3.0",
      "hashPath": "yarp.reverseproxy.2.3.0.nupkg.sha512"
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\ThoughtGarden.Api.deps.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\ThoughtGarden.Api.runtimeconfig.json =====
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "System.GC.Server": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\ThoughtGarden.Api.runtimeconfig.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\ThoughtGarden.Api.staticwebassets.endpoints.json =====
{"Version":1,"ManifestType":"Build","Endpoints":[]}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\bin\Debug\net8.0\ThoughtGarden.Api.staticwebassets.endpoints.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Config\DopplerConfigurationProvider.cs =====
using System.Net.Http.Headers;
using System.Text.Json;

namespace ThoughtGarden.Api.Config
{
    public static class DopplerConfigExtensions
    {
        public static IConfigurationBuilder AddDopplerSecrets(this IConfigurationBuilder builder)
            => builder.Add(new DopplerConfigurationSource());
    }

    sealed class DopplerConfigurationSource : IConfigurationSource
    {
        public IConfigurationProvider Build(IConfigurationBuilder builder) => new DopplerConfigurationProvider();
    }

    sealed class DopplerConfigurationProvider : ConfigurationProvider
    {
        public override void Load()
        {
            var token = Environment.GetEnvironmentVariable("DOPPLER_TOKEN");
            var project = Environment.GetEnvironmentVariable("DOPPLER_PROJECT");
            var config = Environment.GetEnvironmentVariable("DOPPLER_CONFIG");
            if (string.IsNullOrWhiteSpace(token)) return;

            var baseUri = "https://api.doppler.com/v3/configs/config/secrets/download?format=json";
            var uri = (!string.IsNullOrWhiteSpace(project) && !string.IsNullOrWhiteSpace(config))
                ? $"{baseUri}&project={Uri.EscapeDataString(project)}&config={Uri.EscapeDataString(config)}"
                : baseUri;

            using var http = new HttpClient { Timeout = TimeSpan.FromSeconds(10) };
            http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            var json = http.GetStringAsync(uri).GetAwaiter().GetResult();

            var flat = JsonSerializer.Deserialize<Dictionary<string, string>>(json) ?? new();

            // Normalize __ → : and store with a case-insensitive comparer
            var normalized = new Dictionary<string, string?>(StringComparer.OrdinalIgnoreCase);
            foreach (var (k, v) in flat)
            {
                var key = k.Replace("__", ":", StringComparison.Ordinal);
                normalized[key] = v;
            }

            // IMPORTANT: keep Data case-insensitive
            Data = normalized;
        }
    }

}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Config\DopplerConfigurationProvider.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Config\DotEnv.cs =====
using System.IO;

namespace ThoughtGarden.Api.Config
{
    public static class DotEnv
    {
        public static void Load(string filePath = ".env")
        {
            if (!File.Exists(filePath)) return;

            foreach (var line in File.ReadAllLines(filePath))
            {
                var trimmed = line.Trim();
                if (string.IsNullOrWhiteSpace(trimmed) || trimmed.StartsWith("#")) continue;

                var idx = trimmed.IndexOf('=');
                if (idx <= 0) continue;

                var key = trimmed[..idx].Trim();
                var value = trimmed[(idx + 1)..].Trim();

                // Basic unquote
                if ((value.StartsWith("\"") && value.EndsWith("\"")) || (value.StartsWith("'") && value.EndsWith("'")))
                    value = value[1..^1];

                Environment.SetEnvironmentVariable(key, value, EnvironmentVariableTarget.Process);
            }
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Config\DotEnv.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Controllers\HealthController.cs =====
// src/ThoughtGarden.Api/Controllers/HealthController.cs
using Microsoft.AspNetCore.Mvc;
using ThoughtGarden.Api.Infrastructure;

namespace ThoughtGarden.Api.Controllers;

[ApiController]
[Route("api/[controller]")]
public class HealthController : ControllerBase
{
    private readonly IServerInfoProvider _provider;
    public HealthController(IServerInfoProvider provider) => _provider = provider;

    [HttpGet]
    public IActionResult Get() => Ok(_provider.Get());
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Controllers\HealthController.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\DecryptionFailedException.cs =====
namespace ThoughtGarden.Api.Data
{
    public class DecryptionFailedException : Exception
    {
        public DecryptionFailedException(string message, Exception? inner = null)
            : base(message, inner) { }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\DecryptionFailedException.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\EncryptionHelper.cs =====
//using System.Security.Cryptography;
//using Microsoft.Extensions.Configuration;

//namespace ThoughtGarden.Api.Data
//{
//    public class EncryptionHelper
//    {
//        private readonly byte[] _key;

//        public EncryptionHelper(IConfiguration config)
//        {
//            // Pull from appsettings.json (Encryption:JournalEncryptionKey)
//            var keyBase64 = config["Encryption:JournalEncryptionKey"];
//            if (string.IsNullOrEmpty(keyBase64))
//                throw new InvalidOperationException("Encryption key not configured in appsettings.json.");

//            _key = Convert.FromBase64String(keyBase64);
//        }

//        public (string CipherText, string IV) Encrypt(string plainText)
//        {
//            using var aes = Aes.Create();
//            aes.Key = _key;
//            aes.GenerateIV();

//            var encryptor = aes.CreateEncryptor(aes.Key, aes.IV);
//            using var ms = new MemoryStream();
//            using (var cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write))
//            using (var sw = new StreamWriter(cs))
//            {
//                sw.Write(plainText);
//            }

//            return (
//                Convert.ToBase64String(ms.ToArray()),
//                Convert.ToBase64String(aes.IV)
//            );
//        }

//        public string Decrypt(string cipherText, string ivBase64)
//        {
//            try
//            {
//                var iv = Convert.FromBase64String(ivBase64);
//                var buffer = Convert.FromBase64String(cipherText);

//                using var aes = Aes.Create();
//                aes.Key = _key;
//                aes.IV = iv;

//                using var decryptor = aes.CreateDecryptor();
//                using var ms = new MemoryStream(buffer);
//                using var cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read);
//                using var sr = new StreamReader(cs);

//                return sr.ReadToEnd();
//            }
//            catch (Exception ex)
//            {
//                throw new DecryptionFailedException("Unable to decrypt journal entry.", ex);
//            }
//        }
//    }
//}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\EncryptionHelper.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\EnvelopeCrypto.cs =====
using System.Security.Cryptography;
using System.Text.Json;

namespace ThoughtGarden.Api.Data;

public sealed class EnvelopeCrypto
{
    private readonly IReadOnlyDictionary<string, byte[]> _keks;
    private readonly string _primaryId;
    private readonly string _recoveryId;

    private const int NonceSize = 12; // GCM nonce
    private const int TagSize = 16; // GCM auth tag

    public EnvelopeCrypto(IConfiguration cfg)
    {
        var enc = cfg.GetSection("Encryption");

        // IDs come straight from configuration; provider is case-insensitive
        _primaryId = (enc["ActivePrimaryKeyId"] ?? throw new("Encryption:ActivePrimaryKeyId missing")).Trim();
        _recoveryId = (enc["ActiveRecoveryKeyId"] ?? throw new("Encryption:ActiveRecoveryKeyId missing")).Trim();

        // Case-insensitive KEK dictionary so lookups work regardless of casing
        _keks = enc.GetSection("Keys").GetChildren()
            .ToDictionary(
                s => s.Key,
                s => Convert.FromBase64String(s.Value!),
                StringComparer.OrdinalIgnoreCase
            );

        if (!_keks.ContainsKey(_primaryId) || !_keks.ContainsKey(_recoveryId))
            throw new InvalidOperationException("Active key ids must exist in Encryption:Keys");
    }

    public string PrimaryKeyId => _primaryId;
    public string RecoveryKeyId => _recoveryId;

    public (string cipher, string nonce, string tag, string wrappedKeysJson, string algVersion)
        Encrypt(string plaintext)
    {
        // per-entry DEK
        Span<byte> dek = stackalloc byte[32];
        RandomNumberGenerator.Fill(dek);

        // data encrypt (AES-GCM, 12B nonce, 16B tag)
        Span<byte> nonce = stackalloc byte[NonceSize];
        RandomNumberGenerator.Fill(nonce);

        var pt = System.Text.Encoding.UTF8.GetBytes(plaintext);
        var ct = new byte[pt.Length];
        Span<byte> tag = stackalloc byte[TagSize];

        using (var gcm = new AesGcm(dek, tagSizeInBytes: TagSize))
            gcm.Encrypt(nonce, pt, ct, tag);

        // wrap DEK under primary + recovery
        var wrapped = new Dictionary<string, string>(2)
        {
            [_primaryId] = WrapDek(_keks[_primaryId], dek),
            [_recoveryId] = WrapDek(_keks[_recoveryId], dek)
        };

        return (Convert.ToBase64String(ct),
                Convert.ToBase64String(nonce),
                Convert.ToBase64String(tag),
                JsonSerializer.Serialize(wrapped),
                "gcm.v1");
    }

    public string Decrypt(string cipher, string nonce, string tag, string wrappedKeysJson)
    {
        var map = JsonSerializer.Deserialize<Dictionary<string, string>>(wrappedKeysJson)
                  ?? throw new DecryptionFailedException("WrappedKeys missing.");

        if (!TryUnwrap(map, _primaryId, out var dek) && !TryAny(map, out dek))
            throw new DecryptionFailedException("No available KEK to unwrap DEK.");

        var ct = Convert.FromBase64String(cipher);
        var n = Convert.FromBase64String(nonce);
        var t = Convert.FromBase64String(tag);
        var pt = new byte[ct.Length];

        using (var gcm = new AesGcm(dek, tagSizeInBytes: TagSize))
            gcm.Decrypt(n, ct, t, pt);

        return System.Text.Encoding.UTF8.GetString(pt);
    }

    // ---------- Public helpers for rotation jobs ----------

    /// <summary>Wrap an existing DEK under a specific keyId and return base64(nonce||tag||wrappedDEK).</summary>
    public string WrapDekWithId(string keyId, ReadOnlySpan<byte> dek)
    {
        if (!_keks.TryGetValue(keyId, out var kek))
            throw new InvalidOperationException($"KEK not found for keyId '{keyId}'.");

        Span<byte> n = stackalloc byte[NonceSize];
        RandomNumberGenerator.Fill(n);

        var c = new byte[dek.Length];
        Span<byte> t = stackalloc byte[TagSize];

        using (var g = new AesGcm(kek, tagSizeInBytes: TagSize))
            g.Encrypt(n, dek, c, t);

        var combined = new byte[NonceSize + TagSize + c.Length];
        n.CopyTo(combined.AsSpan(0, NonceSize));
        t.CopyTo(combined.AsSpan(NonceSize, TagSize));
        Buffer.BlockCopy(c, 0, combined, NonceSize + TagSize, c.Length);

        return Convert.ToBase64String(combined);
    }

    /// <summary>Try to unwrap a DEK from a WrappedKeys map using a specific keyId.</summary>
    public bool TryUnwrapDek(IReadOnlyDictionary<string, string> wrappedMap, string keyId, out byte[] dek)
        => TryUnwrap(wrappedMap, keyId, out dek);

    /// <summary>Try to unwrap a DEK using any available key present in the map.</summary>
    public bool TryUnwrapAny(IReadOnlyDictionary<string, string> wrappedMap, out byte[] dek)
        => TryAny(wrappedMap, out dek);

    // ---------- Internals ----------

    private static string WrapDek(byte[] kek, ReadOnlySpan<byte> dek)
    {
        Span<byte> n = stackalloc byte[NonceSize];
        RandomNumberGenerator.Fill(n);

        var c = new byte[dek.Length];
        Span<byte> t = stackalloc byte[TagSize];

        using (var g = new AesGcm(kek, tagSizeInBytes: TagSize))
            g.Encrypt(n, dek, c, t);

        var combined = new byte[NonceSize + TagSize + c.Length];
        n.CopyTo(combined.AsSpan(0, NonceSize));
        t.CopyTo(combined.AsSpan(NonceSize, TagSize));
        Buffer.BlockCopy(c, 0, combined, NonceSize + TagSize, c.Length);

        return Convert.ToBase64String(combined);
    }

    private bool TryUnwrap(IReadOnlyDictionary<string, string> map, string keyId, out byte[] dek)
    {
        dek = Array.Empty<byte>();

        if (!map.TryGetValue(keyId, out var b64)) return false;      // wrapped DEK present?
        if (!_keks.TryGetValue(keyId, out var kek)) return false;     // KEK present?

        var raw = Convert.FromBase64String(b64);
        var n = raw.AsSpan(0, NonceSize);
        var t = raw.AsSpan(NonceSize, TagSize);
        var c = raw.AsSpan(NonceSize + TagSize);

        dek = new byte[c.Length];
        try
        {
            using var g = new AesGcm(kek, tagSizeInBytes: TagSize);
            g.Decrypt(n, c, t, dek);
            return true;
        }
        catch
        {
            dek = Array.Empty<byte>();
            return false;
        }
    }

    private bool TryAny(IReadOnlyDictionary<string, string> map, out byte[] dek)
    {
        foreach (var (keyId, _) in map)
            if (TryUnwrap(map, keyId, out dek)) return true;

        dek = Array.Empty<byte>();
        return false;
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\EnvelopeCrypto.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\JwtHelper.cs =====
using System.IdentityModel.Tokens.Jwt;
using Microsoft.IdentityModel.Tokens;
using System.Security.Claims;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.Data
{
    public class JwtHelper
    {
        private readonly IConfiguration _config;
        private readonly ThoughtGardenDbContext _db;

        public JwtHelper(IConfiguration config, ThoughtGardenDbContext db)
        {
            _config = config;
            _db = db;
        }

        public string GenerateAccessToken(User user)
        {
            var claims = new[]
            {
                new Claim(JwtRegisteredClaimNames.Sub, user.Id.ToString()),
                new Claim(ClaimTypes.NameIdentifier, user.Id.ToString()),
                new Claim(JwtRegisteredClaimNames.Email, user.Email),
                new Claim("username", user.UserName),
                new Claim(ClaimTypes.Role, user.Role.ToString()),
                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString())
            };

            var keyBytes = Convert.FromBase64String(_config["Jwt:Key"]!);
            var key = new SymmetricSecurityKey(keyBytes);
            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);

            var token = new JwtSecurityToken(
                issuer: _config["Jwt:Issuer"],
                audience: _config["Jwt:Audience"],
                claims: claims,
                expires: DateTime.UtcNow.AddMinutes(15), // short-lived
                signingCredentials: creds
            );

            return new JwtSecurityTokenHandler().WriteToken(token);
        }

        public async Task<string> GenerateRefreshToken(User user)
        {
            var refreshToken = new RefreshToken
            {
                UserId = user.Id,
                Token = Convert.ToBase64String(Guid.NewGuid().ToByteArray()),
                ExpiresAt = DateTime.UtcNow.AddDays(7) // valid for 7 days
            };

            _db.RefreshTokens.Add(refreshToken);
            await _db.SaveChangesAsync();

            return refreshToken.Token;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\JwtHelper.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\PasswordHelper.cs =====
namespace ThoughtGarden.Api.Data
{
    public static class PasswordHelper
    {
        public static string HashPassword(string password) =>
            BCrypt.Net.BCrypt.HashPassword(password);

        public static bool VerifyPassword(string password, string hash) =>
            BCrypt.Net.BCrypt.Verify(password, hash);
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\PasswordHelper.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\ThoughtGardenDBContext.cs =====
using Microsoft.EntityFrameworkCore;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.Data
{
    public class ThoughtGardenDbContext : DbContext
    {
        public ThoughtGardenDbContext(DbContextOptions<ThoughtGardenDbContext> options) : base(options) { }

        public DbSet<User> Users { get; set; }
        public DbSet<JournalEntry> JournalEntries { get; set; }
        public DbSet<EmotionTag> EmotionTags { get; set; }
        public DbSet<EntryEmotion> EntryEmotions { get; set; }
        public DbSet<UserSettings> UserSettings { get; set; }
        public DbSet<GardenState> GardenStates { get; set; }
        public DbSet<PlantType> PlantTypes { get; set; }
        public DbSet<GardenPlant> GardenPlants { get; set; }
        public DbSet<RefreshToken> RefreshTokens { get; set; }
        public DbSet<SubscriptionPlan> SubscriptionPlans { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            // ---- EntryEmotion ----
            modelBuilder.Entity<EntryEmotion>()
                .HasKey(ee => new { ee.EntryId, ee.EmotionId });

            modelBuilder.Entity<EntryEmotion>()
                .HasOne(ee => ee.Entry)
                .WithMany(e => e.SecondaryEmotions)
                .HasForeignKey(ee => ee.EntryId);

            modelBuilder.Entity<EntryEmotion>()
                .HasOne(ee => ee.Emotion)
                .WithMany(et => et.EntryLinks)
                .HasForeignKey(ee => ee.EmotionId);

            // ---- User → UserSettings ----
            modelBuilder.Entity<User>()
                .HasOne(u => u.Settings)
                .WithOne(s => s.User)
                .HasForeignKey<UserSettings>(s => s.UserId);

            // ---- PlantType → EmotionTag ----
            modelBuilder.Entity<PlantType>()
                .HasOne(pt => pt.EmotionTag)
                .WithMany(et => et.PlantTypes)
                .HasForeignKey(pt => pt.EmotionTagId)
                .IsRequired();

            // ---- JournalEntry → User ----
            modelBuilder.Entity<JournalEntry>()
                .HasOne(j => j.User)
                .WithMany(u => u.JournalEntries)
                .HasForeignKey(j => j.UserId)
                .IsRequired();

            // ---- JournalEntry → EmotionTag (Mood) ----
            modelBuilder.Entity<JournalEntry>()
                .HasOne(j => j.Mood)
                .WithMany()
                .HasForeignKey(j => j.MoodId)
                .OnDelete(DeleteBehavior.Restrict);

            // ---- GardenState → User ----
            modelBuilder.Entity<GardenState>()
                .HasOne(gs => gs.User)
                .WithMany(u => u.GardenStates)
                .HasForeignKey(gs => gs.UserId)
                .IsRequired();

            // ---- GardenPlant → GardenState ----
            modelBuilder.Entity<GardenPlant>()
                .HasOne(gp => gp.GardenState)
                .WithMany(gs => gs.GardenPlants)
                .HasForeignKey(gp => gp.GardenStateId)
                .IsRequired();

            // ---- GardenPlant → PlantType ----
            modelBuilder.Entity<GardenPlant>()
                .HasOne(gp => gp.PlantType)
                .WithMany(pt => pt.GardenPlants)
                .HasForeignKey(gp => gp.PlantTypeId)
                .IsRequired();

            // ---- RefreshToken → User ----
            modelBuilder.Entity<RefreshToken>()
                .HasOne(rt => rt.User)
                .WithMany(u => u.RefreshTokens)
                .HasForeignKey(rt => rt.UserId)
                .IsRequired();

            // ---- User → SubscriptionPlan ----
            modelBuilder.Entity<User>()
                .HasOne(u => u.SubscriptionPlan)
                .WithMany(sp => sp.Users)
                .HasForeignKey(u => u.SubscriptionPlanId)
                .IsRequired();

            // ---- Seed Data (static, non-crypto) ----
            var seedDate = new DateTime(2025, 01, 01, 0, 0, 0, DateTimeKind.Utc);

            // 1. Subscription Plans
            modelBuilder.Entity<SubscriptionPlan>().HasData(
                new SubscriptionPlan { Id = 1, Name = "Free", MaxJournalEntriesPerDay = 3, MaxGardenCustomizationsPerDay = 2, Price = 0.00m },
                new SubscriptionPlan { Id = 2, Name = "Pro", MaxJournalEntriesPerDay = int.MaxValue, MaxGardenCustomizationsPerDay = int.MaxValue, Price = 9.99m }
            );

            // 2. Users
            modelBuilder.Entity<User>().HasData(
                new User { Id = 1, UserName = "admin", Email = "admin@example.com", PasswordHash = "$2a$11$bMbVvslv1w8ctmZB9XJJl.EZHIHgshLMc8zGmryaeKOH2nx/iDFZy", Role = UserRole.Admin, SubscriptionPlanId = 2 },
                new User { Id = 2, UserName = "regular", Email = "user@example.com", PasswordHash = "$2a$11$FVx.eRjAlmsDfYXTGklNEuXbP3o4Gb45QVkTop/yK0xo5PkUNHLH6", Role = UserRole.User, SubscriptionPlanId = 1 }
            );

            // 3. EmotionTags
            modelBuilder.Entity<EmotionTag>().HasData(
                new EmotionTag { Id = 1, Name = "Happy", Color = "#FFD700", Icon = "😊" },
                new EmotionTag { Id = 2, Name = "Sad", Color = "#1E90FF", Icon = "😢" },
                new EmotionTag { Id = 3, Name = "Angry", Color = "#FF4500", Icon = "😡" },
                new EmotionTag { Id = 4, Name = "Calm", Color = "#32CD32", Icon = "😌" }
            );

            // 4. Plant Types
            modelBuilder.Entity<PlantType>().HasData(
                new PlantType { Id = 1, Name = "Sunflower", EmotionTagId = 1 },
                new PlantType { Id = 2, Name = "Willow", EmotionTagId = 2 },
                new PlantType { Id = 3, Name = "Cactus", EmotionTagId = 3 },
                new PlantType { Id = 4, Name = "Lotus", EmotionTagId = 4 }
            );

            // 5. GardenStates
            modelBuilder.Entity<GardenState>().HasData(
                new GardenState { Id = 1, UserId = 1, SnapshotAt = seedDate },
                new GardenState { Id = 2, UserId = 2, SnapshotAt = seedDate }
            );

            // 6. JournalEntries — removed from static seeding.
            //    Rationale: envelope-encrypted rows must be generated with the runtime KEKs.
            //    Create demo entries via API after startup so they’re encrypted correctly.

            // 7. EntryEmotions — removed (they referenced seeded JournalEntries).
            //    Add emotions to entries via the API after entries are created.

            // 8. Garden Plants
            modelBuilder.Entity<GardenPlant>().HasData(
                new GardenPlant
                {
                    Id = 1,
                    GardenStateId = 1,
                    PlantTypeId = 1,
                    Stage = GardenPlant.GrowthStage.Bloom,
                    GrowthProgress = 8,
                    CreatedAt = seedDate,
                    UpdatedAt = seedDate,
                    Order = null,
                    IsStored = true
                },
                new GardenPlant
                {
                    Id = 2,
                    GardenStateId = 1,
                    PlantTypeId = 3,
                    Stage = GardenPlant.GrowthStage.Seed,
                    GrowthProgress = 2,
                    CreatedAt = seedDate,
                    UpdatedAt = seedDate,
                    Order = 1,
                    IsStored = false
                },
                new GardenPlant
                {
                    Id = 3,
                    GardenStateId = 2,
                    PlantTypeId = 2,
                    Stage = GardenPlant.GrowthStage.Sprout,
                    GrowthProgress = 5,
                    CreatedAt = seedDate,
                    UpdatedAt = seedDate,
                    Order = 2,
                    IsStored = false
                },
                new GardenPlant
                {
                    Id = 4,
                    GardenStateId = 2,
                    PlantTypeId = 4,
                    Stage = GardenPlant.GrowthStage.Mature,
                    GrowthProgress = 1,
                    CreatedAt = seedDate,
                    UpdatedAt = seedDate,
                    Order = null,
                    IsStored = true
                }
            );
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Data\ThoughtGardenDBContext.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mappers\JournalEntryMapper.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.GraphQL.Types;
using ThoughtGarden.Models;

public static class JournalEntryMapper
{
    public static JournalEntryType ToGraphType(this JournalEntry e, EnvelopeCrypto env)
    {
        // Use envelope fields; IV is still populated, but we don’t rely on it for GCM.
        var plain = env.Decrypt(e.Text, e.DataNonce!, e.DataTag!, e.WrappedKeys!);

        return new JournalEntryType
        {
            Id = e.Id,
            Text = plain,
            CreatedAt = e.CreatedAt,
            UpdatedAt = e.UpdatedAt,
            IsDeleted = e.IsDeleted,
            MoodId = e.MoodId,
            Mood = e.Mood,
            SecondaryEmotions = e.SecondaryEmotions
        };
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mappers\JournalEntryMapper.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\EmotionTagMutations.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using HotChocolate.Authorization;

namespace ThoughtGarden.Api.GraphQL.Mutations
{
    [ExtendObjectType("Mutation")]
    public class EmotionTagMutations
    {
        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        public async Task<EmotionTag> AddEmotionTag(string name, string color, string? icon, [Service] ThoughtGardenDbContext db)
        {
            var tag = new EmotionTag { Name = name, Color = color, Icon = icon };
            db.EmotionTags.Add(tag);
            await db.SaveChangesAsync();
            return tag;
        }

        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        public async Task<EmotionTag?> UpdateEmotionTag(int id, string? name, string? color, string? icon, [Service] ThoughtGardenDbContext db)
        {
            var tag = await db.EmotionTags.FindAsync(id);
            if (tag == null) throw new GraphQLException("Emotion tag not found");

            if (!string.IsNullOrWhiteSpace(name)) tag.Name = name;
            if (!string.IsNullOrWhiteSpace(color)) tag.Color = color;
            if (!string.IsNullOrWhiteSpace(icon)) tag.Icon = icon;

            await db.SaveChangesAsync();
            return tag;
        }

        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        public async Task<bool> DeleteEmotionTag(int id, [Service] ThoughtGardenDbContext db)
        {
            var tag = await db.EmotionTags.FindAsync(id);
            if (tag == null) throw new GraphQLException("Emotion tag not found");

            db.EmotionTags.Remove(tag);
            await db.SaveChangesAsync();
            return true;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\EmotionTagMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\GardenPlantMutations.cs =====
using HotChocolate.Authorization;
using Microsoft.EntityFrameworkCore;
using System.Security.Claims;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using static ThoughtGarden.Models.GardenPlant;

namespace ThoughtGarden.Api.GraphQL.Mutations
{
    [ExtendObjectType("Mutation")]
    public class GardenPlantMutations
    {
        [Authorize]
        public async Task<GardenPlant> AddGardenPlant(int gardenStateId, int plantTypeId, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db, double growthProgress = 0.0, GardenPlant.GrowthStage? stage = null)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            var isOwner = await db.GardenStates.AnyAsync(gs => gs.Id == gardenStateId && gs.UserId == callerId);
            if (!isOwner && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");

            var plant = new GardenPlant { GardenStateId = gardenStateId, PlantTypeId = plantTypeId, GrowthProgress = growthProgress, Stage = stage ?? GardenPlant.GrowthStage.Seed, CreatedAt = DateTime.UtcNow, UpdatedAt = DateTime.UtcNow, Order = null, IsStored = true };
            db.GardenPlants.Add(plant);
            await db.SaveChangesAsync();
            return plant;
        }

        [Authorize]
        public async Task<GardenPlant> GrowGardenPlant(int plantId, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db, int growthMultiplier = 1)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            var plant = await db.GardenPlants.Include(p => p.GardenState).FirstOrDefaultAsync(p => p.Id == plantId);
            if (plant == null) throw new GraphQLException("Plant not found");
            if (plant.GardenState.UserId != callerId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");

            plant.GrowthProgress = plant.GrowthProgress + (5 * growthMultiplier);

            if (plant.GrowthProgress >= 100)
            {
                plant.GrowthProgress = 0;

                if (plant.Stage < GrowthStage.Bloom)
                {
                    plant.Stage++;
                }
            }

            await db.SaveChangesAsync();
            return plant;
        }

        [Authorize]
        public async Task<GardenPlant?> MatureGardenPlant(
    int plantId,
    ClaimsPrincipal claims,
    [Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);

            var plant = await db.GardenPlants
                .Include(p => p.GardenState)
                .FirstOrDefaultAsync(p => p.Id == plantId);

            if (plant == null)
                throw new GraphQLException("Plant not found");

            if (plant.GardenState.UserId != userId && !claims.IsInRole("Admin"))
                throw new GraphQLException("Not authorized");

            if (plant.Stage != GardenPlant.GrowthStage.Bloom)
                throw new GraphQLException("Only blooming plants can mature");

            plant.Stage = GardenPlant.GrowthStage.Mature;
            plant.UpdatedAt = DateTime.UtcNow;

            await db.SaveChangesAsync();

            return plant;
        }



        [Authorize]
        public async Task<GardenPlant?> MoveGardenPlant(int plantId, int newOrder, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            var plant = await db.GardenPlants.Include(p => p.GardenState).FirstOrDefaultAsync(p => p.Id == plantId);
            if (plant == null) throw new GraphQLException("Plant not found");
            if (plant.GardenState.UserId != callerId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");

            plant.Order = newOrder;
            plant.UpdatedAt = DateTime.UtcNow;
            await db.SaveChangesAsync();
            return plant;
        }

        [Authorize]
        public async Task<GardenPlant?> StoreGardenPlant(int plantId, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            var plant = await db.GardenPlants.Include(p => p.GardenState).FirstOrDefaultAsync(p => p.Id == plantId);
            if (plant == null) throw new GraphQLException("Plant not found");
            if (plant.GardenState.UserId != callerId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");

            plant.IsStored = true;
            plant.UpdatedAt = DateTime.UtcNow;
            await db.SaveChangesAsync();
            return plant;
        }

        [Authorize]
        public async Task<GardenPlant?> RestoreGardenPlant(int plantId, int newOrder, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            var plant = await db.GardenPlants.Include(p => p.GardenState).FirstOrDefaultAsync(p => p.Id == plantId);
            if (plant == null) throw new GraphQLException("Plant not found");
            if (plant.GardenState.UserId != callerId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");

            plant.IsStored = false;
            plant.Order = newOrder;
            plant.UpdatedAt = DateTime.UtcNow;
            await db.SaveChangesAsync();
            return plant;
        }

        [Authorize]
        public async Task<bool> DeleteGardenPlant(int id, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            var plant = await db.GardenPlants.Include(p => p.GardenState).FirstOrDefaultAsync(p => p.Id == id);
            if (plant == null) throw new GraphQLException("Plant not found");
            if (plant.GardenState.UserId != callerId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");

            db.GardenPlants.Remove(plant);
            await db.SaveChangesAsync();
            return true;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\GardenPlantMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\GardenStateMutations.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using System.Security.Claims;
using HotChocolate.Authorization;

namespace ThoughtGarden.Api.GraphQL.Mutations
{
    [ExtendObjectType("Mutation")]
    public class GardenStateMutations
    {
        [Authorize]
        public async Task<GardenState> CreateGardenState(ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var state = new GardenState { UserId = userId, SnapshotAt = DateTime.UtcNow };
            db.GardenStates.Add(state);
            await db.SaveChangesAsync();
            return state;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\GardenStateMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\JournalEntryMutations.cs =====
using HotChocolate.Authorization;
using Microsoft.EntityFrameworkCore;
using System.Security.Claims;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.GraphQL.Types;
using ThoughtGarden.Models;
using ThoughtGarden.Models.Inputs;

namespace ThoughtGarden.Api.GraphQL.Mutations
{
    [ExtendObjectType("Mutation")]
    public class JournalEntryMutations
    {
        [Authorize]
        public async Task<JournalEntryType> AddJournalEntry(string text, int moodId, List<SecondaryEmotionInput>? secondaryEmotions, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db, [Service] EnvelopeCrypto crypto)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var enc = crypto.Encrypt(text);

            var entry = new JournalEntry
            {
                UserId = userId,
                MoodId = moodId,

                // encryption fields (preserve your property names)
                Text = enc.cipher,
                DataNonce = enc.nonce,
                DataTag = enc.tag,
                WrappedKeys = enc.wrappedKeysJson,
                AlgVersion = enc.algVersion,

                CreatedAt = DateTime.UtcNow,
                UpdatedAt = DateTime.UtcNow,
                IsDeleted = false
            };

            db.JournalEntries.Add(entry);
            await db.SaveChangesAsync();

            if (secondaryEmotions != null && secondaryEmotions.Count > 0)
            {
                foreach (var se in secondaryEmotions)
                {
                    db.EntryEmotions.Add(new EntryEmotion { EntryId = entry.Id, EmotionId = se.EmotionId, Intensity = se.Intensity });
                }
                await db.SaveChangesAsync();
            }
            await db.Entry(entry).Reference(e => e.Mood).LoadAsync();
            await db.Entry(entry).Collection(e => e.SecondaryEmotions).Query().Include(se => se.Emotion).LoadAsync();

            return entry.ToGraphType(crypto);
        }

        [Authorize]
        public async Task<JournalEntryType> UpdateJournalEntry(int id, string? text, int? moodId, List<SecondaryEmotionInput>? secondaryEmotions, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db, [Service] EnvelopeCrypto crypto)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            var isAdmin = role == UserRole.Admin.ToString();

            var entry = await db.JournalEntries
                .Include(e => e.SecondaryEmotions)
                .FirstOrDefaultAsync(e => e.Id == id && !e.IsDeleted);

            if (entry == null) throw new GraphQLException("Entry not found");
            if (!isAdmin && entry.UserId != userId) throw new GraphQLException("Not authorized");

            if (!string.IsNullOrWhiteSpace(text))
            {
                var enc = crypto.Encrypt(text);
                entry.Text = enc.cipher;        // base64 ciphertext
                entry.DataNonce = enc.nonce;         // base64(12)
                entry.DataTag = enc.tag;           // base64(16)
                entry.WrappedKeys = enc.wrappedKeysJson;
                entry.AlgVersion = enc.algVersion;    // "gcm.v1"
            }

            if (moodId.HasValue) entry.MoodId = moodId.Value;

            if (secondaryEmotions != null)
            {
                db.EntryEmotions.RemoveRange(entry.SecondaryEmotions);
                foreach (var se in secondaryEmotions)
                {
                    db.EntryEmotions.Add(new EntryEmotion { EntryId = entry.Id, EmotionId = se.EmotionId, Intensity = se.Intensity });
                }
            }

            entry.UpdatedAt = DateTime.UtcNow;
            await db.SaveChangesAsync();

            await db.Entry(entry).Reference(e => e.Mood).LoadAsync();
            await db.Entry(entry).Collection(e => e.SecondaryEmotions).Query().Include(se => se.Emotion).LoadAsync();

            return entry.ToGraphType(crypto);
        }

        [Authorize]
        public async Task<bool> DeleteJournalEntry(int id, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            var isAdmin = role == UserRole.Admin.ToString();

            var entry = await db.JournalEntries.FirstOrDefaultAsync(e => e.Id == id && !e.IsDeleted);
            if (entry == null) throw new GraphQLException("Entry not found");
            if (!isAdmin && entry.UserId != userId) throw new GraphQLException("Not authorized");

            entry.IsDeleted = true;
            entry.UpdatedAt = DateTime.UtcNow;
            await db.SaveChangesAsync();

            return true;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\JournalEntryMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\MaintenanceMutations.cs =====
using HotChocolate.Authorization;
using Microsoft.EntityFrameworkCore;
using ThoughtGarden.Api.Data;

namespace ThoughtGarden.Api.GraphQL.Mutations
{

    [ExtendObjectType("Mutation")]
    public sealed class MaintenanceMutations
    {
        private static bool IsDevOrTesting(Microsoft.Extensions.Hosting.IHostEnvironment envHost) => envHost.IsDevelopment() || envHost.IsEnvironment("Testing");
        // Re-wrap DEKs under a new primary (no data decrypt)
        [Authorize]
        public async Task<CombinedRewrapResult> RewrapAndPrunePrimary(
    string oldPrimaryId,
    string newPrimaryId,
    [Service] ThoughtGardenDbContext db,
    [Service] EnvelopeCrypto env,
    [Service] Microsoft.Extensions.Hosting.IHostEnvironment envHost,
    CancellationToken ct)
        {
            if (!IsDevOrTesting(envHost)) throw new GraphQLException("not authorized");

            const int batchSize = 500;
            var result = new CombinedRewrapResult();
            var lastId = 0;
            var currentRecovery = env.RecoveryKeyId;

            while (true)
            {
                var batch = await db.JournalEntries
                    .Where(e => e.WrappedKeys != null && e.Id > lastId && !e.IsDeleted)
                    .OrderBy(e => e.Id)
                    .Take(batchSize)
                    .ToListAsync(ct);

                if (batch.Count == 0) break;

                foreach (var e in batch)
                {
                    lastId = e.Id;

                    Dictionary<string, string>? map;
                    try { map = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, string>>(e.WrappedKeys!); }
                    catch { result.SkippedInvalidJson++; continue; }
                    if (map is null || map.Count == 0) { result.SkippedInvalidJson++; continue; }

                    var hadOld = map.ContainsKey(oldPrimaryId);
                    var hadNew = map.ContainsKey(newPrimaryId);
                    var hadRecovery = map.ContainsKey(currentRecovery);

                    // Skip rows that already have new primary and don't have the old one anymore
                    if (!hadOld && hadNew) { result.AlreadyUpToDate++; continue; }

                    // Unwrap DEK via any available wrap
                    if (!env.TryUnwrapAny(map, out var dek))
                    {
                        result.SkippedUnwrapFailed++;
                        continue;
                    }

                    // Ensure recovery wrap exists before pruning old
                    if (!hadRecovery)
                    {
                        map[currentRecovery] = env.WrapDekWithId(currentRecovery, dek);
                        result.AddedRecovery++;
                    }

                    // Add new primary wrap (if missing)
                    if (!hadNew)
                    {
                        map[newPrimaryId] = env.WrapDekWithId(newPrimaryId, dek);
                        result.AddedNewPrimary++;
                    }

                    // Remove old primary wrap (if present)
                    if (hadOld && map.Remove(oldPrimaryId)) result.PrunedOldPrimary++;

                    e.WrappedKeys = System.Text.Json.JsonSerializer.Serialize(map);
                    e.UpdatedAt = DateTime.UtcNow;
                    result.UpdatedRows++;
                }

                await db.SaveChangesAsync(ct);
            }

            return result;
        }

        public sealed class CombinedRewrapResult
        {
            public int UpdatedRows { get; set; }
            public int AddedNewPrimary { get; set; }
            public int AddedRecovery { get; set; }
            public int PrunedOldPrimary { get; set; }
            public int SkippedUnwrapFailed { get; set; }
            public int SkippedInvalidJson { get; set; }
            public int AlreadyUpToDate { get; set; }
        }


        // Full hygiene after compromise: re-encrypt data with new DEKs (uses current active keys)
        [Authorize]
        public async Task<bool> ReencryptAfterCompromise(
    string compromisedKeyId,
    [Service] ThoughtGardenDbContext db,
    [Service] EnvelopeCrypto env,
    [Service] IHostEnvironment envHost,
    CancellationToken ct)
        {
            if (!IsDevOrTesting(envHost)) throw new GraphQLException("not authorized");

            const int batchSize = 250;
            var lastId = 0;

            while (true)
            {
                var batch = await db.JournalEntries
                    .Where(e => e.WrappedKeys != null
                                && e.Id > lastId
                                && EF.Functions.ILike(e.WrappedKeys!, $"%\"{compromisedKeyId}\"%"))
                    .OrderBy(e => e.Id)
                    .Take(batchSize)
                    .ToListAsync(ct);

                if (batch.Count == 0) break;

                foreach (var e in batch)
                {
                    // move cursor
                    if (e.Id > lastId) lastId = e.Id;

                    var plaintext = env.Decrypt(e.Text, e.DataNonce!, e.DataTag!, e.WrappedKeys!);

                    var enc = env.Encrypt(plaintext);
                    e.Text = enc.cipher;
                    e.DataNonce = enc.nonce;
                    e.DataTag = enc.tag;
                    e.WrappedKeys = enc.wrappedKeysJson; // only active primary + recovery now
                    e.AlgVersion = enc.algVersion;
                    e.UpdatedAt = DateTime.UtcNow;
                }

                await db.SaveChangesAsync(ct);
            }

            return true;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\MaintenanceMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\PlantTypeMutations.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using HotChocolate.Authorization;

namespace ThoughtGarden.Api.GraphQL.Mutations
{
    [ExtendObjectType("Mutation")]
    public class PlantTypeMutations
    {
        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        public async Task<PlantType> AddPlantType(string name, int emotionTagId, [Service] ThoughtGardenDbContext db)
        {
            var type = new PlantType { Name = name, EmotionTagId = emotionTagId };
            db.PlantTypes.Add(type);
            await db.SaveChangesAsync();
            return type;
        }

        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        public async Task<PlantType?> UpdatePlantType(int id, string? name, int? emotionTagId, [Service] ThoughtGardenDbContext db)
        {
            var type = await db.PlantTypes.FindAsync(id);
            if (type == null) throw new GraphQLException("Plant type not found");

            if (!string.IsNullOrWhiteSpace(name)) type.Name = name;
            if (emotionTagId.HasValue) type.EmotionTagId = emotionTagId.Value;

            await db.SaveChangesAsync();
            return type;
        }

        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        public async Task<bool> DeletePlantType(int id, [Service] ThoughtGardenDbContext db)
        {
            var type = await db.PlantTypes.FindAsync(id);
            if (type == null) throw new GraphQLException("Plant type not found");

            db.PlantTypes.Remove(type);
            await db.SaveChangesAsync();
            return true;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\PlantTypeMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\UserMutations.cs =====
using HotChocolate.Authorization;
using Microsoft.EntityFrameworkCore;
using System.Security.Claims;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.GraphQL.Payloads;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.GraphQL.Mutations
{
    [ExtendObjectType("Mutation")]
    public class UserMutations
    {
        // Update user email/username
        [Authorize]
        public async Task<User?> UpdateUser(int id, string? userName, string? email, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            // only allow self-update unless Admin
            if (userId != id && role != UserRole.Admin.ToString())
                throw new GraphQLException("Not authorized to update this user");

            var user = await db.Users.FindAsync(id);
            if (user == null) throw new GraphQLException("User not found");

            if (!string.IsNullOrWhiteSpace(userName)) user.UserName = userName;
            if (!string.IsNullOrWhiteSpace(email)) user.Email = email;

            await db.SaveChangesAsync();
            return user;
        }

        // Delete user
        [Authorize]
        public async Task<bool> DeleteUser(int id, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);

            // only allow self-delete unless Admin
            if (userId != id && role != UserRole.Admin.ToString())
                throw new GraphQLException("Not authorized to delete this user");

            var user = await db.Users.FindAsync(id);
            if (user == null) throw new GraphQLException("User not found");

            db.Users.Remove(user);  // hard delete for now (MVP)
            await db.SaveChangesAsync();
            return true;
        }

        // Update Password
        [Authorize]
        public async Task<bool> UpdatePassword(string currentPassword,string newPassword,ClaimsPrincipal claims,[Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);

            var user = await db.Users.FirstOrDefaultAsync(u => u.Id == userId);
            if (user == null)
                throw new GraphQLException("User not found");

            // verify current password
            if (!PasswordHelper.VerifyPassword(currentPassword, user.PasswordHash))
                throw new GraphQLException("Current password is incorrect");

            // hash and update
            user.PasswordHash = PasswordHelper.HashPassword(newPassword);
            await db.SaveChangesAsync();

            return true;
        }

        // Login
        public async Task<AuthPayload> LoginUser(string email,string password,[Service] ThoughtGardenDbContext db,[Service] JwtHelper jwtHelper)
        {
            var user = await db.Users.FirstOrDefaultAsync(u => u.Email == email);
            if (user == null) throw new GraphQLException("User not found");

            if (!PasswordHelper.VerifyPassword(password, user.PasswordHash))
                throw new GraphQLException("Invalid password");

            return new AuthPayload
            {
                AccessToken = jwtHelper.GenerateAccessToken(user),
                RefreshToken = await jwtHelper.GenerateRefreshToken(user)
            };
        }

        // REGISTER
        public async Task<User> RegisterUser(string username, string email, string password, [Service] ThoughtGardenDbContext db)
        {
            var hash = PasswordHelper.HashPassword(password);

            var user = new User
            {
                UserName = username,
                Email = email,
                PasswordHash = hash,
                Role = UserRole.User,
                SubscriptionPlanId = 1
            };

            db.Users.Add(user);
            await db.SaveChangesAsync();

            return user;
        }

        [Authorize]
        public async Task<AuthPayload> RefreshToken(string refreshToken, [Service] ThoughtGardenDbContext db, [Service] JwtHelper jwtHelper)
        {
            var stored = await db.RefreshTokens.Include(r => r.User).FirstOrDefaultAsync(r => r.Token == refreshToken);
            if (stored == null || !stored.IsActive) throw new GraphQLException("Invalid or expired refresh token");

            stored.RevokedAt = DateTime.UtcNow;
            await db.SaveChangesAsync();

            var access = jwtHelper.GenerateAccessToken(stored.User);
            var refresh = await jwtHelper.GenerateRefreshToken(stored.User);

            return new AuthPayload { AccessToken = access, RefreshToken = refresh };
        }


        // Logout
        public async Task<bool> LogoutUser(string refreshToken,[Service] ThoughtGardenDbContext db)
        {
            var stored = await db.RefreshTokens.FirstOrDefaultAsync(r => r.Token == refreshToken);
            if (stored != null && stored.IsActive)
            {
                stored.RevokedAt = DateTime.UtcNow;
                await db.SaveChangesAsync();
            }

            return true;
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Mutations\UserMutations.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Payloads\AuthPayload.cs =====
namespace ThoughtGarden.Api.GraphQL.Payloads
{
    public class AuthPayload
    {
        public string AccessToken { get; set; } = null!;
        public string RefreshToken { get; set; } = null!;
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Payloads\AuthPayload.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\EmotionQueries.cs =====
using Microsoft.EntityFrameworkCore;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.GraphQL.Queries
{
    [ExtendObjectType("Query")]
    public class EmotionQueries
    {
        [UseProjection]
        public IQueryable<EmotionTag> GetEmotions([Service] ThoughtGardenDbContext db) => db.EmotionTags;

        [UseProjection]
        public IQueryable<EmotionTag> GetEmotionById(int id, [Service] ThoughtGardenDbContext db) =>
            db.EmotionTags.Where(e => e.Id == id);
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\EmotionQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\GardenPlantQueries.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using System.Security.Claims;
using HotChocolate.Authorization;

namespace ThoughtGarden.Api.GraphQL.Queries
{
    [ExtendObjectType("Query")]
    public class GardenPlantQueries
    {
        [Authorize]
        [UseProjection]
        public IQueryable<GardenPlant> GetStoredPlants(int userId, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            if (callerId != userId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");
            return db.GardenPlants.Where(p => p.GardenState.UserId == userId && p.IsStored);
        }

        [Authorize]
        [UseProjection]
        public IQueryable<GardenPlant> GetActivePlants(int gardenStateId, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            var isAdmin = role == UserRole.Admin.ToString();

            var ownerAllowed = isAdmin || db.GardenStates.Any(gs => gs.Id == gardenStateId && gs.UserId == callerId);
            if (!ownerAllowed)
                throw new GraphQLException("Not authorized");

            return db.GardenPlants
                .Where(p => p.GardenStateId == gardenStateId && !p.IsStored)
                .OrderBy(p => p.Order);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\GardenPlantQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\GardenQueries.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using System.Security.Claims;
using HotChocolate.Authorization;

namespace ThoughtGarden.Api.GraphQL.Queries
{
    [ExtendObjectType("Query")]
    public class GardenQueries
    {
        [Authorize]
        [UseProjection]
        public IQueryable<GardenState> GetGardens(int userId, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            if (callerId != userId && role != UserRole.Admin.ToString()) throw new GraphQLException("Not authorized");
            return db.GardenStates.Where(gs => gs.UserId == userId);
        }

        [Authorize]
        public GardenState? GetGardenById(int id, ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            var role = claims.FindFirstValue(ClaimTypes.Role);
            var isAdmin = role == UserRole.Admin.ToString();

            var garden = db.GardenStates.FirstOrDefault(g => g.Id == id);
            if (garden == null) return null;

            if (!isAdmin && garden.UserId != callerId)
                throw new GraphQLException("Not authorized");

            return garden;
        }

    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\GardenQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\JournalEntryQueries.cs =====
using HotChocolate.Authorization;
using Microsoft.EntityFrameworkCore;
using System.Security.Claims;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.GraphQL.Types;
using ThoughtGarden.Models;

[ExtendObjectType("Query")]
public class JournalEntryQueries
{
    [Authorize]
    public IEnumerable<JournalEntryType> GetJournalEntries(
    ClaimsPrincipal claims,
    [Service] ThoughtGardenDbContext db,
    [Service] EnvelopeCrypto crypto)
    {
        var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
        var role = claims.FindFirstValue(ClaimTypes.Role);
        var isAdmin = string.Equals(role, UserRole.Admin.ToString(), StringComparison.Ordinal);

        var baseQuery = db.JournalEntries
            .AsNoTracking()
            .Include(e => e.Mood)
            .Include(e => e.SecondaryEmotions).ThenInclude(se => se.Emotion)
            .Where(j => !j.IsDeleted);

        // Admins can view all; non-admins only their own
        var entries = isAdmin
            ? baseQuery.ToList()
            : baseQuery.Where(j => j.UserId == callerId).ToList();

        foreach (var e in entries)
        {
            var isOwner = e.UserId == callerId;

            if (isOwner)
            {
                // decrypt for owner (admin or not)
                string plain;
                try { plain = crypto.Decrypt(e.Text, e.DataNonce!, e.DataTag!, e.WrappedKeys!); }
                catch (DecryptionFailedException) { throw new GraphQLException("Unable to decrypt journal entry."); }

                yield return new JournalEntryType
                {
                    Id = e.Id,
                    Text = plain,
                    CreatedAt = e.CreatedAt,
                    UpdatedAt = e.UpdatedAt,
                    IsDeleted = e.IsDeleted,
                    MoodId = e.MoodId,
                    Mood = e.Mood,
                    SecondaryEmotions = e.SecondaryEmotions
                };
            }
            else if (isAdmin)
            {
                // admin on others' entries: do NOT decrypt
                yield return new JournalEntryType
                {
                    Id = e.Id,
                    Text = "[encrypted]",
                    CreatedAt = e.CreatedAt,
                    UpdatedAt = e.UpdatedAt,
                    IsDeleted = e.IsDeleted,
                    MoodId = e.MoodId,
                    Mood = e.Mood,
                    SecondaryEmotions = e.SecondaryEmotions
                };
            }
            else
            {
                // non-admin, non-owner: blocked
                throw new GraphQLException("Not authorized");
            }
        }
    }


    [Authorize]
    public JournalEntryType GetJournalEntryById(
        int id,
        ClaimsPrincipal claims,
        [Service] ThoughtGardenDbContext db,
        [Service] EnvelopeCrypto crypto)
    {
        var callerId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
        var role = claims.FindFirstValue(ClaimTypes.Role);
        var isAdmin = string.Equals(role, UserRole.Admin.ToString(), StringComparison.Ordinal);

        var entry = db.JournalEntries
            .AsNoTracking()
            .Include(e => e.Mood)
            .Include(e => e.SecondaryEmotions).ThenInclude(se => se.Emotion)
            .FirstOrDefault(j => j.Id == id && !j.IsDeleted);

        if (entry == null) throw new GraphQLException("Entry not found");

        // Owner gets decrypted; Admin can view metadata for any entry without decrypting
        if (entry.UserId != callerId && !isAdmin) throw new GraphQLException("not authorized");

        if (isAdmin && entry.UserId != callerId)
        {
            // Admin non-owner view: do NOT decrypt
            return new JournalEntryType
            {
                Id = entry.Id,
                Text = "[encrypted]",
                CreatedAt = entry.CreatedAt,
                UpdatedAt = entry.UpdatedAt,
                IsDeleted = entry.IsDeleted,
                MoodId = entry.MoodId,
                Mood = entry.Mood,
                SecondaryEmotions = entry.SecondaryEmotions
            };
        }

        // Owner (or admin viewing own entry) — decrypt
        try
        {
            var plain = crypto.Decrypt(entry.Text, entry.DataNonce!, entry.DataTag!, entry.WrappedKeys!);
            return new JournalEntryType
            {
                Id = entry.Id,
                Text = plain,
                CreatedAt = entry.CreatedAt,
                UpdatedAt = entry.UpdatedAt,
                IsDeleted = entry.IsDeleted,
                MoodId = entry.MoodId,
                Mood = entry.Mood,
                SecondaryEmotions = entry.SecondaryEmotions
            };
        }
        catch (DecryptionFailedException)
        {
            throw new GraphQLException("Unable to decrypt journal entry.");
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\JournalEntryQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\PlantTypeQueries.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using HotChocolate.Authorization;
using HotChocolate;

namespace ThoughtGarden.Api.GraphQL.Queries
{
    [ExtendObjectType("Query")]
    public class PlantTypeQueries
    {
        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        [UseProjection]
        public IQueryable<PlantType> GetPlantTypes([Service] ThoughtGardenDbContext db)
        {
            return db.PlantTypes;
        }

        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        [UseProjection]
        public IQueryable<PlantType> GetPlantTypeById(int id, [Service] ThoughtGardenDbContext db)
        {
            return db.PlantTypes.Where(p => p.Id == id);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\PlantTypeQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\ServerInfoQueries.cs =====
// src/ThoughtGarden.Api/GraphQL/Queries/ServerInfoQueries.cs
using ThoughtGarden.Api.Infrastructure;

namespace ThoughtGarden.Api.GraphQL.Queries;

[ExtendObjectType("Query")]
public sealed class ServerInfoQueries
{
    public ServerInfo ServerInfo([Service] IServerInfoProvider provider) => provider.Get();
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\ServerInfoQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\UserQueries.cs =====
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;
using System.Security.Claims;
using HotChocolate.Authorization;

namespace ThoughtGarden.Api.GraphQL.Queries
{
    [ExtendObjectType("Query")]
    public class UserQueries
    {
        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        [UseProjection]
        public IQueryable<User> GetUsers([Service] ThoughtGardenDbContext db) => db.Users;

        [Authorize(Roles = new[] { nameof(UserRole.Admin) })]
        [UseProjection]
        public IQueryable<User> GetUserById(int id, [Service] ThoughtGardenDbContext db) => db.Users.Where(u => u.Id == id);

        [Authorize]
        [UseProjection]
        public IQueryable<User> GetProfile(ClaimsPrincipal claims, [Service] ThoughtGardenDbContext db)
        {
            var userId = int.Parse(claims.FindFirstValue(ClaimTypes.NameIdentifier)!);
            return db.Users.Where(u => u.Id == userId);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\GraphQL\Queries\UserQueries.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Infrastructure\DevSeedHostedService.cs =====
using Microsoft.EntityFrameworkCore;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.Infrastructure;

public sealed class DevSeedHostedService : IHostedService
{
    private readonly IServiceScopeFactory _scopeFactory;
    private readonly ILogger<DevSeedHostedService> _log;
    private readonly IHostEnvironment _env;

    public DevSeedHostedService(IServiceScopeFactory scopeFactory, ILogger<DevSeedHostedService> log, IHostEnvironment env)
    {
        _scopeFactory = scopeFactory;
        _log = log;
        _env = env;
    }

    public async Task StartAsync(CancellationToken cancellationToken)
    {
        if (!_env.IsDevelopment())
        {
            _log.LogDebug("DevSeedHostedService skipped (not Development).");
            return;
        }

        using var scope = _scopeFactory.CreateScope();
        var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
        var crypto = scope.ServiceProvider.GetRequiredService<EnvelopeCrypto>();

        // Idempotent: bail if anything already exists
        if (await db.JournalEntries.AnyAsync(cancellationToken))
        {
            _log.LogDebug("Dev seed skipped (JournalEntries already present).");
            return;
        }

        var now = DateTime.UtcNow;

        // Ensure referenced rows exist (Users, EmotionTags are seeded via HasData)
        // Create two demo entries per user using current active KEKs
        void AddEntry(int userId, int moodId, string text, IEnumerable<(int emotionId, int intensity)> seconds)
        {
            var enc = crypto.Encrypt(text);
            var entry = new JournalEntry
            {
                UserId = userId,
                MoodId = moodId,
                Text = enc.cipher,
                DataNonce = enc.nonce,    // 12B
                DataTag = enc.tag,        // 16B
                WrappedKeys = enc.wrappedKeysJson,
                AlgVersion = enc.algVersion,
                CreatedAt = now,
                UpdatedAt = now,
                IsDeleted = false
            };
            db.JournalEntries.Add(entry);
            db.SaveChanges(); // get Entry.Id for join table

            foreach (var (emotionId, intensity) in seconds)
            {
                db.EntryEmotions.Add(new EntryEmotion
                {
                    EntryId = entry.Id,
                    EmotionId = emotionId,
                    Intensity = intensity
                });
            }
        }

        // User 1 (admin) samples
        AddEntry(1, moodId: 1, text: "First sunrise journal — feeling optimistic.",
                 seconds: new[] { (4, 5) }); // Calm
        AddEntry(1, moodId: 3, text: "Busy day; a bit on edge but productive.",
                 seconds: new[] { (3, 2), (1, 3) }); // Angry(2), Happy(3)

        // User 2 (regular) samples
        AddEntry(2, moodId: 2, text: "Missing home today.",
                 seconds: new[] { (2, 4) }); // Sad
        AddEntry(2, moodId: 4, text: "Post-run calm. Breathing feels easy.",
                 seconds: new[] { (4, 5) }); // Calm

        await db.SaveChangesAsync(cancellationToken);
        _log.LogInformation("Dev seed complete: demo journal entries created with envelope encryption.");
    }

    public Task StopAsync(CancellationToken cancellationToken) => Task.CompletedTask;
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Infrastructure\DevSeedHostedService.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Infrastructure\ServerInfo.cs =====
// src/ThoughtGarden.Api/Infrastructure/ServerInfo.cs
using System.Reflection;

namespace ThoughtGarden.Api.Infrastructure;

public record ServerInfo(
    string status,
    DateTime timestampUtc,
    string timeZoneId,
    string version,
    string environment,
    double uptimeSeconds,
    string? commitSha
);

public interface IServerInfoProvider
{
    ServerInfo Get();
}

public sealed class ServerInfoProvider(IHostEnvironment env) : IServerInfoProvider
{
    private static readonly DateTime StartedUtc = DateTime.UtcNow;

    public ServerInfo Get()
    {
        var asm = Assembly.GetExecutingAssembly();
        var version =
            asm.GetCustomAttribute<AssemblyInformationalVersionAttribute>()?.InformationalVersion
            ?? asm.GetName().Version?.ToString()
            ?? "unknown";

        var commit = Environment.GetEnvironmentVariable("BUILD_SHA")
                    ?? Environment.GetEnvironmentVariable("GITHUB_SHA");

        return new ServerInfo(
            status: "Healthy",
            timestampUtc: DateTime.UtcNow,
            timeZoneId: TimeZoneInfo.Local.Id,
            version: version,
            environment: env.EnvironmentName,
            uptimeSeconds: (DateTime.UtcNow - StartedUtc).TotalSeconds,
            commitSha: commit
        );
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Infrastructure\ServerInfo.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Migrations\20251005045937_InitialCreate.cs =====
using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace ThoughtGarden.Api.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "emotion_tags",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    name = table.Column<string>(type: "text", nullable: false),
                    color = table.Column<string>(type: "text", nullable: false),
                    icon = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_emotion_tags", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "subscription_plans",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    name = table.Column<string>(type: "text", nullable: false),
                    max_journal_entries_per_day = table.Column<int>(type: "integer", nullable: false),
                    max_garden_customizations_per_day = table.Column<int>(type: "integer", nullable: false),
                    price = table.Column<decimal>(type: "numeric", nullable: false),
                    billing_period = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_subscription_plans", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "plant_types",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    name = table.Column<string>(type: "text", nullable: false),
                    emotion_tag_id = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_plant_types", x => x.id);
                    table.ForeignKey(
                        name: "fk_plant_types_emotion_tags_emotion_tag_id",
                        column: x => x.emotion_tag_id,
                        principalTable: "emotion_tags",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "users",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_name = table.Column<string>(type: "text", nullable: false),
                    email = table.Column<string>(type: "text", nullable: false),
                    password_hash = table.Column<string>(type: "text", nullable: false),
                    role = table.Column<int>(type: "integer", nullable: false),
                    subscription_plan_id = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_users", x => x.id);
                    table.ForeignKey(
                        name: "fk_users_subscription_plans_subscription_plan_id",
                        column: x => x.subscription_plan_id,
                        principalTable: "subscription_plans",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "garden_states",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<int>(type: "integer", nullable: false),
                    size = table.Column<int>(type: "integer", nullable: false),
                    snapshot_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_garden_states", x => x.id);
                    table.ForeignKey(
                        name: "fk_garden_states_users_user_id",
                        column: x => x.user_id,
                        principalTable: "users",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "journal_entries",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    text = table.Column<string>(type: "text", nullable: false),
                    data_nonce = table.Column<string>(type: "text", nullable: true),
                    data_tag = table.Column<string>(type: "text", nullable: true),
                    wrapped_keys = table.Column<string>(type: "text", nullable: true),
                    alg_version = table.Column<string>(type: "text", nullable: true),
                    created_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    updated_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    is_deleted = table.Column<bool>(type: "boolean", nullable: false),
                    user_id = table.Column<int>(type: "integer", nullable: false),
                    mood_id = table.Column<int>(type: "integer", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_journal_entries", x => x.id);
                    table.ForeignKey(
                        name: "fk_journal_entries_emotion_tags_mood_id",
                        column: x => x.mood_id,
                        principalTable: "emotion_tags",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "fk_journal_entries_users_user_id",
                        column: x => x.user_id,
                        principalTable: "users",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "refresh_tokens",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<int>(type: "integer", nullable: false),
                    token = table.Column<string>(type: "text", nullable: false),
                    expires_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    created_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    revoked_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_refresh_tokens", x => x.id);
                    table.ForeignKey(
                        name: "fk_refresh_tokens_users_user_id",
                        column: x => x.user_id,
                        principalTable: "users",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "user_settings",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    user_id = table.Column<int>(type: "integer", nullable: false),
                    theme = table.Column<string>(type: "text", nullable: false),
                    encryption_level = table.Column<string>(type: "text", nullable: false),
                    reminders = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_user_settings", x => x.id);
                    table.ForeignKey(
                        name: "fk_user_settings_users_user_id",
                        column: x => x.user_id,
                        principalTable: "users",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "garden_plants",
                columns: table => new
                {
                    id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    garden_state_id = table.Column<int>(type: "integer", nullable: false),
                    plant_type_id = table.Column<int>(type: "integer", nullable: false),
                    growth_progress = table.Column<double>(type: "double precision", nullable: false),
                    stage = table.Column<int>(type: "integer", nullable: false),
                    created_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    updated_at = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    order = table.Column<int>(type: "integer", nullable: true),
                    is_stored = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_garden_plants", x => x.id);
                    table.ForeignKey(
                        name: "fk_garden_plants_garden_states_garden_state_id",
                        column: x => x.garden_state_id,
                        principalTable: "garden_states",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_garden_plants_plant_types_plant_type_id",
                        column: x => x.plant_type_id,
                        principalTable: "plant_types",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "entry_emotions",
                columns: table => new
                {
                    entry_id = table.Column<int>(type: "integer", nullable: false),
                    emotion_id = table.Column<int>(type: "integer", nullable: false),
                    intensity = table.Column<int>(type: "integer", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_entry_emotions", x => new { x.entry_id, x.emotion_id });
                    table.ForeignKey(
                        name: "fk_entry_emotions_emotion_tags_emotion_id",
                        column: x => x.emotion_id,
                        principalTable: "emotion_tags",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_entry_emotions_journal_entries_entry_id",
                        column: x => x.entry_id,
                        principalTable: "journal_entries",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "emotion_tags",
                columns: new[] { "id", "color", "icon", "name" },
                values: new object[,]
                {
                    { 1, "#FFD700", "😊", "Happy" },
                    { 2, "#1E90FF", "😢", "Sad" },
                    { 3, "#FF4500", "😡", "Angry" },
                    { 4, "#32CD32", "😌", "Calm" }
                });

            migrationBuilder.InsertData(
                table: "subscription_plans",
                columns: new[] { "id", "billing_period", "max_garden_customizations_per_day", "max_journal_entries_per_day", "name", "price" },
                values: new object[,]
                {
                    { 1, "Monthly", 2, 3, "Free", 0.00m },
                    { 2, "Monthly", 2147483647, 2147483647, "Pro", 9.99m }
                });

            migrationBuilder.InsertData(
                table: "plant_types",
                columns: new[] { "id", "emotion_tag_id", "name" },
                values: new object[,]
                {
                    { 1, 1, "Sunflower" },
                    { 2, 2, "Willow" },
                    { 3, 3, "Cactus" },
                    { 4, 4, "Lotus" }
                });

            migrationBuilder.InsertData(
                table: "users",
                columns: new[] { "id", "email", "password_hash", "role", "subscription_plan_id", "user_name" },
                values: new object[,]
                {
                    { 1, "admin@example.com", "$2a$11$bMbVvslv1w8ctmZB9XJJl.EZHIHgshLMc8zGmryaeKOH2nx/iDFZy", 1, 2, "admin" },
                    { 2, "user@example.com", "$2a$11$FVx.eRjAlmsDfYXTGklNEuXbP3o4Gb45QVkTop/yK0xo5PkUNHLH6", 0, 1, "regular" }
                });

            migrationBuilder.InsertData(
                table: "garden_states",
                columns: new[] { "id", "size", "snapshot_at", "user_id" },
                values: new object[,]
                {
                    { 1, 5, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), 1 },
                    { 2, 5, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), 2 }
                });

            migrationBuilder.InsertData(
                table: "garden_plants",
                columns: new[] { "id", "created_at", "garden_state_id", "growth_progress", "is_stored", "order", "plant_type_id", "stage", "updated_at" },
                values: new object[,]
                {
                    { 1, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), 1, 8.0, true, null, 1, 3, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc) },
                    { 2, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), 1, 2.0, false, 1, 3, 0, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc) },
                    { 3, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), 2, 5.0, false, 2, 2, 1, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc) },
                    { 4, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc), 2, 1.0, true, null, 4, 4, new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc) }
                });

            migrationBuilder.CreateIndex(
                name: "ix_entry_emotions_emotion_id",
                table: "entry_emotions",
                column: "emotion_id");

            migrationBuilder.CreateIndex(
                name: "ix_garden_plants_garden_state_id",
                table: "garden_plants",
                column: "garden_state_id");

            migrationBuilder.CreateIndex(
                name: "ix_garden_plants_plant_type_id",
                table: "garden_plants",
                column: "plant_type_id");

            migrationBuilder.CreateIndex(
                name: "ix_garden_states_user_id",
                table: "garden_states",
                column: "user_id");

            migrationBuilder.CreateIndex(
                name: "ix_journal_entries_mood_id",
                table: "journal_entries",
                column: "mood_id");

            migrationBuilder.CreateIndex(
                name: "ix_journal_entries_user_id",
                table: "journal_entries",
                column: "user_id");

            migrationBuilder.CreateIndex(
                name: "ix_plant_types_emotion_tag_id",
                table: "plant_types",
                column: "emotion_tag_id");

            migrationBuilder.CreateIndex(
                name: "ix_refresh_tokens_user_id",
                table: "refresh_tokens",
                column: "user_id");

            migrationBuilder.CreateIndex(
                name: "ix_user_settings_user_id",
                table: "user_settings",
                column: "user_id",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "ix_users_subscription_plan_id",
                table: "users",
                column: "subscription_plan_id");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "entry_emotions");

            migrationBuilder.DropTable(
                name: "garden_plants");

            migrationBuilder.DropTable(
                name: "refresh_tokens");

            migrationBuilder.DropTable(
                name: "user_settings");

            migrationBuilder.DropTable(
                name: "journal_entries");

            migrationBuilder.DropTable(
                name: "garden_states");

            migrationBuilder.DropTable(
                name: "plant_types");

            migrationBuilder.DropTable(
                name: "users");

            migrationBuilder.DropTable(
                name: "emotion_tags");

            migrationBuilder.DropTable(
                name: "subscription_plans");
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Migrations\20251005045937_InitialCreate.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Migrations\20251005045937_InitialCreate.Designer.cs =====
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThoughtGarden.Api.Data;

#nullable disable

namespace ThoughtGarden.Api.Migrations
{
    [DbContext(typeof(ThoughtGardenDbContext))]
    [Migration("20251005045937_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmotionTagId")
                        .HasColumnType("integer")
                        .HasColumnName("emotion_tag_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_plant_types");

                    b.HasIndex("EmotionTagId")
                        .HasDatabaseName("ix_plant_types_emotion_tag_id");

                    b.ToTable("plant_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmotionTagId = 1,
                            Name = "Sunflower"
                        },
                        new
                        {
                            Id = 2,
                            EmotionTagId = 2,
                            Name = "Willow"
                        },
                        new
                        {
                            Id = 3,
                            EmotionTagId = 3,
                            Name = "Cactus"
                        },
                        new
                        {
                            Id = 4,
                            EmotionTagId = 4,
                            Name = "Lotus"
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.EmotionTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Icon")
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_emotion_tags");

                    b.ToTable("emotion_tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#FFD700",
                            Icon = "😊",
                            Name = "Happy"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#1E90FF",
                            Icon = "😢",
                            Name = "Sad"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#FF4500",
                            Icon = "😡",
                            Name = "Angry"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#32CD32",
                            Icon = "😌",
                            Name = "Calm"
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.EntryEmotion", b =>
                {
                    b.Property<int>("EntryId")
                        .HasColumnType("integer")
                        .HasColumnName("entry_id");

                    b.Property<int>("EmotionId")
                        .HasColumnType("integer")
                        .HasColumnName("emotion_id");

                    b.Property<int?>("Intensity")
                        .HasColumnType("integer")
                        .HasColumnName("intensity");

                    b.HasKey("EntryId", "EmotionId")
                        .HasName("pk_entry_emotions");

                    b.HasIndex("EmotionId")
                        .HasDatabaseName("ix_entry_emotions_emotion_id");

                    b.ToTable("entry_emotions", (string)null);
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenPlant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("GardenStateId")
                        .HasColumnType("integer")
                        .HasColumnName("garden_state_id");

                    b.Property<double>("GrowthProgress")
                        .HasColumnType("double precision")
                        .HasColumnName("growth_progress");

                    b.Property<bool>("IsStored")
                        .HasColumnType("boolean")
                        .HasColumnName("is_stored");

                    b.Property<int?>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("PlantTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("plant_type_id");

                    b.Property<int>("Stage")
                        .HasColumnType("integer")
                        .HasColumnName("stage");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_garden_plants");

                    b.HasIndex("GardenStateId")
                        .HasDatabaseName("ix_garden_plants_garden_state_id");

                    b.HasIndex("PlantTypeId")
                        .HasDatabaseName("ix_garden_plants_plant_type_id");

                    b.ToTable("garden_plants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 1,
                            GrowthProgress = 8.0,
                            IsStored = true,
                            PlantTypeId = 1,
                            Stage = 3,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 1,
                            GrowthProgress = 2.0,
                            IsStored = false,
                            Order = 1,
                            PlantTypeId = 3,
                            Stage = 0,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 2,
                            GrowthProgress = 5.0,
                            IsStored = false,
                            Order = 2,
                            PlantTypeId = 2,
                            Stage = 1,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 2,
                            GrowthProgress = 1.0,
                            IsStored = true,
                            PlantTypeId = 4,
                            Stage = 4,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.Property<DateTime>("SnapshotAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("snapshot_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_garden_states");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_garden_states_user_id");

                    b.ToTable("garden_states", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size = 5,
                            SnapshotAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Size = 5,
                            SnapshotAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.JournalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlgVersion")
                        .HasColumnType("text")
                        .HasColumnName("alg_version");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DataNonce")
                        .HasColumnType("text")
                        .HasColumnName("data_nonce");

                    b.Property<string>("DataTag")
                        .HasColumnType("text")
                        .HasColumnName("data_tag");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("MoodId")
                        .HasColumnType("integer")
                        .HasColumnName("mood_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("WrappedKeys")
                        .HasColumnType("text")
                        .HasColumnName("wrapped_keys");

                    b.HasKey("Id")
                        .HasName("pk_journal_entries");

                    b.HasIndex("MoodId")
                        .HasDatabaseName("ix_journal_entries_mood_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_journal_entries_user_id");

                    b.ToTable("journal_entries", (string)null);
                });

            modelBuilder.Entity("ThoughtGarden.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("revoked_at");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_refresh_tokens");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_refresh_tokens_user_id");

                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("ThoughtGarden.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingPeriod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("billing_period");

                    b.Property<int>("MaxGardenCustomizationsPerDay")
                        .HasColumnType("integer")
                        .HasColumnName("max_garden_customizations_per_day");

                    b.Property<int>("MaxJournalEntriesPerDay")
                        .HasColumnType("integer")
                        .HasColumnName("max_journal_entries_per_day");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("pk_subscription_plans");

                    b.ToTable("subscription_plans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingPeriod = "Monthly",
                            MaxGardenCustomizationsPerDay = 2,
                            MaxJournalEntriesPerDay = 3,
                            Name = "Free",
                            Price = 0.00m
                        },
                        new
                        {
                            Id = 2,
                            BillingPeriod = "Monthly",
                            MaxGardenCustomizationsPerDay = 2147483647,
                            MaxJournalEntriesPerDay = 2147483647,
                            Name = "Pro",
                            Price = 9.99m
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<int>("SubscriptionPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("subscription_plan_id");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("SubscriptionPlanId")
                        .HasDatabaseName("ix_users_subscription_plan_id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$bMbVvslv1w8ctmZB9XJJl.EZHIHgshLMc8zGmryaeKOH2nx/iDFZy",
                            Role = 1,
                            SubscriptionPlanId = 2,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@example.com",
                            PasswordHash = "$2a$11$FVx.eRjAlmsDfYXTGklNEuXbP3o4Gb45QVkTop/yK0xo5PkUNHLH6",
                            Role = 0,
                            SubscriptionPlanId = 1,
                            UserName = "regular"
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EncryptionLevel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("encryption_level");

                    b.Property<bool>("Reminders")
                        .HasColumnType("boolean")
                        .HasColumnName("reminders");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("theme");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_settings");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_settings_user_id");

                    b.ToTable("user_settings", (string)null);
                });

            modelBuilder.Entity("PlantType", b =>
                {
                    b.HasOne("ThoughtGarden.Models.EmotionTag", "EmotionTag")
                        .WithMany("PlantTypes")
                        .HasForeignKey("EmotionTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_plant_types_emotion_tags_emotion_tag_id");

                    b.Navigation("EmotionTag");
                });

            modelBuilder.Entity("ThoughtGarden.Models.EntryEmotion", b =>
                {
                    b.HasOne("ThoughtGarden.Models.EmotionTag", "Emotion")
                        .WithMany("EntryLinks")
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_entry_emotions_emotion_tags_emotion_id");

                    b.HasOne("ThoughtGarden.Models.JournalEntry", "Entry")
                        .WithMany("SecondaryEmotions")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_entry_emotions_journal_entries_entry_id");

                    b.Navigation("Emotion");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenPlant", b =>
                {
                    b.HasOne("ThoughtGarden.Models.GardenState", "GardenState")
                        .WithMany("GardenPlants")
                        .HasForeignKey("GardenStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garden_plants_garden_states_garden_state_id");

                    b.HasOne("PlantType", "PlantType")
                        .WithMany("GardenPlants")
                        .HasForeignKey("PlantTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garden_plants_plant_types_plant_type_id");

                    b.Navigation("GardenState");

                    b.Navigation("PlantType");
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenState", b =>
                {
                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithMany("GardenStates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garden_states_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThoughtGarden.Models.JournalEntry", b =>
                {
                    b.HasOne("ThoughtGarden.Models.EmotionTag", "Mood")
                        .WithMany()
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_journal_entries_emotion_tags_mood_id");

                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithMany("JournalEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_journal_entries_users_user_id");

                    b.Navigation("Mood");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThoughtGarden.Models.RefreshToken", b =>
                {
                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_refresh_tokens_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThoughtGarden.Models.User", b =>
                {
                    b.HasOne("ThoughtGarden.Models.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("Users")
                        .HasForeignKey("SubscriptionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_subscription_plans_subscription_plan_id");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("ThoughtGarden.Models.UserSettings", b =>
                {
                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("ThoughtGarden.Models.UserSettings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_settings_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PlantType", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("ThoughtGarden.Models.EmotionTag", b =>
                {
                    b.Navigation("EntryLinks");

                    b.Navigation("PlantTypes");
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenState", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("ThoughtGarden.Models.JournalEntry", b =>
                {
                    b.Navigation("SecondaryEmotions");
                });

            modelBuilder.Entity("ThoughtGarden.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ThoughtGarden.Models.User", b =>
                {
                    b.Navigation("GardenStates");

                    b.Navigation("JournalEntries");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Migrations\20251005045937_InitialCreate.Designer.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Migrations\ThoughtGardenDbContextModelSnapshot.cs =====
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThoughtGarden.Api.Data;

#nullable disable

namespace ThoughtGarden.Api.Migrations
{
    [DbContext(typeof(ThoughtGardenDbContext))]
    partial class ThoughtGardenDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PlantType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmotionTagId")
                        .HasColumnType("integer")
                        .HasColumnName("emotion_tag_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_plant_types");

                    b.HasIndex("EmotionTagId")
                        .HasDatabaseName("ix_plant_types_emotion_tag_id");

                    b.ToTable("plant_types", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmotionTagId = 1,
                            Name = "Sunflower"
                        },
                        new
                        {
                            Id = 2,
                            EmotionTagId = 2,
                            Name = "Willow"
                        },
                        new
                        {
                            Id = 3,
                            EmotionTagId = 3,
                            Name = "Cactus"
                        },
                        new
                        {
                            Id = 4,
                            EmotionTagId = 4,
                            Name = "Lotus"
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.EmotionTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Icon")
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_emotion_tags");

                    b.ToTable("emotion_tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#FFD700",
                            Icon = "😊",
                            Name = "Happy"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#1E90FF",
                            Icon = "😢",
                            Name = "Sad"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#FF4500",
                            Icon = "😡",
                            Name = "Angry"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#32CD32",
                            Icon = "😌",
                            Name = "Calm"
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.EntryEmotion", b =>
                {
                    b.Property<int>("EntryId")
                        .HasColumnType("integer")
                        .HasColumnName("entry_id");

                    b.Property<int>("EmotionId")
                        .HasColumnType("integer")
                        .HasColumnName("emotion_id");

                    b.Property<int?>("Intensity")
                        .HasColumnType("integer")
                        .HasColumnName("intensity");

                    b.HasKey("EntryId", "EmotionId")
                        .HasName("pk_entry_emotions");

                    b.HasIndex("EmotionId")
                        .HasDatabaseName("ix_entry_emotions_emotion_id");

                    b.ToTable("entry_emotions", (string)null);
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenPlant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("GardenStateId")
                        .HasColumnType("integer")
                        .HasColumnName("garden_state_id");

                    b.Property<double>("GrowthProgress")
                        .HasColumnType("double precision")
                        .HasColumnName("growth_progress");

                    b.Property<bool>("IsStored")
                        .HasColumnType("boolean")
                        .HasColumnName("is_stored");

                    b.Property<int?>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("PlantTypeId")
                        .HasColumnType("integer")
                        .HasColumnName("plant_type_id");

                    b.Property<int>("Stage")
                        .HasColumnType("integer")
                        .HasColumnName("stage");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_garden_plants");

                    b.HasIndex("GardenStateId")
                        .HasDatabaseName("ix_garden_plants_garden_state_id");

                    b.HasIndex("PlantTypeId")
                        .HasDatabaseName("ix_garden_plants_plant_type_id");

                    b.ToTable("garden_plants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 1,
                            GrowthProgress = 8.0,
                            IsStored = true,
                            PlantTypeId = 1,
                            Stage = 3,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 1,
                            GrowthProgress = 2.0,
                            IsStored = false,
                            Order = 1,
                            PlantTypeId = 3,
                            Stage = 0,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 2,
                            GrowthProgress = 5.0,
                            IsStored = false,
                            Order = 2,
                            PlantTypeId = 2,
                            Stage = 1,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            GardenStateId = 2,
                            GrowthProgress = 1.0,
                            IsStored = true,
                            PlantTypeId = 4,
                            Stage = 4,
                            UpdatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.Property<DateTime>("SnapshotAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("snapshot_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_garden_states");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_garden_states_user_id");

                    b.ToTable("garden_states", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Size = 5,
                            SnapshotAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Size = 5,
                            SnapshotAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.JournalEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AlgVersion")
                        .HasColumnType("text")
                        .HasColumnName("alg_version");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DataNonce")
                        .HasColumnType("text")
                        .HasColumnName("data_nonce");

                    b.Property<string>("DataTag")
                        .HasColumnType("text")
                        .HasColumnName("data_tag");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int?>("MoodId")
                        .HasColumnType("integer")
                        .HasColumnName("mood_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<string>("WrappedKeys")
                        .HasColumnType("text")
                        .HasColumnName("wrapped_keys");

                    b.HasKey("Id")
                        .HasName("pk_journal_entries");

                    b.HasIndex("MoodId")
                        .HasDatabaseName("ix_journal_entries_mood_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_journal_entries_user_id");

                    b.ToTable("journal_entries", (string)null);
                });

            modelBuilder.Entity("ThoughtGarden.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("revoked_at");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_refresh_tokens");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_refresh_tokens_user_id");

                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("ThoughtGarden.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingPeriod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("billing_period");

                    b.Property<int>("MaxGardenCustomizationsPerDay")
                        .HasColumnType("integer")
                        .HasColumnName("max_garden_customizations_per_day");

                    b.Property<int>("MaxJournalEntriesPerDay")
                        .HasColumnType("integer")
                        .HasColumnName("max_journal_entries_per_day");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("pk_subscription_plans");

                    b.ToTable("subscription_plans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BillingPeriod = "Monthly",
                            MaxGardenCustomizationsPerDay = 2,
                            MaxJournalEntriesPerDay = 3,
                            Name = "Free",
                            Price = 0.00m
                        },
                        new
                        {
                            Id = 2,
                            BillingPeriod = "Monthly",
                            MaxGardenCustomizationsPerDay = 2147483647,
                            MaxJournalEntriesPerDay = 2147483647,
                            Name = "Pro",
                            Price = 9.99m
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<int>("SubscriptionPlanId")
                        .HasColumnType("integer")
                        .HasColumnName("subscription_plan_id");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("SubscriptionPlanId")
                        .HasDatabaseName("ix_users_subscription_plan_id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            PasswordHash = "$2a$11$bMbVvslv1w8ctmZB9XJJl.EZHIHgshLMc8zGmryaeKOH2nx/iDFZy",
                            Role = 1,
                            SubscriptionPlanId = 2,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@example.com",
                            PasswordHash = "$2a$11$FVx.eRjAlmsDfYXTGklNEuXbP3o4Gb45QVkTop/yK0xo5PkUNHLH6",
                            Role = 0,
                            SubscriptionPlanId = 1,
                            UserName = "regular"
                        });
                });

            modelBuilder.Entity("ThoughtGarden.Models.UserSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("EncryptionLevel")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("encryption_level");

                    b.Property<bool>("Reminders")
                        .HasColumnType("boolean")
                        .HasColumnName("reminders");

                    b.Property<string>("Theme")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("theme");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_settings");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_user_settings_user_id");

                    b.ToTable("user_settings", (string)null);
                });

            modelBuilder.Entity("PlantType", b =>
                {
                    b.HasOne("ThoughtGarden.Models.EmotionTag", "EmotionTag")
                        .WithMany("PlantTypes")
                        .HasForeignKey("EmotionTagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_plant_types_emotion_tags_emotion_tag_id");

                    b.Navigation("EmotionTag");
                });

            modelBuilder.Entity("ThoughtGarden.Models.EntryEmotion", b =>
                {
                    b.HasOne("ThoughtGarden.Models.EmotionTag", "Emotion")
                        .WithMany("EntryLinks")
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_entry_emotions_emotion_tags_emotion_id");

                    b.HasOne("ThoughtGarden.Models.JournalEntry", "Entry")
                        .WithMany("SecondaryEmotions")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_entry_emotions_journal_entries_entry_id");

                    b.Navigation("Emotion");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenPlant", b =>
                {
                    b.HasOne("ThoughtGarden.Models.GardenState", "GardenState")
                        .WithMany("GardenPlants")
                        .HasForeignKey("GardenStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garden_plants_garden_states_garden_state_id");

                    b.HasOne("PlantType", "PlantType")
                        .WithMany("GardenPlants")
                        .HasForeignKey("PlantTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garden_plants_plant_types_plant_type_id");

                    b.Navigation("GardenState");

                    b.Navigation("PlantType");
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenState", b =>
                {
                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithMany("GardenStates")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_garden_states_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThoughtGarden.Models.JournalEntry", b =>
                {
                    b.HasOne("ThoughtGarden.Models.EmotionTag", "Mood")
                        .WithMany()
                        .HasForeignKey("MoodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_journal_entries_emotion_tags_mood_id");

                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithMany("JournalEntries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_journal_entries_users_user_id");

                    b.Navigation("Mood");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThoughtGarden.Models.RefreshToken", b =>
                {
                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_refresh_tokens_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ThoughtGarden.Models.User", b =>
                {
                    b.HasOne("ThoughtGarden.Models.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("Users")
                        .HasForeignKey("SubscriptionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_users_subscription_plans_subscription_plan_id");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("ThoughtGarden.Models.UserSettings", b =>
                {
                    b.HasOne("ThoughtGarden.Models.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("ThoughtGarden.Models.UserSettings", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_settings_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PlantType", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("ThoughtGarden.Models.EmotionTag", b =>
                {
                    b.Navigation("EntryLinks");

                    b.Navigation("PlantTypes");
                });

            modelBuilder.Entity("ThoughtGarden.Models.GardenState", b =>
                {
                    b.Navigation("GardenPlants");
                });

            modelBuilder.Entity("ThoughtGarden.Models.JournalEntry", b =>
                {
                    b.Navigation("SecondaryEmotions");
                });

            modelBuilder.Entity("ThoughtGarden.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ThoughtGarden.Models.User", b =>
                {
                    b.Navigation("GardenStates");

                    b.Navigation("JournalEntries");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Settings");
                });
#pragma warning restore 612, 618
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Migrations\ThoughtGardenDbContextModelSnapshot.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\Inputs\SecondaryEmotionInput.cs =====
namespace ThoughtGarden.Models.Inputs
{
    // Simple DTO for GraphQL input
    public record SecondaryEmotionInput(int EmotionId, int Intensity);
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\Inputs\SecondaryEmotionInput.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\EmotionTag.cs =====
using System.Collections.Generic;

namespace ThoughtGarden.Models
{
    public class EmotionTag
    {
        public int Id { get; set; }  // Primary Key
        public string Name { get; set; } = null!;
        public string Color { get; set; } = null!;
        public string? Icon { get; set; }

        // Many-to-many via EntryEmotion (secondary emotions)
        public ICollection<EntryEmotion> EntryLinks { get; set; } = new List<EntryEmotion>();
        public ICollection<PlantType> PlantTypes { get; set; } = new List<PlantType>();

    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\EmotionTag.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\EntryEmotion.cs =====
namespace ThoughtGarden.Models
{
    public class EntryEmotion
    {
        // Composite key: EntryId + EmotionId
        public int EntryId { get; set; }
        public JournalEntry Entry { get; set; } = null!;

        public int EmotionId { get; set; }
        public EmotionTag Emotion { get; set; } = null!;

        public int? Intensity { get; set; }  // Optional 1–10 scale
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\EntryEmotion.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\GardenPlant.cs =====
using System;

namespace ThoughtGarden.Models
{
    public class GardenPlant
    {
        public int Id { get; set; }
        public int GardenStateId { get; set; }
        public int PlantTypeId { get; set; }

        // Per-user growth
        public double GrowthProgress { get; set; } = 0.0;
        public GrowthStage Stage { get; set; } = GrowthStage.Seed;
        public DateTime CreatedAt { get; set; }
        public DateTime UpdatedAt { get; set; }

        // Placement
        public int? Order { get; set; }  // null = not assigned to garden layout
        public bool IsStored { get; set; } = true; // default new plants go into storage


        // Navigation
        public GardenState GardenState { get; set; } = null!;
        public PlantType PlantType { get; set; } = null!;

        // Nested enum so it's self-contained
        public enum GrowthStage
        {
            Seed = 0,
            Sprout = 1,
            Budding = 2,
            Bloom = 3,
            Mature = 4
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\GardenPlant.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\GardenState.cs =====
namespace ThoughtGarden.Models
{
    public class GardenState
    {
        public int Id { get; set; }  // Primary Key

        public int UserId { get; set; }
        public User User { get; set; } = null!;

        // How many plants this garden can hold
        public int Size { get; set; } = 5;  // Default capacity for MVP

        public DateTime SnapshotAt { get; set; } = DateTime.UtcNow;  // When this snapshot was created

        // Navigation
        public ICollection<GardenPlant> GardenPlants { get; set; } = new List<GardenPlant>();
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\GardenState.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\JournalEntry.cs =====
namespace ThoughtGarden.Models
{
    public class JournalEntry
    {
        public int Id { get; set; }  // Primary Key
        public string Text { get; set; } = null!;

        public string? DataNonce { get; set; }     // base64(12)
        public string? DataTag { get; set; }       // base64(16)
        public string? WrappedKeys { get; set; }   // JSON map: keyId -> base64(nonce||tag||wrappedDEK)
        public string? AlgVersion { get; set; }    // e.g., "gcm.v1"


        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
        public DateTime UpdatedAt { get; set; } = DateTime.UtcNow;
        public bool IsDeleted { get; set; } = false;

        // Foreign key to User
        public int UserId { get; set; }
        public User User { get; set; } = null!;

        // Primary mood
        public int? MoodId { get; set; }
        public EmotionTag? Mood { get; set; }

        // Secondary emotions (with intensities)
        public ICollection<EntryEmotion> SecondaryEmotions { get; set; } = new List<EntryEmotion>();
    }
}

===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\JournalEntry.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\PlantType.cs =====
using ThoughtGarden.Models;

public class PlantType
{
    public int Id { get; set; }
    public string Name { get; set; } = null!;
    public int EmotionTagId { get; set; }

    // Navigation
    public EmotionTag EmotionTag { get; set; } = null!;
    public ICollection<GardenPlant> GardenPlants { get; set; } = new List<GardenPlant>();
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\PlantType.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\RefreshToken.cs =====
namespace ThoughtGarden.Models
{
    public class RefreshToken
    {
        public int Id { get; set; }
        public int UserId { get; set; }
        public User User { get; set; } = null!;

        public string Token { get; set; } = null!;
        public DateTime ExpiresAt { get; set; }
        public DateTime CreatedAt { get; set; } = DateTime.UtcNow;
        public DateTime? RevokedAt { get; set; }

        public bool IsExpired => DateTime.UtcNow >= ExpiresAt;
        public bool IsRevoked => RevokedAt != null;
        public bool IsActive => !IsRevoked && !IsExpired;
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\RefreshToken.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\SubscriptionPlan.cs =====
namespace ThoughtGarden.Models
{
    public class SubscriptionPlan
    {
        public int Id { get; set; }  // Primary Key
        public string Name { get; set; } = null!;   // e.g., Free, Pro
        public int MaxJournalEntriesPerDay { get; set; }
        public int MaxGardenCustomizationsPerDay { get; set; }
        public decimal Price { get; set; }
        public string BillingPeriod { get; set; } = "Monthly";

        // Navigation
        public ICollection<User> Users { get; set; } = new List<User>();
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\SubscriptionPlan.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\User.cs =====
using System.Collections.Generic;

namespace ThoughtGarden.Models
{
    public class User
    {
        public int Id { get; set; }

        public string UserName { get; set; } = null!;
        public string Email { get; set; } = null!;
        public string PasswordHash { get; set; } = null!;

        // Role for authorization
        public UserRole Role { get; set; } = UserRole.User;

        public int SubscriptionPlanId { get; set; }
        public SubscriptionPlan SubscriptionPlan { get; set; } = null!;

        // Navigation
        public ICollection<GardenState> GardenStates { get; set; } = new List<GardenState>();
        public ICollection<JournalEntry> JournalEntries { get; set; } = new List<JournalEntry>();
        public ICollection<RefreshToken> RefreshTokens { get; set; } = new List<RefreshToken>();


        public UserSettings? Settings { get; set; }
    }

    public enum UserRole
    {
        User,
        Admin,
        Moderator
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\User.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\UserSettings.cs =====
namespace ThoughtGarden.Models
{
    public class UserSettings
    {
        public int Id { get; set; }  // Primary Key
        public int UserId { get; set; }
        public User User { get; set; } = null!;

        public string Theme { get; set; } = "light";
        public string EncryptionLevel { get; set; } = "standard";
        public bool Reminders { get; set; } = false;
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Models\UserSettings.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\EndpointInfo\ThoughtGarden.Api.json =====
{
  "openapi": "3.0.1",
  "info": {
    "title": "ThoughtGarden.Api",
    "version": "1.0"
  },
  "paths": {
    "/api/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": { }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\EndpointInfo\ThoughtGarden.Api.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs =====
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ApiEndpoints.json =====
[
  {
    "ContainingType": "ThoughtGarden.Api.Controllers.HealthController",
    "Method": "Get",
    "RelativePath": "api/Health",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ApiEndpoints.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\AppSettingsSchema.json =====
{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "webOptimizer": {
      "title": "web optimizer",
      "type": "object",
      "description": "Settings for WebOptimizer.Core",
      "properties": {
        "enableCaching": {
          "description": "Determines if the \u0022cache-control\u0022 HTTP headers should be set and if conditional GET (304) requests should be supported. This could be helpful to disable while in development mode.",
          "type": "boolean"
        },
        "enableTagHelperBundling": {
          "description": "Determines if \u0060\u003Cscript\u003E\u0060 and \u0060\u003Clink\u003E\u0060 elements should point to the bundled path or a reference per source file should be created. This is helpful to disable when in development mode.",
          "type": "boolean",
          "default": true
        }
      }
    },
    "cdn": {
      "title": "CDN",
      "type": "object",
      "description": "Definitions for WebEssentials.AspNetCore.CdnTagHelpers",
      "properties": {
        "url": {
          "description": "An absolute URL used as a prefix for static resources",
          "type": "string",
          "pattern": "^((//|https?://).\u002B|)$"
        },
        "prefetch": {
          "description": "If true, injects a \u003Clink rel=\u0027dns-prefetch\u0027\u003E tag that speeds up DNS resolution to the CDN.",
          "type": "boolean",
          "default": true
        }
      }
    },
    "pwa": {
      "properties": {
        "cacheId": {
          "description": "The cache identifier of the service worker (can be any string). Change this property to force the service worker to reload in browsers.",
          "type": "string",
          "default": "v1.0"
        },
        "offlineRoute": {
          "description": "The route to the page to show when offline.",
          "type": "string",
          "default": "/offline.html"
        },
        "registerServiceWorker": {
          "description": "Determines if a script that registers the service worker should be injected into the bottom of the HTML page.",
          "type": "boolean",
          "default": true
        },
        "registerWebmanifest": {
          "description": "Determines if a meta tag that points to the web manifest should be inserted at the end of the head element.",
          "type": "boolean",
          "default": true
        },
        "routesToPreCache": {
          "description": "A comma separated list of routes to pre-cache when service worker installs in the browser.",
          "type": "string",
          "default": ""
        },
        "strategy": {
          "description": "Selects one of the predefined service worker types.",
          "enum": [
            "cacheFirst",
            "cacheFirstSafe",
            "minimal",
            "networkFirst"
          ],
          "default": "cacheFirstSafe"
        }
      }
    },
    "ElmahIo": {
      "properties": {
        "ApiKey": {
          "description": "An elmah.io API key with the Messages | Write permission.",
          "type": "string",
          "pattern": "^([0-9a-f]{32})|(#\\{.*\\}#?)$"
        },
        "LogId": {
          "description": "The Id of the elmah.io log to store messages in.",
          "type": "string",
          "pattern": "^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(#\\{.*\\}#?)$"
        },
        "Application": {
          "description": "An application name to put on all error messages.",
          "type": "string"
        },
        "HandledStatusCodesToLog": {
          "description": "A list of HTTP status codes (besides 404) to log even though no exception is thrown.",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "TreatLoggingAsBreadcrumbs": {
          "description": "Include log messages from Microsoft.Extensions.Logging as breadcrumbs.",
          "type": "boolean"
        },
        "HeartbeatId": {
          "description": "The Id of the elmah.io heartbeat to notify.",
          "type": "string",
          "pattern": "^([0-9a-f]{32})|(#\\{.*\\}#?)$"
        }
      },
      "required": [
        "ApiKey",
        "LogId"
      ]
    },
    "protocols": {
      "description": "The protocols enabled on the endpoint.",
      "type": "string",
      "enum": [
        "None",
        "Http1",
        "Http2",
        "Http1AndHttp2",
        "Http3",
        "Http1AndHttp2AndHttp3"
      ]
    },
    "certificate": {
      "title": "certificate",
      "description": "Certificate configuration.",
      "type": "object",
      "properties": {
        "Path": {
          "description": "The certificate file path. If a file path is specified then the certificate will be loaded from the file system.",
          "type": "string"
        },
        "KeyPath": {
          "description": "The certificate key file path. Available in .NET 5 and later.",
          "type": "string"
        },
        "Password": {
          "description": "The certificate password used to access the private key.",
          "type": "string"
        },
        "Subject": {
          "description": "The certificate subject. If a subject is specified then the certificate will be loaded from the certificate store.",
          "type": "string"
        },
        "Store": {
          "description": "The certificate store name. Defaults to \u0027My\u0027.",
          "type": "string",
          "default": "My"
        },
        "Location": {
          "description": "The certificate store location. Defaults to \u0027CurrentUser\u0027.",
          "type": "string",
          "enum": [
            "LocalMachine",
            "CurrentUser"
          ],
          "default": "CurrentUser"
        },
        "AllowInvalid": {
          "description": "A value indicating whether or not to load certificates that are considered invalid. Defaults to false.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "sslProtocols": {
      "description": "Specifies allowable SSL protocols. Defaults to \u0027None\u0027 which allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this default. Available in .NET 5 and later.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "None",
          "Tls",
          "Tls11",
          "Tls12",
          "Tls13"
        ],
        "default": "None"
      }
    },
    "clientCertificateMode": {
      "description": "Specifies the client certificate requirements for a HTTPS connection. Defaults to \u0027NoCertificate\u0027. Available in .NET 5 and later.",
      "type": "string",
      "enum": [
        "NoCertificate",
        "AllowCertificate",
        "RequireCertificate"
      ],
      "default": "NoCertificate"
    },
    "kestrel": {
      "title": "kestrel",
      "type": "object",
      "description": "ASP.NET Core Kestrel server configuration.",
      "properties": {
        "Endpoints": {
          "title": "endpoints",
          "description": "Endpoints that Kestrel listens to for network requests. Each endpoint has a name specified by its JSON property name.",
          "type": "object",
          "additionalProperties": {
            "title": "endpoint options",
            "description": "Kestrel endpoint configuration.",
            "type": "object",
            "properties": {
              "Url": {
                "description": "The scheme, host name, and port the endpoint will listen on. A Url is required.",
                "type": "string",
                "format": "uri"
              },
              "Protocols": {
                "$ref": "#/definitions/protocols"
              },
              "SslProtocols": {
                "$ref": "#/definitions/sslProtocols"
              },
              "Certificate": {
                "$ref": "#/definitions/certificate"
              },
              "ClientCertificateMode": {
                "$ref": "#/definitions/clientCertificateMode"
              },
              "Sni": {
                "title": "SNI",
                "description": "Server Name Indication (SNI) configuration. This enables the mapping of client requested host names to certificates and other TLS settings. Wildcard names prefixed with \u0027*.\u0027, as well as a top level \u0027*\u0027 are supported. Available in .NET 5 and later.",
                "type": "object",
                "additionalProperties": {
                  "title": "SNI options",
                  "description": "Endpoint SNI configuration.",
                  "type": "object",
                  "properties": {
                    "Protocols": {
                      "$ref": "#/definitions/protocols"
                    },
                    "SslProtocols": {
                      "$ref": "#/definitions/sslProtocols"
                    },
                    "Certificate": {
                      "$ref": "#/definitions/certificate"
                    },
                    "ClientCertificateMode": {
                      "$ref": "#/definitions/clientCertificateMode"
                    }
                  }
                }
              }
            },
            "required": [
              "Url"
            ]
          }
        },
        "EndpointDefaults": {
          "title": "endpoint defaults",
          "description": "Default configuration applied to all endpoints. Named endpoint specific configuration overrides defaults.",
          "type": "object",
          "properties": {
            "Protocols": {
              "$ref": "#/definitions/protocols"
            },
            "SslProtocols": {
              "$ref": "#/definitions/sslProtocols"
            },
            "ClientCertificateMode": {
              "$ref": "#/definitions/clientCertificateMode"
            }
          }
        },
        "Certificates": {
          "title": "certificates",
          "description": "Certificates that Kestrel uses with HTTPS endpoints. Each certificate has a name specified by its JSON property name. The \u0027Default\u0027 certificate is used by HTTPS endpoints that haven\u0027t specified a certificate.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/certificate"
          }
        }
      }
    },
    "logLevelThreshold": {
      "description": "Log level threshold.",
      "type": "string",
      "enum": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ]
    },
    "logLevel": {
      "title": "logging level options",
      "description": "Log level configurations used when creating logs. Only logs that exceeds its matching log level will be enabled. Each log level configuration has a category specified by its JSON property name. For more information about configuring log levels, see https://docs.microsoft.com/aspnet/core/fundamentals/logging/#configure-logging.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/logLevelThreshold"
      }
    },
    "logging": {
      "title": "logging options",
      "type": "object",
      "description": "Configuration for Microsoft.Extensions.Logging.",
      "properties": {
        "LogLevel": {
          "$ref": "#/definitions/logLevel"
        },
        "Console": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            },
            "FormatterName": {
              "description": "Name of the log message formatter to use. Defaults to \u0027simple\u0027.",
              "type": "string",
              "default": "simple"
            },
            "FormatterOptions": {
              "title": "formatter options",
              "description": "Log message formatter options. Additional properties are available on the options depending on the configured formatter. The formatter is specified by FormatterName.",
              "type": "object",
              "properties": {
                "IncludeScopes": {
                  "description": "Include scopes when true. Defaults to false.",
                  "type": "boolean",
                  "default": false
                },
                "TimestampFormat": {
                  "description": "Format string used to format timestamp in logging messages. Defaults to null.",
                  "type": "string"
                },
                "UseUtcTimestamp": {
                  "description": "Indication whether or not UTC timezone should be used to for timestamps in logging messages. Defaults to false.",
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "LogToStandardErrorThreshold": {
              "$ref": "#/definitions/logLevelThreshold",
              "description": "The minimum level of messages are written to Console.Error."
            }
          }
        },
        "EventSource": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "Debug": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "EventLog": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "ElmahIo": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "ElmahIoBreadcrumbs": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        }
      },
      "additionalProperties": {
        "title": "provider logging settings",
        "type": "object",
        "description": "Logging configuration for a provider. The provider name must match the configuration\u0027s JSON property property name.",
        "properties": {
          "LogLevel": {
            "$ref": "#/definitions/logLevel"
          }
        }
      }
    },
    "allowedHosts": {
      "description": "ASP.NET Core host filtering middleware configuration. Allowed hosts is a semicolon-delimited list of host names without port numbers. Requests without a matching host name will be refused. Host names may be prefixed with a \u0027*.\u0027 wildcard, or use \u0027*\u0027 to allow all hosts.",
      "type": "string"
    },
    "connectionStrings": {
      "title": "connection string options",
      "description": "Connection string configuration. Get connection strings with the IConfiguration.GetConnectionString(string) extension method.",
      "type": "object",
      "additionalProperties": {
        "description": "Connection string configuration. Each connection string has a name specified by its JSON property name.",
        "type": "string"
      }
    },
    "NLog": {
      "title": "NLog options",
      "type": "object",
      "description": "NLog configuration",
      "default": {},
      "properties": {
        "autoReload": {
          "type": "boolean",
          "description": "Automatically reload the NLog configuration when notified that appsettings.json file has changed.",
          "default": false
        },
        "throwConfigExceptions": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Throws an exception when there is a config error? If not set, then throwExceptions will be used for this setting.",
          "default": false
        },
        "throwExceptions": {
          "type": "boolean",
          "description": "Throws an exception when there is an error. For unit testing only and advanced troubleshooting.",
          "default": false
        },
        "internalLogLevel": {
          "type": "string",
          "description": "The minimal log level for the internal logger.",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal",
            "Off"
          ],
          "default": "Off"
        },
        "internalLogFile": {
          "type": "string",
          "description": "Write internal log to the specified filepath"
        },
        "internalLogToConsole": {
          "type": "boolean",
          "description": "Write internal log to a console",
          "default": "false"
        },
        "internalLogToConsoleError": {
          "type": "boolean",
          "description": "Write internal log to a console with error stream",
          "default": "false"
        },
        "globalThreshold": {
          "type": "string",
          "description": "Log events below this threshold are not logged.",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal",
            "Off"
          ],
          "default": "Off"
        },
        "autoShutdown": {
          "type": "boolean",
          "description": "Automatically call \u0060LogFactory.Shutdown\u0060 on AppDomain.Unload or AppDomain.ProcessExit",
          "default": "true"
        },
        "extensions": {
          "type": "array",
          "description": "Load NLog extension packages for additional targets and layouts",
          "default": [],
          "items": {
            "title": "extension",
            "type": "object",
            "description": "",
            "default": {},
            "properties": {
              "assembly": {
                "type": "string",
                "description": "Assembly Name of the NLog extension package."
              },
              "prefix": {
                "type": "string",
                "description": "Appends prefix to all type-names loaded from the assembly",
                "default": ""
              },
              "assemblyFile": {
                "type": "string",
                "description": "Absolute filepath to the Assembly-file of the NLog extension package.",
                "default": ""
              }
            }
          }
        },
        "variables": {
          "title": "variables",
          "type": "object",
          "description": "Key-value pair of variables",
          "propertyNames": {
            "pattern": "^[A-Za-z0-9_.-]\u002B$"
          },
          "patternProperties": {
            ".*": {
              "type": [
                "number",
                "string",
                "boolean"
              ]
            }
          }
        },
        "targetDefaultWrapper": {
          "title": "default wrapper",
          "type": "object",
          "description": "Wrap all defined targets with this custom target wrapper.",
          "default": {},
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": ""
            }
          }
        },
        "targets": {
          "title": "targets",
          "type": "object",
          "description": "",
          "default": {},
          "properties": {
            "async": {
              "type": "boolean",
              "description": "Wrap all defined targets using AsyncWrapper with OverflowAction=Discard for better performance."
            }
          }
        },
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "description": "",
              "default": [],
              "items": {
                "$ref": "#/definitions/NLogRulesItem"
              }
            },
            {
              "title": "rules",
              "type": "object",
              "propertyNames": {
                "pattern": "^[0-9]\u002B$"
              },
              "patternProperties": {
                ".*": {
                  "$ref": "#/definitions/NLogRulesItem"
                }
              }
            }
          ]
        }
      }
    },
    "NLogRulesItem": {
      "title": "NLog rule item",
      "type": "object",
      "description": "Redirect LogEvents from matching Logger objects to specified targets",
      "default": {},
      "required": [
        "logger"
      ],
      "properties": {
        "logger": {
          "type": "string",
          "description": "Match Logger objects based on their Logger-name. Can use wildcard characters (\u0027*\u0027 or \u0027?\u0027)."
        },
        "ruleName": {
          "type": "string",
          "description": "Rule identifier to allow rule lookup with Configuration.FindRuleByName and Configuration.RemoveRuleByName."
        },
        "level": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "levels": {
          "type": "string",
          "description": "Comma separated list of levels that this rule matches."
        },
        "minLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "maxLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "finalMinLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "writeTo": {
          "type": "string",
          "description": "Name or names of a target - separated by comma. Remove this property for sending events to the blackhole."
        },
        "final": {
          "type": "boolean",
          "description": "Ignore further rules if this one matches.",
          "default": false
        },
        "enabled": {
          "type": "boolean",
          "description": "",
          "default": true
        },
        "filters": {
          "oneOf": [
            {
              "type": "array",
              "description": "",
              "default": [],
              "items": {
                "title": "filter",
                "type": "object",
                "description": "",
                "default": {},
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": ""
                  },
                  "action": {
                    "type": "string",
                    "description": "Result action when filter matches logevent.",
                    "enum": [
                      "Neutral",
                      "Log",
                      "Ignore",
                      "LogFinal",
                      "IgnoreFinal"
                    ],
                    "default": "Neutral"
                  }
                }
              }
            },
            {
              "title": "filter",
              "type": "object",
              "description": "",
              "default": {}
            }
          ]
        },
        "filterDefaultAction": {
          "type": "string",
          "description": "Default action if none of the filters match.",
          "enum": [
            "Neutral",
            "Log",
            "Ignore",
            "LogFinal",
            "IgnoreFinal"
          ],
          "default": "Ignore"
        }
      }
    },
    "Serilog": {
      "type": "object",
      "title": "Serilog appSettings",
      "description": "Serilog appSettings Configuration",
      "properties": {
        "$schema": {
          "type": "string",
          "title": "Schema",
          "description": "Pointer to the schema against which this document should be validated."
        },
        "Using": {
          "type": "array",
          "title": "List of Auto-discovery of configuration assemblies",
          "description": "Using section contains list of assemblies in which configuration methods. Can be required depending of the project type: See: https://github.com/serilog/serilog-settings-configuration#using-section-and-auto-discovery-of-configuration-assemblies",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Serilog/definitions/AssemblyReference"
          }
        },
        "LevelSwitches": {
          "type": "object",
          "patternProperties": {
            "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$": {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            }
          },
          "additionalProperties": false
        },
        "FilterSwitches": {
          "type": "object",
          "patternProperties": {
            "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "MinimumLevel": {
          "type": [
            "string",
            "object"
          ],
          "title": "Minimum LogLevel Threshold",
          "description": "Minimum LogLevel Threshold. (Support dynamic reload if the underlying IConfigurationProvider supports it)",
          "oneOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/DetailedMinimumLevel"
            }
          ]
        },
        "Properties": {
          "type": "object",
          "title": "Log events Properties",
          "description": "This section defines a static list of key-value pairs that will enrich log events.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Enrich": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events Enriches",
          "description": "This section defines Enriches that will be applied to log events."
        },
        "Destructure": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events Destructure",
          "description": "This section defines Destructure."
        },
        "Filter": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events filters",
          "description": "This section defines filters that will be applied to log events."
        },
        "WriteTo": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Configuration for log destination",
          "description": "This section configures the sinks that log events will be emitted to."
        },
        "AuditTo": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Configuration for log destination for auditing",
          "description": "This section configures sinks for auditing, instead of regular (safe) logging. Obs: When auditing is used, exceptions from sinks and any intermediate filters propagate back to the caller."
        }
      },
      "patternProperties": {
        "^Enrich:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events Enriches",
          "description": "This section defines Enriches that will be applied to log events."
        },
        "^Destructure:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events Destructure",
          "description": "This section defines Destructure."
        },
        "^Filter:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events filters",
          "description": "This section defines filters that will be applied to log events."
        },
        "^WriteTo:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Configuration for log destination",
          "description": "This section configures the sinks that log events will be emitted to."
        },
        "^AuditTo:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Configuration for log destination for auditing",
          "description": "This section configures sinks for auditing, instead of regular (safe) logging. Obs: When auditing is used, exceptions from sinks and any intermediate filters propagate back to the caller."
        }
      },
      "additionalProperties": false,
      "definitions": {
        "SerilogLogEventLevel": {
          "type": "string",
          "title": "Log level",
          "description": "Log level threshold.",
          "enum": [
            "Verbose",
            "Debug",
            "Information",
            "Warning",
            "Error",
            "Fatal"
          ]
        },
        "LoggingLevelSwitch": {
          "type": "string",
          "title": "LevelSwitches name",
          "description": "Log Level Switch string reference.",
          "pattern": "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$"
        },
        "SerilogLogLevelThreshold": {
          "type": "string",
          "title": "Log Level or LevelSwitches name",
          "description": "A Serilog Log Level or a reference to a Log Level Switch name on \u0060LevelSwitches\u0060 configuration.",
          "anyOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/LoggingLevelSwitch"
            }
          ]
        },
        "DetailedMinimumLevel": {
          "type": "object",
          "title": "Detailed Log level.",
          "description": "Detailed Log level threshold object. Allowing set log levels be overridden per logging source.",
          "properties": {
            "Default": {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogLevelThreshold"
            },
            "ControlledBy": {
              "$ref": "#/definitions/Serilog/definitions/LoggingLevelSwitch"
            },
            "Override": {
              "type": "object",
              "title": "Logging Source Log level object.",
              "description": "Set the Log level threshold or LevelSwitcher reference per Logging Source.",
              "additionalProperties": {
                "$ref": "#/definitions/Serilog/definitions/SerilogLogLevelThreshold"
              }
            }
          },
          "additionalProperties": false
        },
        "AssemblyReference": {
          "type": "string",
          "title": "Assembly Name",
          "description": ".NET Assembly Name, without the file extension",
          "minLength": 1,
          "pattern": "^(?\u003CAssemblyName\u003E\\S\u002B)$"
        },
        "ComplexMethodCallReference": {
          "type": "object",
          "properties": {
            "Name": {
              "$ref": "#/definitions/Serilog/definitions/CSharpMethodName"
            },
            "Args": {
              "type": "object",
              "patternProperties": {
                "^(?\u003CCSharpMethodArgumentName\u003E[a-zA-Z_]\\w*)$": {}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "required": [
            "Name"
          ]
        },
        "MethodCallReferenceItem": {
          "type": [
            "string",
            "object",
            "null"
          ],
          "oneOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/CSharpMethodName"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/ComplexMethodCallReference"
            }
          ]
        },
        "MethodCallReference": {
          "type": [
            "array",
            "string",
            "object"
          ],
          "minLength": 1,
          "pattern": "^(?\u003CCSharpMethodName\u003E[a-zA-Z_]\\w*)$",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
          },
          "additionalProperties": {
            "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
          }
        },
        "CSharpMethodName": {
          "type": "string",
          "title": "Method Name",
          "description": "A name referring to a C# Class method",
          "minLength": 1,
          "pattern": "^(?\u003CCSharpMethodName\u003E[a-zA-Z_]\\w*)$"
        },
        "CSharpMethodArgumentName": {
          "type": "string",
          "title": "Argument Name",
          "description": "A name referring to a C# Class method argument",
          "minLength": 1,
          "pattern": "^(?\u003CCSharpMethodArgumentName\u003E[a-zA-Z_]\\w*)$"
        },
        "EnvironmentVariableName": {
          "type": "string",
          "title": "Environment Variable Name",
          "description": "A name referring to a OS Environment Variable",
          "minLength": 1,
          "pattern": "^(?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)$"
        },
        "SerilogLevelSwitcherName": {
          "type": "string",
          "title": "A Level Switcher Name",
          "description": "A name referring to a Serilog Settings Configuration Level Switcher",
          "minLength": 1,
          "pattern": "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$"
        }
      }
    }
  },
  "id": "https://json.schemastore.org/appsettings.json",
  "patternProperties": {
    "^WebOptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^webOptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^weboptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^(cdn|Cdn)$": {
      "$ref": "#/definitions/cdn"
    },
    "^(pwa|PWA|Pwa)$": {
      "$ref": "#/definitions/pwa"
    },
    "^(ElmahIo|Elmahio|elmahIo|elmahio)$": {
      "$ref": "#/definitions/ElmahIo"
    },
    "^(nlog|Nlog|NLog)$": {
      "$ref": "#/definitions/NLog"
    },
    "^(Serilog|serilog)$": {
      "$ref": "#/definitions/Serilog"
    }
  },
  "properties": {
    "Kestrel": {
      "$ref": "#/definitions/kestrel"
    },
    "Logging": {
      "$ref": "#/definitions/logging"
    },
    "AllowedHosts": {
      "$ref": "#/definitions/allowedHosts"
    },
    "ConnectionStrings": {
      "$ref": "#/definitions/connectionStrings"
    },
    "ReverseProxy": {
      "type": "object",
      "description": "Reverse proxy configuration for routes and clusters.",
      "properties": {
        "Routes": {
          "type": "object",
          "description": "Named routes that direct incoming requests to clusters.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "ClusterId": {
                  "type": "string",
                  "description": "Name of the cluster this route points to."
                },
                "Order": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "Order value for this route. Routes with lower numbers take precedence over higher numbers."
                },
                "MaxRequestBodySize": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "An optional override for how large request bodies can be in bytes."
                },
                "AuthorizationPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which authorization policy applies, e.g. \u0027Default\u0027 or \u0027Anonymous\u0027."
                },
                "RateLimiterPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the RateLimiterPolicy to apply to this route."
                },
                "OutputCachePolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the OutputCachePolicy to apply to this route."
                },
                "Timeout": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                  "description": "The Timeout to apply to this route. This overrides any system defaults. Setting both Timeout and TimeoutPolicy is an error. Format: \u0027hh:mm:ss\u0027."
                },
                "TimeoutPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which timeout policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027. Setting both Timeout and TimeoutPolicy is an error."
                },
                "CorsPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which CORS policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027."
                },
                "Match": {
                  "type": "object",
                  "properties": {
                    "Path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path pattern using ASP.NET route template syntax, e.g. \u0027/something/{**remainder}\u0027."
                    },
                    "Hosts": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "Only match requests with the given Host header. Supports wildcards and ports. For unicode host names, do not use punycode.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Methods": {
                      "description": "Allowed HTTP methods.",
                      "items": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "DELETE",
                              "GET",
                              "HEAD",
                              "OPTIONS",
                              "PATCH",
                              "POST",
                              "PUT",
                              "TRACE"
                            ]
                          },
                          {
                            "type": [
                              "array",
                              "null"
                            ]
                          }
                        ]
                      }
                    },
                    "Headers": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of header match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Header name."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the header values should be matched.",
                            "enum": [
                              "ExactHeader",
                              "HeaderPrefix",
                              "Contains",
                              "NotContains",
                              "Exists",
                              "NotExists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "QueryParameters": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of query string match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Name of the query parameter."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the query parameter values should be matched.",
                            "enum": [
                              "Exact",
                              "Contains",
                              "NotContains",
                              "Prefix",
                              "Exists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false,
                  "anyOf": [
                    {
                      "required": [
                        "Path"
                      ]
                    },
                    {
                      "required": [
                        "Hosts"
                      ]
                    }
                  ]
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom route logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "Transforms": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "description": "List of transform objects for request customization.",
                  "items": {
                    "description": "A single transform definition.",
                    "anyOf": [
                      {
                        "type": [
                          "object",
                          "null"
                        ],
                        "$comment": "Fallback that matches any custom user-defined transforms.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "not": {}
                          },
                          "RequestHeaderOriginalHost": {
                            "not": {}
                          },
                          "RequestHeader": {
                            "not": {}
                          },
                          "PathRemovePrefix": {
                            "not": {}
                          },
                          "PathSet": {
                            "not": {}
                          },
                          "PathPrefix": {
                            "not": {}
                          },
                          "QueryRouteParameter": {
                            "not": {}
                          },
                          "PathPattern": {
                            "not": {}
                          },
                          "QueryValueParameter": {
                            "not": {}
                          },
                          "QueryRemoveParameter": {
                            "not": {}
                          },
                          "HttpMethodChange": {
                            "not": {}
                          },
                          "RequestHeaderRouteValue": {
                            "not": {}
                          },
                          "RequestHeaderRemove": {
                            "not": {}
                          },
                          "RequestHeadersAllowed": {
                            "not": {}
                          },
                          "X-Forwarded": {
                            "not": {}
                          },
                          "Forwarded": {
                            "not": {}
                          },
                          "ClientCert": {
                            "not": {}
                          },
                          "ResponseHeadersCopy": {
                            "not": {}
                          },
                          "ResponseHeader": {
                            "not": {}
                          },
                          "ResponseHeaderRemove": {
                            "not": {}
                          },
                          "ResponseHeadersAllowed": {
                            "not": {}
                          },
                          "ResponseTrailersCopy": {
                            "not": {}
                          },
                          "ResponseTrailer": {
                            "not": {}
                          },
                          "ResponseTrailerRemove": {
                            "not": {}
                          },
                          "ResponseTrailersAllowed": {
                            "not": {}
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Sets whether incoming request headers are copied to the outbound request.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all request headers to outbound request."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Specifies if the incoming request Host header should be copied to the proxy request.",
                        "properties": {
                          "RequestHeaderOriginalHost": {
                            "type": "boolean",
                            "description": "If true, preserve the original Host header; otherwise the destination\u0027s host is used."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderOriginalHost"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a request header.",
                        "properties": {
                          "RequestHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given request header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given request header."
                          },
                          "Remove": {
                            "type": "boolean",
                            "description": "Removes the header if true."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Append"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Remove"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that removes a specified prefix from the request path.",
                        "properties": {
                          "PathRemovePrefix": {
                            "type": "string",
                            "description": "Prefix to remove from the existing request path."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathRemovePrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path with the provided value.",
                        "properties": {
                          "PathSet": {
                            "type": "string",
                            "description": "Sets the request path to this value."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathSet"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds the specified prefix to the request path.",
                        "properties": {
                          "PathPrefix": {
                            "type": "string",
                            "description": "Path prefix to add."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds or replaces a query string parameter with a value from the route configuration.",
                        "properties": {
                          "QueryRouteParameter": {
                            "type": "string",
                            "description": "Specifies the query parameter name to add or replace."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Name of the route paramter to set the query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Name of the route paramter to append to the query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path using a pattern template, replacing {} segments with the route value.",
                        "properties": {
                          "PathPattern": {
                            "type": "string",
                            "description": "A path template starting with a \u0027/\u0027, e.g. \u0027/my/{plugin}/api/{**remainder}\u0027."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPattern"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces parameters in the request query string.",
                        "properties": {
                          "QueryValueParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryValueParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryValueParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified parameter from the request query string.",
                        "properties": {
                          "QueryRemoveParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "QueryRemoveParameter"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Changes the http method used in the request.",
                        "properties": {
                          "HttpMethodChange": {
                            "description": "The HTTP method to replace.",
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "DELETE",
                                  "GET",
                                  "HEAD",
                                  "OPTIONS",
                                  "PATCH",
                                  "POST",
                                  "PUT",
                                  "TRACE"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "Set": {
                            "type": "string",
                            "description": "The new HTTP method."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "HttpMethodChange",
                          "Set"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces a header with a value from the route configuration.",
                        "properties": {
                          "RequestHeaderRouteValue": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Route value to set the given header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Route value to append to the given header."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the request.",
                        "properties": {
                          "RequestHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most request headers to the proxy request by default, this transform disables RequestHeadersCopy and only copies the given headers.",
                        "properties": {
                          "RequestHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds headers with information about the original client request.",
                        "properties": {
                          "X-Forwarded": {
                            "type": "string",
                            "description": "Default action to apply to all X-Forwarded-* headers.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "For": {
                            "type": "string",
                            "description": "Action to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Proto": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Proto\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Host": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Host\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Prefix": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Prefix\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "HeaderPrefix": {
                            "type": "string",
                            "description": "The header name prefix.",
                            "default": "X-Forwarded-"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "X-Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds a header with information about the original client request.",
                        "properties": {
                          "Forwarded": {
                            "type": "string",
                            "pattern": "^(?:(?:for|by|proto|host),?)\u002B$",
                            "description": "A comma separated list containing any of these values: \u0027for,by,proto,host\u0027."
                          },
                          "ForFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "ByFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "Action": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Forwarded\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Forwards the client cert used on the inbound connection as a header to the destination.",
                        "properties": {
                          "ClientCert": {
                            "type": "string",
                            "description": "The header name to use for the forwarded client cert."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ClientCert"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether response headers are copied from the original response.",
                        "properties": {
                          "ResponseHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response header.",
                        "properties": {
                          "ResponseHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response header."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseHeader",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the response.",
                        "properties": {
                          "ResponseHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response headers to the proxy response by default, this transform disables ResponseHeadersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether trailing response headers are copied from the original response.",
                        "properties": {
                          "ResponseTrailersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all trailing response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response trailer.",
                        "properties": {
                          "ResponseTrailer": {
                            "type": "string",
                            "description": "The trailer name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response trailer to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response trailer."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseTrailer",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseTrailer",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified trailer from the response.",
                        "properties": {
                          "ResponseTrailerRemove": {
                            "type": "string",
                            "description": "The trailer name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be removed for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailerRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response trailers to the proxy response by default, this transform disables ResponseTrailersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseTrailersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed trailer names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersAllowed"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "ClusterId",
                "Match"
              ],
              "additionalProperties": false
            }
          }
        },
        "Clusters": {
          "type": "object",
          "description": "Named clusters describing destinations.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "Destinations": {
                  "type": "object",
                  "description": "Named destinations where traffic is forwarded.",
                  "patternProperties": {
                    ".": {
                      "type": "object",
                      "properties": {
                        "Address": {
                          "type": "string",
                          "description": "Destination address (must include scheme)."
                        },
                        "Health": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional override URL accepting active health check probes."
                        },
                        "Host": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional fallback host header value used if a host is not already specified by request transforms."
                        },
                        "Metadata": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Arbitrary key-value pairs for custom destination logic.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "Address"
                      ]
                    }
                  }
                },
                "LoadBalancingPolicy": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "PowerOfTwoChoices",
                        "FirstAlphabetical",
                        "Random",
                        "RoundRobin",
                        "LeastRequests"
                      ]
                    },
                    {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  ],
                  "description": "Determines traffic distribution among destinations."
                },
                "SessionAffinity": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Session affinity is a mechanism to bind (affinitize) a causally related request sequence to the destination that handled the first request when the load is balanced among several destinations.",
                  "properties": {
                    "Enabled": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "Policy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HashCookie",
                            "ArrCookie",
                            "Cookie",
                            "CustomHeader"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Determines how the session will be stored and retrieved."
                    },
                    "FailurePolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Redistribute",
                            "Return503Error"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Strategy for handling a missing destination for an affinitized request."
                    },
                    "AffinityKeyName": {
                      "type": "string",
                      "description": "Identifies the name of the field where the affinity value is stored (cookie or header name)."
                    },
                    "Cookie": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "Domain": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the domain of the cookie."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the path of the cookie."
                        },
                        "Expiration": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the expiration of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "MaxAge": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the maximum age of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "SecurePolicy": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Always",
                            "None",
                            "SameAsRequest"
                          ],
                          "description": "Specifies the Secure attribute of the cookie."
                        },
                        "HttpOnly": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is accessible by client-side script."
                        },
                        "SameSite": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Lax",
                            "None",
                            "Strict",
                            "Unspecified"
                          ],
                          "description": "Specifies the SameSite attribute of the cookie."
                        },
                        "IsEssential": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is essential for the application to function correctly. If true then consent policy checks may be bypassed."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "AffinityKeyName"
                  ]
                },
                "HealthCheck": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Health check configuration for destinations.",
                  "properties": {
                    "Active": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Active health checks are based on sending health probing requests.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if active health checks are enabled.",
                          "default": false
                        },
                        "Interval": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of sending health probing requests. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:15"
                        },
                        "Timeout": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of waiting for a health check response. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:10"
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "ConsecutiveFailures"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "HTTP health check endpoint path.",
                          "default": "/"
                        },
                        "Query": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Query string to append to the probe, including the leading \u0027?\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "Passive": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Passive health checks are based on observing the health of the responses from the destination.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if passive health checks are enabled.",
                          "default": false
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "TransportFailureRate"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "ReactivationPeriod": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period after which an unhealthy destination reverts back to an Unknown health state. Format: \u0027hh:mm:ss\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "AvailableDestinationsPolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HealthyAndUnknown",
                            "HealthyOrPanic"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "HttpClient": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Configuration for outbound HTTP connections.",
                  "properties": {
                    "SslProtocols": {
                      "type": "array",
                      "description": "Specifies the SSL protocols to use.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "DangerousAcceptAnyServerCertificate": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines whether the server\u0027s SSL certificate validity is checked by the client. Setting it to true completely disables validation.",
                      "default": false
                    },
                    "MaxConnectionsPerServer": {
                      "type": [
                        "number",
                        "null"
                      ],
                      "description": "Specifies the maximum number of connections per server."
                    },
                    "EnableMultipleHttp2Connections": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if multiple HTTP/2 connections are enabled.",
                      "default": true
                    },
                    "RequestHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of request headers, e.g. \u0027utf-8\u0027."
                    },
                    "ResponseHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of response headers, e.g. \u0027utf-8\u0027."
                    },
                    "WebProxy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Config used to construct a System.Net.WebProxy instance used for outgoing requests.",
                      "properties": {
                        "Address": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The URI of the proxy server."
                        },
                        "BypassOnLocal": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, bypasses the proxy for local addresses.",
                          "default": false
                        },
                        "UseDefaultCredentials": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, sends CredentialCache.DefaultCredentials with requests.",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "HttpRequest": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Options controlling requests sent to destinations.",
                  "properties": {
                    "ActivityTimeout": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                      "description": "Specifies how long a request is allowed to remain idle between any operation completing, after which it will be canceled. Format: \u0027hh:mm:ss\u0027.",
                      "default": "00:01:40"
                    },
                    "Version": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Preferred version of the outgoing request.",
                      "default": "2.0"
                    },
                    "VersionPolicy": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The policy applied to version selection, e.g. whether to prefer downgrades, upgrades or request an exact version.",
                      "default": "RequestVersionOrLower",
                      "enum": [
                        "RequestVersionExact",
                        "RequestVersionOrLower",
                        "RequestVersionOrHigher"
                      ]
                    },
                    "AllowResponseBuffering": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if response buffering is allowed."
                    }
                  },
                  "additionalProperties": false
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom cluster logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "title": "JSON schema ASP.NET Core\u0027s appsettings.json file",
  "type": "object"
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\AppSettingsSchema.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\CombinedComponentSchema.json =====
{
  "properties": {
    "ReverseProxy": {
      "type": "object",
      "description": "Reverse proxy configuration for routes and clusters.",
      "properties": {
        "Routes": {
          "type": "object",
          "description": "Named routes that direct incoming requests to clusters.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "ClusterId": {
                  "type": "string",
                  "description": "Name of the cluster this route points to."
                },
                "Order": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "Order value for this route. Routes with lower numbers take precedence over higher numbers."
                },
                "MaxRequestBodySize": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "An optional override for how large request bodies can be in bytes."
                },
                "AuthorizationPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which authorization policy applies, e.g. \u0027Default\u0027 or \u0027Anonymous\u0027."
                },
                "RateLimiterPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the RateLimiterPolicy to apply to this route."
                },
                "OutputCachePolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the OutputCachePolicy to apply to this route."
                },
                "Timeout": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                  "description": "The Timeout to apply to this route. This overrides any system defaults. Setting both Timeout and TimeoutPolicy is an error. Format: \u0027hh:mm:ss\u0027."
                },
                "TimeoutPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which timeout policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027. Setting both Timeout and TimeoutPolicy is an error."
                },
                "CorsPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which CORS policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027."
                },
                "Match": {
                  "type": "object",
                  "properties": {
                    "Path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path pattern using ASP.NET route template syntax, e.g. \u0027/something/{**remainder}\u0027."
                    },
                    "Hosts": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "Only match requests with the given Host header. Supports wildcards and ports. For unicode host names, do not use punycode.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Methods": {
                      "description": "Allowed HTTP methods.",
                      "items": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "DELETE",
                              "GET",
                              "HEAD",
                              "OPTIONS",
                              "PATCH",
                              "POST",
                              "PUT",
                              "TRACE"
                            ]
                          },
                          {
                            "type": [
                              "array",
                              "null"
                            ]
                          }
                        ]
                      }
                    },
                    "Headers": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of header match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Header name."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the header values should be matched.",
                            "enum": [
                              "ExactHeader",
                              "HeaderPrefix",
                              "Contains",
                              "NotContains",
                              "Exists",
                              "NotExists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "QueryParameters": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of query string match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Name of the query parameter."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the query parameter values should be matched.",
                            "enum": [
                              "Exact",
                              "Contains",
                              "NotContains",
                              "Prefix",
                              "Exists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false,
                  "anyOf": [
                    {
                      "required": [
                        "Path"
                      ]
                    },
                    {
                      "required": [
                        "Hosts"
                      ]
                    }
                  ]
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom route logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "Transforms": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "description": "List of transform objects for request customization.",
                  "items": {
                    "description": "A single transform definition.",
                    "anyOf": [
                      {
                        "type": [
                          "object",
                          "null"
                        ],
                        "$comment": "Fallback that matches any custom user-defined transforms.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "not": {}
                          },
                          "RequestHeaderOriginalHost": {
                            "not": {}
                          },
                          "RequestHeader": {
                            "not": {}
                          },
                          "PathRemovePrefix": {
                            "not": {}
                          },
                          "PathSet": {
                            "not": {}
                          },
                          "PathPrefix": {
                            "not": {}
                          },
                          "QueryRouteParameter": {
                            "not": {}
                          },
                          "PathPattern": {
                            "not": {}
                          },
                          "QueryValueParameter": {
                            "not": {}
                          },
                          "QueryRemoveParameter": {
                            "not": {}
                          },
                          "HttpMethodChange": {
                            "not": {}
                          },
                          "RequestHeaderRouteValue": {
                            "not": {}
                          },
                          "RequestHeaderRemove": {
                            "not": {}
                          },
                          "RequestHeadersAllowed": {
                            "not": {}
                          },
                          "X-Forwarded": {
                            "not": {}
                          },
                          "Forwarded": {
                            "not": {}
                          },
                          "ClientCert": {
                            "not": {}
                          },
                          "ResponseHeadersCopy": {
                            "not": {}
                          },
                          "ResponseHeader": {
                            "not": {}
                          },
                          "ResponseHeaderRemove": {
                            "not": {}
                          },
                          "ResponseHeadersAllowed": {
                            "not": {}
                          },
                          "ResponseTrailersCopy": {
                            "not": {}
                          },
                          "ResponseTrailer": {
                            "not": {}
                          },
                          "ResponseTrailerRemove": {
                            "not": {}
                          },
                          "ResponseTrailersAllowed": {
                            "not": {}
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Sets whether incoming request headers are copied to the outbound request.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all request headers to outbound request."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Specifies if the incoming request Host header should be copied to the proxy request.",
                        "properties": {
                          "RequestHeaderOriginalHost": {
                            "type": "boolean",
                            "description": "If true, preserve the original Host header; otherwise the destination\u0027s host is used."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderOriginalHost"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a request header.",
                        "properties": {
                          "RequestHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given request header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given request header."
                          },
                          "Remove": {
                            "type": "boolean",
                            "description": "Removes the header if true."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Append"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Remove"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that removes a specified prefix from the request path.",
                        "properties": {
                          "PathRemovePrefix": {
                            "type": "string",
                            "description": "Prefix to remove from the existing request path."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathRemovePrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path with the provided value.",
                        "properties": {
                          "PathSet": {
                            "type": "string",
                            "description": "Sets the request path to this value."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathSet"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds the specified prefix to the request path.",
                        "properties": {
                          "PathPrefix": {
                            "type": "string",
                            "description": "Path prefix to add."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds or replaces a query string parameter with a value from the route configuration.",
                        "properties": {
                          "QueryRouteParameter": {
                            "type": "string",
                            "description": "Specifies the query parameter name to add or replace."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Name of the route paramter to set the query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Name of the route paramter to append to the query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path using a pattern template, replacing {} segments with the route value.",
                        "properties": {
                          "PathPattern": {
                            "type": "string",
                            "description": "A path template starting with a \u0027/\u0027, e.g. \u0027/my/{plugin}/api/{**remainder}\u0027."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPattern"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces parameters in the request query string.",
                        "properties": {
                          "QueryValueParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryValueParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryValueParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified parameter from the request query string.",
                        "properties": {
                          "QueryRemoveParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "QueryRemoveParameter"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Changes the http method used in the request.",
                        "properties": {
                          "HttpMethodChange": {
                            "description": "The HTTP method to replace.",
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "DELETE",
                                  "GET",
                                  "HEAD",
                                  "OPTIONS",
                                  "PATCH",
                                  "POST",
                                  "PUT",
                                  "TRACE"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "Set": {
                            "type": "string",
                            "description": "The new HTTP method."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "HttpMethodChange",
                          "Set"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces a header with a value from the route configuration.",
                        "properties": {
                          "RequestHeaderRouteValue": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Route value to set the given header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Route value to append to the given header."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the request.",
                        "properties": {
                          "RequestHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most request headers to the proxy request by default, this transform disables RequestHeadersCopy and only copies the given headers.",
                        "properties": {
                          "RequestHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds headers with information about the original client request.",
                        "properties": {
                          "X-Forwarded": {
                            "type": "string",
                            "description": "Default action to apply to all X-Forwarded-* headers.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "For": {
                            "type": "string",
                            "description": "Action to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Proto": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Proto\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Host": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Host\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Prefix": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Prefix\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "HeaderPrefix": {
                            "type": "string",
                            "description": "The header name prefix.",
                            "default": "X-Forwarded-"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "X-Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds a header with information about the original client request.",
                        "properties": {
                          "Forwarded": {
                            "type": "string",
                            "pattern": "^(?:(?:for|by|proto|host),?)\u002B$",
                            "description": "A comma separated list containing any of these values: \u0027for,by,proto,host\u0027."
                          },
                          "ForFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "ByFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "Action": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Forwarded\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Forwards the client cert used on the inbound connection as a header to the destination.",
                        "properties": {
                          "ClientCert": {
                            "type": "string",
                            "description": "The header name to use for the forwarded client cert."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ClientCert"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether response headers are copied from the original response.",
                        "properties": {
                          "ResponseHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response header.",
                        "properties": {
                          "ResponseHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response header."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseHeader",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the response.",
                        "properties": {
                          "ResponseHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response headers to the proxy response by default, this transform disables ResponseHeadersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether trailing response headers are copied from the original response.",
                        "properties": {
                          "ResponseTrailersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all trailing response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response trailer.",
                        "properties": {
                          "ResponseTrailer": {
                            "type": "string",
                            "description": "The trailer name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response trailer to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response trailer."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseTrailer",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseTrailer",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified trailer from the response.",
                        "properties": {
                          "ResponseTrailerRemove": {
                            "type": "string",
                            "description": "The trailer name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be removed for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailerRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response trailers to the proxy response by default, this transform disables ResponseTrailersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseTrailersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed trailer names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersAllowed"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "ClusterId",
                "Match"
              ],
              "additionalProperties": false
            }
          }
        },
        "Clusters": {
          "type": "object",
          "description": "Named clusters describing destinations.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "Destinations": {
                  "type": "object",
                  "description": "Named destinations where traffic is forwarded.",
                  "patternProperties": {
                    ".": {
                      "type": "object",
                      "properties": {
                        "Address": {
                          "type": "string",
                          "description": "Destination address (must include scheme)."
                        },
                        "Health": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional override URL accepting active health check probes."
                        },
                        "Host": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional fallback host header value used if a host is not already specified by request transforms."
                        },
                        "Metadata": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Arbitrary key-value pairs for custom destination logic.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "Address"
                      ]
                    }
                  }
                },
                "LoadBalancingPolicy": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "PowerOfTwoChoices",
                        "FirstAlphabetical",
                        "Random",
                        "RoundRobin",
                        "LeastRequests"
                      ]
                    },
                    {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  ],
                  "description": "Determines traffic distribution among destinations."
                },
                "SessionAffinity": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Session affinity is a mechanism to bind (affinitize) a causally related request sequence to the destination that handled the first request when the load is balanced among several destinations.",
                  "properties": {
                    "Enabled": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "Policy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HashCookie",
                            "ArrCookie",
                            "Cookie",
                            "CustomHeader"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Determines how the session will be stored and retrieved."
                    },
                    "FailurePolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Redistribute",
                            "Return503Error"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Strategy for handling a missing destination for an affinitized request."
                    },
                    "AffinityKeyName": {
                      "type": "string",
                      "description": "Identifies the name of the field where the affinity value is stored (cookie or header name)."
                    },
                    "Cookie": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "Domain": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the domain of the cookie."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the path of the cookie."
                        },
                        "Expiration": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the expiration of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "MaxAge": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the maximum age of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "SecurePolicy": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Always",
                            "None",
                            "SameAsRequest"
                          ],
                          "description": "Specifies the Secure attribute of the cookie."
                        },
                        "HttpOnly": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is accessible by client-side script."
                        },
                        "SameSite": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Lax",
                            "None",
                            "Strict",
                            "Unspecified"
                          ],
                          "description": "Specifies the SameSite attribute of the cookie."
                        },
                        "IsEssential": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is essential for the application to function correctly. If true then consent policy checks may be bypassed."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "AffinityKeyName"
                  ]
                },
                "HealthCheck": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Health check configuration for destinations.",
                  "properties": {
                    "Active": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Active health checks are based on sending health probing requests.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if active health checks are enabled.",
                          "default": false
                        },
                        "Interval": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of sending health probing requests. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:15"
                        },
                        "Timeout": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of waiting for a health check response. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:10"
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "ConsecutiveFailures"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "HTTP health check endpoint path.",
                          "default": "/"
                        },
                        "Query": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Query string to append to the probe, including the leading \u0027?\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "Passive": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Passive health checks are based on observing the health of the responses from the destination.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if passive health checks are enabled.",
                          "default": false
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "TransportFailureRate"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "ReactivationPeriod": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period after which an unhealthy destination reverts back to an Unknown health state. Format: \u0027hh:mm:ss\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "AvailableDestinationsPolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HealthyAndUnknown",
                            "HealthyOrPanic"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "HttpClient": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Configuration for outbound HTTP connections.",
                  "properties": {
                    "SslProtocols": {
                      "type": "array",
                      "description": "Specifies the SSL protocols to use.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "DangerousAcceptAnyServerCertificate": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines whether the server\u0027s SSL certificate validity is checked by the client. Setting it to true completely disables validation.",
                      "default": false
                    },
                    "MaxConnectionsPerServer": {
                      "type": [
                        "number",
                        "null"
                      ],
                      "description": "Specifies the maximum number of connections per server."
                    },
                    "EnableMultipleHttp2Connections": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if multiple HTTP/2 connections are enabled.",
                      "default": true
                    },
                    "RequestHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of request headers, e.g. \u0027utf-8\u0027."
                    },
                    "ResponseHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of response headers, e.g. \u0027utf-8\u0027."
                    },
                    "WebProxy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Config used to construct a System.Net.WebProxy instance used for outgoing requests.",
                      "properties": {
                        "Address": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The URI of the proxy server."
                        },
                        "BypassOnLocal": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, bypasses the proxy for local addresses.",
                          "default": false
                        },
                        "UseDefaultCredentials": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, sends CredentialCache.DefaultCredentials with requests.",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "HttpRequest": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Options controlling requests sent to destinations.",
                  "properties": {
                    "ActivityTimeout": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                      "description": "Specifies how long a request is allowed to remain idle between any operation completing, after which it will be canceled. Format: \u0027hh:mm:ss\u0027.",
                      "default": "00:01:40"
                    },
                    "Version": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Preferred version of the outgoing request.",
                      "default": "2.0"
                    },
                    "VersionPolicy": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The policy applied to version selection, e.g. whether to prefer downgrades, upgrades or request an exact version.",
                      "default": "RequestVersionOrLower",
                      "enum": [
                        "RequestVersionExact",
                        "RequestVersionOrLower",
                        "RequestVersionOrHigher"
                      ]
                    },
                    "AllowResponseBuffering": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if response buffering is allowed."
                    }
                  },
                  "additionalProperties": false
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom cluster logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "type": "object",
  "SourceSegments": "C:\\Users\\mcrae\\.nuget\\packages\\yarp.reverseproxy\\2.3.0\\ConfigurationSchema.json"
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\CombinedComponentSchema.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\rjsmcshtml.dswa.cache.json =====
{"GlobalPropertiesHash":"hmtZ4cKkmHBfJ1/ccXvCxd0RvGrhHaMR9s7K44yVrb8=","FingerprintPatternsHash":"8ZRc1sGeVrPBx4lD717BgRaQekyh78QKV9SKsdt638U=","PropertyOverridesHash":"8ZRc1sGeVrPBx4lD717BgRaQekyh78QKV9SKsdt638U=","InputHashes":["t/CyktCp5zHS1nc\u002BSK1yBb6yWHkUzg48G6smve9sdsM=","5feznI2lqOrnk3tcCxf0Di1Ytkge0A3Fzd749EGodG0=","2tZ1xG5nI3wz7EfnhH9aM2DFk173uJS9dbuzxSBBmYU=","GI0ZF//w6fT0g90N0ytyr1yhQNiwoiA6z9VVP3SdF7Q="],"CachedAssets":{},"CachedCopyCandidates":{}}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\rjsmcshtml.dswa.cache.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\rjsmrazor.dswa.cache.json =====
{"GlobalPropertiesHash":"j1ku2jTNd6dVsXfYCbN9NuANL2iLLbIYxkw2Dw1piR8=","FingerprintPatternsHash":"8ZRc1sGeVrPBx4lD717BgRaQekyh78QKV9SKsdt638U=","PropertyOverridesHash":"8ZRc1sGeVrPBx4lD717BgRaQekyh78QKV9SKsdt638U=","InputHashes":["t/CyktCp5zHS1nc\u002BSK1yBb6yWHkUzg48G6smve9sdsM=","5feznI2lqOrnk3tcCxf0Di1Ytkge0A3Fzd749EGodG0=","2tZ1xG5nI3wz7EfnhH9aM2DFk173uJS9dbuzxSBBmYU=","GI0ZF//w6fT0g90N0ytyr1yhQNiwoiA6z9VVP3SdF7Q="],"CachedAssets":{},"CachedCopyCandidates":{}}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\rjsmrazor.dswa.cache.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\rpswa.dswa.cache.json =====
{"GlobalPropertiesHash":"ZRi/Wt5uHSU8hW12oBqKPhisCgtbmBfP+4XHD0aLBLg=","FingerprintPatternsHash":"gq3WsqcKBUGTSNle7RKKyXRIwh7M8ccEqOqYvIzoM04=","PropertyOverridesHash":"8ZRc1sGeVrPBx4lD717BgRaQekyh78QKV9SKsdt638U=","InputHashes":["t/CyktCp5zHS1nc\u002BSK1yBb6yWHkUzg48G6smve9sdsM="],"CachedAssets":{},"CachedCopyCandidates":{}}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\rpswa.dswa.cache.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\staticwebassets.build.endpoints.json =====
{"Version":1,"ManifestType":"Build","Endpoints":[]}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\staticwebassets.build.endpoints.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\staticwebassets.build.json =====
{"Version":1,"Hash":"m03EX9/y2hFFj2/icbYiC8NUIGTTZKGDlg/63Wv5htQ=","Source":"ThoughtGarden.Api","BasePath":"_content/ThoughtGarden.Api","Mode":"Default","ManifestType":"Build","ReferencedProjectsConfiguration":[],"DiscoveryPatterns":[],"Assets":[],"Endpoints":[]}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\staticwebassets.build.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.AssemblyInfo.cs =====
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute("21ba92a7-380a-49d5-8234-ddcd2d2677cb")]
[assembly: System.Reflection.AssemblyCompanyAttribute("ThoughtGarden.Api")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0-beta+ef38f4ebe8c0ef0684968a36864bc828733da418")]
[assembly: System.Reflection.AssemblyProductAttribute("ThoughtGarden.Api")]
[assembly: System.Reflection.AssemblyTitleAttribute("ThoughtGarden.Api")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.AssemblyInfo.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.GlobalUsings.g.cs =====
// <auto-generated/>
global using global::GreenDonut;
global using global::HotChocolate;
global using global::HotChocolate.Data;
global using global::HotChocolate.Types;
global using global::HotChocolate.Types.Relay;
global using global::Microsoft.AspNetCore.Builder;
global using global::Microsoft.AspNetCore.Hosting;
global using global::Microsoft.AspNetCore.Http;
global using global::Microsoft.AspNetCore.Routing;
global using global::Microsoft.Extensions.Configuration;
global using global::Microsoft.Extensions.DependencyInjection;
global using global::Microsoft.Extensions.Hosting;
global using global::Microsoft.Extensions.Logging;
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Net.Http.Json;
global using global::System.Threading;
global using global::System.Threading.Tasks;
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.GlobalUsings.g.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.MvcApplicationPartsAssemblyInfo.cs =====
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute("Swashbuckle.AspNetCore.SwaggerGen")]

// Generated by the MSBuild WriteCodeFragment class.

===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.MvcApplicationPartsAssemblyInfo.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.sourcelink.json =====
{"documents":{"C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\*":"https://raw.githubusercontent.com/mcrae89/thought_garden_backend/ef38f4ebe8c0ef0684968a36864bc828733da418/*"}}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\Debug\net8.0\ThoughtGarden.Api.sourcelink.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\project.assets.json =====
{
  "version": 3,
  "targets": {
    "net8.0": {
      "BCrypt.Net-Next/4.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        }
      },
      "ChilliCream.Nitro.App/28.0.7": {
        "type": "package",
        "dependencies": {
          "Yarp.ReverseProxy": "2.3.0"
        },
        "compile": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {}
        },
        "runtime": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {}
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "EFCore.NamingConventions/9.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "[9.0.0, 10.0.0)",
          "Microsoft.EntityFrameworkCore.Relational": "[9.0.0, 10.0.0)",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.0"
        },
        "compile": {
          "lib/net8.0/EFCore.NamingConventions.dll": {}
        },
        "runtime": {
          "lib/net8.0/EFCore.NamingConventions.dll": {}
        }
      },
      "GreenDonut/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "compile": {
          "lib/net8.0/GreenDonut.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Abstractions/15.1.9": {
        "type": "package",
        "compile": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9"
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data.Abstractions/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9"
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data.EntityFramework/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "8.0.0"
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data.Primitives/15.1.9": {
        "type": "package",
        "compile": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Authorization": "15.1.9",
          "HotChocolate.CostAnalysis": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9",
          "HotChocolate.Types.CursorPagination.Extensions": "15.1.9",
          "HotChocolate.Types.Mutations": "15.1.9",
          "HotChocolate.Types.Queries": "15.1.9",
          "HotChocolate.Validation": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Abstractions/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Primitives": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.AspNetCore/15.1.9": {
        "type": "package",
        "dependencies": {
          "ChilliCream.Nitro.App": "28.0.7",
          "HotChocolate": "15.1.9",
          "HotChocolate.Subscriptions.InMemory": "15.1.9",
          "HotChocolate.Transport.Sockets": "15.1.9",
          "HotChocolate.Types.Scalars.Upload": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ],
        "build": {
          "build/HotChocolate.AspNetCore.props": {},
          "build/HotChocolate.AspNetCore.targets": {}
        }
      },
      "HotChocolate.AspNetCore.Authorization/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "HotChocolate.Authorization/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.CostAnalysis/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Data/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/HotChocolate.Data.props": {},
          "build/HotChocolate.Data.targets": {}
        }
      },
      "HotChocolate.Data.EntityFramework/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.EntityFramework": "15.1.9",
          "HotChocolate": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/HotChocolate.Data.EntityFramework.props": {},
          "build/HotChocolate.Data.EntityFramework.targets": {}
        }
      },
      "HotChocolate.Execution/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9",
          "HotChocolate.Validation": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "System.IO.Pipelines": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Execution.Abstractions/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Execution.Projections/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Features/15.1.9": {
        "type": "package",
        "compile": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Fetching/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9",
          "HotChocolate.Language.Utf8": "15.1.9",
          "HotChocolate.Language.Visitors": "15.1.9",
          "HotChocolate.Language.Web": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.SyntaxTree/15.1.9": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.Utf8/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.Visitors/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.Web/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.Utf8": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Primitives/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Subscriptions/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Utilities": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Subscriptions.InMemory/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Subscriptions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Transport.Sockets/15.1.9": {
        "type": "package",
        "dependencies": {
          "System.IO.Pipelines": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Features": "15.1.9",
          "HotChocolate.Types.Shared": "15.1.9",
          "HotChocolate.Utilities": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.CursorPagination/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Errors/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Mutations/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Queries/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Scalars.Upload/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Shared/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Utilities/15.1.9": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Utilities.DependencyInjection/15.1.9": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Validation/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Types": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "related": ".xml"
          }
        }
      },
      "Humanizer.Core/2.14.1": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Build.Framework/17.8.3": {
        "type": "package",
        "compile": {
          "ref/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/_._": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Microsoft.Build.Locator/1.7.8": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {}
        },
        "build": {
          "build/_._": {}
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
        "type": "package",
        "build": {
          "buildTransitive/Microsoft.CodeAnalysis.Analyzers.props": {},
          "buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets": {}
        }
      },
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "[4.8.0]"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "[4.8.0]",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "Microsoft.CodeAnalysis.Workspaces.Common": "[4.8.0]"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "7.0.0",
          "System.Threading.Channels": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Build.Framework": "16.10.0",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "Microsoft.CodeAnalysis.Workspaces.Common": "[4.8.0]",
          "System.Text.Json": "7.0.3"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.runtimeconfig.json;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "related": ".pdb;.runtimeconfig.json;.xml"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "related": ".BuildHost.pdb;.BuildHost.runtimeconfig.json;.BuildHost.xml;.pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.8",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
        "type": "package"
      },
      "Microsoft.EntityFrameworkCore.Design/9.0.8": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyModel": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.8"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/net8.0/Microsoft.EntityFrameworkCore.Design.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
        "type": "package",
        "build": {
          "build/Microsoft.Extensions.ApiDescription.Server.props": {},
          "build/Microsoft.Extensions.ApiDescription.Server.targets": {}
        },
        "buildMultiTargeting": {
          "buildMultiTargeting/Microsoft.Extensions.ApiDescription.Server.props": {},
          "buildMultiTargeting/Microsoft.Extensions.ApiDescription.Server.targets": {}
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.8": {
        "type": "package",
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.8",
          "System.Text.Json": "9.0.8"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "System.Diagnostics.DiagnosticSource": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.ObjectPool/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.ObjectPool.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.ObjectPool.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.14.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.14.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "7.1.2",
          "Microsoft.IdentityModel.Tokens": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.IdentityModel.Logging": "8.14.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.OpenApi/1.6.14": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {}
        },
        "build": {
          "buildTransitive/Mono.TextTemplating.targets": {}
        }
      },
      "Npgsql/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "[9.0.1, 10.0.0)",
          "Microsoft.EntityFrameworkCore.Relational": "[9.0.1, 10.0.0)",
          "Npgsql": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        }
      },
      "Swashbuckle.AspNetCore/6.6.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.ApiDescription.Server": "6.0.5",
          "Swashbuckle.AspNetCore.Swagger": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerGen": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerUI": "6.6.2"
        },
        "build": {
          "build/Swashbuckle.AspNetCore.props": {}
        }
      },
      "Swashbuckle.AspNetCore.Swagger/6.6.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.OpenApi": "1.6.14"
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
        "type": "package",
        "dependencies": {
          "Swashbuckle.AspNetCore.Swagger": "6.6.2"
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
        "type": "package",
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "System.CodeDom/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Collections.Immutable/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Collections.Immutable.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        },
        "compile": {
          "lib/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Convention/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "compile": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        }
      },
      "System.IO.Hashing/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.IO.Pipelines/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.Reflection.Metadata/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Collections.Immutable": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Reflection.Metadata.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Text.Encodings.Web/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "System.Text.Json/9.0.8": {
        "type": "package",
        "dependencies": {
          "System.IO.Pipelines": "9.0.8",
          "System.Text.Encodings.Web": "9.0.8"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Channels/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Yarp.ReverseProxy/2.3.0": {
        "type": "package",
        "dependencies": {
          "System.IO.Hashing": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ],
        "build": {
          "buildTransitive/net8.0/Yarp.ReverseProxy.targets": {}
        }
      }
    }
  },
  "libraries": {
    "BCrypt.Net-Next/4.0.3": {
      "sha512": "W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "type": "package",
      "path": "bcrypt.net-next/4.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "bcrypt.net-next.4.0.3.nupkg.sha512",
        "bcrypt.net-next.nuspec",
        "ico.png",
        "lib/net20/BCrypt.Net-Next.dll",
        "lib/net20/BCrypt.Net-Next.xml",
        "lib/net35/BCrypt.Net-Next.dll",
        "lib/net35/BCrypt.Net-Next.xml",
        "lib/net462/BCrypt.Net-Next.dll",
        "lib/net462/BCrypt.Net-Next.xml",
        "lib/net472/BCrypt.Net-Next.dll",
        "lib/net472/BCrypt.Net-Next.xml",
        "lib/net48/BCrypt.Net-Next.dll",
        "lib/net48/BCrypt.Net-Next.xml",
        "lib/net5.0/BCrypt.Net-Next.dll",
        "lib/net5.0/BCrypt.Net-Next.xml",
        "lib/net6.0/BCrypt.Net-Next.dll",
        "lib/net6.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.0/BCrypt.Net-Next.dll",
        "lib/netstandard2.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.1/BCrypt.Net-Next.dll",
        "lib/netstandard2.1/BCrypt.Net-Next.xml",
        "readme.md"
      ]
    },
    "ChilliCream.Nitro.App/28.0.7": {
      "sha512": "G6CZod8ForeoVMXigRyAxTTqiiUYcppE85UY/zy4XLMunpF1Ginn5njWK+F+93bw3x5SssPR/fexEpOtQqkVLw==",
      "type": "package",
      "path": "chillicream.nitro.app/28.0.7",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "chillicream.nitro.app.28.0.7.nupkg.sha512",
        "chillicream.nitro.app.nuspec",
        "lib/net8.0/ChilliCream.Nitro.App.dll",
        "lib/net9.0/ChilliCream.Nitro.App.dll"
      ]
    },
    "EFCore.NamingConventions/9.0.0": {
      "sha512": "heKIYzPdEWx+Ba4xuG6jfEssW9rEi7I0lX38eoN7wo7qgg9uw7nn8UEmDQfwGEYPzSDpetCVANnDr5tqt2Asjg==",
      "type": "package",
      "path": "efcore.namingconventions/9.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "efcore.namingconventions.9.0.0.nupkg.sha512",
        "efcore.namingconventions.nuspec",
        "lib/net8.0/EFCore.NamingConventions.dll"
      ]
    },
    "GreenDonut/15.1.9": {
      "sha512": "482fPqj2Q7enNUsUDENHjrghwI1GPlUbsGQ425SdFJNSl6hhrWzNjMmwd2x1V6NZJCDWk6TAjJ35NK22T1eNNw==",
      "type": "package",
      "path": "greendonut/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.15.1.9.nupkg.sha512",
        "greendonut.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.dll",
        "lib/net8.0/GreenDonut.xml",
        "lib/net9.0/GreenDonut.dll",
        "lib/net9.0/GreenDonut.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Abstractions/15.1.9": {
      "sha512": "imB88uJvK18ZxMwmnLW1XRE7nPU0rRsV5pFzpbuzfVDabedsEqOnoGQDSOJUORJ1Dn6ZOFH7PBxWh92MnXP8JA==",
      "type": "package",
      "path": "greendonut.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.abstractions.15.1.9.nupkg.sha512",
        "greendonut.abstractions.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Abstractions.dll",
        "lib/net8.0/GreenDonut.Abstractions.xml",
        "lib/net9.0/GreenDonut.Abstractions.dll",
        "lib/net9.0/GreenDonut.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data/15.1.9": {
      "sha512": "T5mfw9CnQKhl4sa+5RbfBNk9hGTdSiGnUCYGFyXcREfLGMMe7kfOabjhR6T7FB7kZeEWb8GqcipU655jMbTX/w==",
      "type": "package",
      "path": "greendonut.data/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.15.1.9.nupkg.sha512",
        "greendonut.data.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.dll",
        "lib/net8.0/GreenDonut.Data.xml",
        "lib/net9.0/GreenDonut.Data.dll",
        "lib/net9.0/GreenDonut.Data.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data.Abstractions/15.1.9": {
      "sha512": "E/a5ms3kV8niLBPB0s7rkVuYV1yRAR6JHasTrMg9a9Yk0U18yUj28wXEKwZY1A3mze2S2vF3kebQDAHCN5bjwg==",
      "type": "package",
      "path": "greendonut.data.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.abstractions.15.1.9.nupkg.sha512",
        "greendonut.data.abstractions.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.Abstractions.dll",
        "lib/net8.0/GreenDonut.Data.Abstractions.xml",
        "lib/net9.0/GreenDonut.Data.Abstractions.dll",
        "lib/net9.0/GreenDonut.Data.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data.EntityFramework/15.1.9": {
      "sha512": "dBEK3bkLoq46n7Tg+Vn77FTXJn7ugp2OWcgo+CeqGTfQa+8MbWY9IohQGjAMFLt4TigTnU0ek63keNACv5vl5g==",
      "type": "package",
      "path": "greendonut.data.entityframework/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.entityframework.15.1.9.nupkg.sha512",
        "greendonut.data.entityframework.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.EntityFramework.dll",
        "lib/net8.0/GreenDonut.Data.EntityFramework.xml",
        "lib/net9.0/GreenDonut.Data.EntityFramework.dll",
        "lib/net9.0/GreenDonut.Data.EntityFramework.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data.Primitives/15.1.9": {
      "sha512": "U7uS+C7lEvlgn48xtSFCHMKSjV0oJXgtlbYe6KPWZSJfhDwFxfUFmD58Tn1BxVpCbUqAjr7TzHZaNelhzIu/8A==",
      "type": "package",
      "path": "greendonut.data.primitives/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.primitives.15.1.9.nupkg.sha512",
        "greendonut.data.primitives.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.Primitives.dll",
        "lib/net8.0/GreenDonut.Data.Primitives.xml",
        "lib/net9.0/GreenDonut.Data.Primitives.dll",
        "lib/net9.0/GreenDonut.Data.Primitives.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate/15.1.9": {
      "sha512": "VTVw4bKfnLYuVU4BPzRLILU+IpN+ixblF4uqQ1aMQgwTueLfQ9cycQqvlunWBisRsrtbhcalyn/ksHYn9zgv3A==",
      "type": "package",
      "path": "hotchocolate/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.15.1.9.nupkg.sha512",
        "hotchocolate.nuspec",
        "lib/net8.0/HotChocolate.dll",
        "lib/net8.0/HotChocolate.xml",
        "lib/net9.0/HotChocolate.dll",
        "lib/net9.0/HotChocolate.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Abstractions/15.1.9": {
      "sha512": "jQL/Va5z9sksqG1/++Mm4nzwl5I+qppOOnV6z2/SeZ9BseaBxao9njBMd6wBkfMgbOoiOh5FGqWCVna7mdhJcw==",
      "type": "package",
      "path": "hotchocolate.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.abstractions.15.1.9.nupkg.sha512",
        "hotchocolate.abstractions.nuspec",
        "lib/net8.0/HotChocolate.Abstractions.dll",
        "lib/net8.0/HotChocolate.Abstractions.xml",
        "lib/net9.0/HotChocolate.Abstractions.dll",
        "lib/net9.0/HotChocolate.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.AspNetCore/15.1.9": {
      "sha512": "9G60X0PbDZOaA3k8gbIHTS9vwjvBo6jbKwQe8VKr6liEVHNWXYu2kvaxqQbIgd4FuG759Ie1TKLHSwX411ceag==",
      "type": "package",
      "path": "hotchocolate.aspnetcore/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "build/HotChocolate.AspNetCore.props",
        "build/HotChocolate.AspNetCore.targets",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.aspnetcore.15.1.9.nupkg.sha512",
        "hotchocolate.aspnetcore.nuspec",
        "lib/net8.0/HotChocolate.AspNetCore.dll",
        "lib/net8.0/HotChocolate.AspNetCore.xml",
        "lib/net9.0/HotChocolate.AspNetCore.dll",
        "lib/net9.0/HotChocolate.AspNetCore.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.AspNetCore.Authorization/15.1.9": {
      "sha512": "YQKitD1Yp0QdKPCcggHqGLuDDifJspmFTERyDyNxy4ZEL+emvc3PbTNqHp+/l/t+zRLtssNIpLoja1vXZ0sRqg==",
      "type": "package",
      "path": "hotchocolate.aspnetcore.authorization/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.aspnetcore.authorization.15.1.9.nupkg.sha512",
        "hotchocolate.aspnetcore.authorization.nuspec",
        "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll",
        "lib/net8.0/HotChocolate.AspNetCore.Authorization.xml",
        "lib/net9.0/HotChocolate.AspNetCore.Authorization.dll",
        "lib/net9.0/HotChocolate.AspNetCore.Authorization.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Authorization/15.1.9": {
      "sha512": "wfKg+7F/DNzugwAHA4fd1flBStmfa7aXCo4fvpwFAqqpp3zguoKzzSVLw8VC1Ob0uTUutHWtqVVbBMYP8Cmq9g==",
      "type": "package",
      "path": "hotchocolate.authorization/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.authorization.15.1.9.nupkg.sha512",
        "hotchocolate.authorization.nuspec",
        "lib/net8.0/HotChocolate.Authorization.dll",
        "lib/net8.0/HotChocolate.Authorization.xml",
        "lib/net9.0/HotChocolate.Authorization.dll",
        "lib/net9.0/HotChocolate.Authorization.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.CostAnalysis/15.1.9": {
      "sha512": "XYseRG+XLHlmE8TnY6/dZCleKxxhHomR0kiriqaQ9Nt2nuJ0l8CTy7ucXK4ZYdikBrz46/KxXj0RwicIJzSN1Q==",
      "type": "package",
      "path": "hotchocolate.costanalysis/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.costanalysis.15.1.9.nupkg.sha512",
        "hotchocolate.costanalysis.nuspec",
        "lib/net8.0/HotChocolate.CostAnalysis.dll",
        "lib/net8.0/HotChocolate.CostAnalysis.xml",
        "lib/net9.0/HotChocolate.CostAnalysis.dll",
        "lib/net9.0/HotChocolate.CostAnalysis.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Data/15.1.9": {
      "sha512": "xYiRcqB3MTazm1+taZlnWk6qMDaF47DvyTakB+ERaotqSlHyXkQWuX5vPXyhGCTncu7Wvppv6HkOSdw5x1Q9lA==",
      "type": "package",
      "path": "hotchocolate.data/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "build/HotChocolate.Data.props",
        "build/HotChocolate.Data.targets",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.data.15.1.9.nupkg.sha512",
        "hotchocolate.data.nuspec",
        "lib/net8.0/HotChocolate.Data.dll",
        "lib/net8.0/HotChocolate.Data.xml",
        "lib/net9.0/HotChocolate.Data.dll",
        "lib/net9.0/HotChocolate.Data.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Data.EntityFramework/15.1.9": {
      "sha512": "BQ6c+NvWoygeok0ZwNf5Iof6CeFt+FBE2F8LOxCUW3r5t2g792CTG1tiZ7ZfrrAi3qwu3YdOYcLw+6tX+5M6pw==",
      "type": "package",
      "path": "hotchocolate.data.entityframework/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "build/HotChocolate.Data.EntityFramework.props",
        "build/HotChocolate.Data.EntityFramework.targets",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.data.entityframework.15.1.9.nupkg.sha512",
        "hotchocolate.data.entityframework.nuspec",
        "lib/net8.0/HotChocolate.Data.EntityFramework.dll",
        "lib/net8.0/HotChocolate.Data.EntityFramework.xml",
        "lib/net9.0/HotChocolate.Data.EntityFramework.dll",
        "lib/net9.0/HotChocolate.Data.EntityFramework.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Execution/15.1.9": {
      "sha512": "pTf6SyyMWiQLAp8NHcSBb/DYbkzEcVLLhrdh0BkX2VKwL6iknH3lKuQjP25LryIBiBpdB2ddl8ULNBjRBXMmMQ==",
      "type": "package",
      "path": "hotchocolate.execution/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.execution.15.1.9.nupkg.sha512",
        "hotchocolate.execution.nuspec",
        "lib/net8.0/HotChocolate.Execution.dll",
        "lib/net8.0/HotChocolate.Execution.xml",
        "lib/net9.0/HotChocolate.Execution.dll",
        "lib/net9.0/HotChocolate.Execution.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Execution.Abstractions/15.1.9": {
      "sha512": "x4Tx+n7e45tySRfBISeN8DCt2dcqPrR/JC/1dbnTVkgL5conIybhlfChuLNK36TbGPCNhqYgmow/jyNoorSAdg==",
      "type": "package",
      "path": "hotchocolate.execution.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.execution.abstractions.15.1.9.nupkg.sha512",
        "hotchocolate.execution.abstractions.nuspec",
        "lib/net8.0/HotChocolate.Execution.Abstractions.dll",
        "lib/net8.0/HotChocolate.Execution.Abstractions.xml",
        "lib/net9.0/HotChocolate.Execution.Abstractions.dll",
        "lib/net9.0/HotChocolate.Execution.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Execution.Projections/15.1.9": {
      "sha512": "xcASpOZxMWNa8o8OIlduqPGgpNHaxYVp8K8hzWunCpWP2JsR39a/U/YE8J3Yaj3x4KUlBNXiTq914axLY4qkTA==",
      "type": "package",
      "path": "hotchocolate.execution.projections/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.execution.projections.15.1.9.nupkg.sha512",
        "hotchocolate.execution.projections.nuspec",
        "lib/net8.0/HotChocolate.Execution.Projections.dll",
        "lib/net8.0/HotChocolate.Execution.Projections.xml",
        "lib/net9.0/HotChocolate.Execution.Projections.dll",
        "lib/net9.0/HotChocolate.Execution.Projections.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Features/15.1.9": {
      "sha512": "dFNkiW5BeA/B37/WdeZzX3o4mBfGzpQtWM4O7iI7pzlXnInLwNB7nuD1B186eulNnRiQBCSqM0ZcFjbLtUuzag==",
      "type": "package",
      "path": "hotchocolate.features/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.features.15.1.9.nupkg.sha512",
        "hotchocolate.features.nuspec",
        "lib/net8.0/HotChocolate.Features.dll",
        "lib/net8.0/HotChocolate.Features.xml",
        "lib/net9.0/HotChocolate.Features.dll",
        "lib/net9.0/HotChocolate.Features.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Fetching/15.1.9": {
      "sha512": "oH0qn/8CjiOQJmyag3IX/qFPJ4Aoc3Xz3I/MqPETQ40IRkwN0RrXfnFYgyulcF9O0VTGoUFUf4G8sT67CP6ffg==",
      "type": "package",
      "path": "hotchocolate.fetching/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.fetching.15.1.9.nupkg.sha512",
        "hotchocolate.fetching.nuspec",
        "lib/net8.0/HotChocolate.Fetching.dll",
        "lib/net8.0/HotChocolate.Fetching.xml",
        "lib/net9.0/HotChocolate.Fetching.dll",
        "lib/net9.0/HotChocolate.Fetching.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language/15.1.9": {
      "sha512": "/6uru5EbOPm5lKZ0VRzEVfP11mbKIhaPlQINybWMCXq1LAn21P0DgY/fVCh2AoNeFeITCTO8itqPv4vLntsnQg==",
      "type": "package",
      "path": "hotchocolate.language/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.15.1.9.nupkg.sha512",
        "hotchocolate.language.nuspec",
        "lib/net8.0/HotChocolate.Language.dll",
        "lib/net8.0/HotChocolate.Language.xml",
        "lib/net9.0/HotChocolate.Language.dll",
        "lib/net9.0/HotChocolate.Language.xml",
        "lib/netstandard2.0/HotChocolate.Language.dll",
        "lib/netstandard2.0/HotChocolate.Language.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.SyntaxTree/15.1.9": {
      "sha512": "Tzuk9ZnpgLZNnxUl79tRYpr2/Gt/W6g8LvwcXkpU+aejGOi6UHxYJtas30U4XQOCPyEd24Waw1WdtVe2AYil3A==",
      "type": "package",
      "path": "hotchocolate.language.syntaxtree/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.syntaxtree.15.1.9.nupkg.sha512",
        "hotchocolate.language.syntaxtree.nuspec",
        "lib/net8.0/HotChocolate.Language.SyntaxTree.dll",
        "lib/net8.0/HotChocolate.Language.SyntaxTree.xml",
        "lib/net9.0/HotChocolate.Language.SyntaxTree.dll",
        "lib/net9.0/HotChocolate.Language.SyntaxTree.xml",
        "lib/netstandard2.0/HotChocolate.Language.SyntaxTree.dll",
        "lib/netstandard2.0/HotChocolate.Language.SyntaxTree.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.Utf8/15.1.9": {
      "sha512": "E/53yeCEZUpjLsxkCunN7AgMZVaIPnvZopqB6oyD+ygZjm7zkpWgssnI621GL0WxAmTbr7ehrHx5EXt8dN/TQw==",
      "type": "package",
      "path": "hotchocolate.language.utf8/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.utf8.15.1.9.nupkg.sha512",
        "hotchocolate.language.utf8.nuspec",
        "lib/net8.0/HotChocolate.Language.Utf8.dll",
        "lib/net8.0/HotChocolate.Language.Utf8.xml",
        "lib/net9.0/HotChocolate.Language.Utf8.dll",
        "lib/net9.0/HotChocolate.Language.Utf8.xml",
        "lib/netstandard2.0/HotChocolate.Language.Utf8.dll",
        "lib/netstandard2.0/HotChocolate.Language.Utf8.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.Visitors/15.1.9": {
      "sha512": "9LVHdE/22DwxpTzD+U0hTRik8oD+yqPr0gO9WlOHbqqV4oaI6m07KdkF6F48Z8evmMLtfPWmOjUX2dNI5k9Wgg==",
      "type": "package",
      "path": "hotchocolate.language.visitors/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.visitors.15.1.9.nupkg.sha512",
        "hotchocolate.language.visitors.nuspec",
        "lib/net8.0/HotChocolate.Language.Visitors.dll",
        "lib/net8.0/HotChocolate.Language.Visitors.xml",
        "lib/net9.0/HotChocolate.Language.Visitors.dll",
        "lib/net9.0/HotChocolate.Language.Visitors.xml",
        "lib/netstandard2.0/HotChocolate.Language.Visitors.dll",
        "lib/netstandard2.0/HotChocolate.Language.Visitors.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.Web/15.1.9": {
      "sha512": "SMRx4Ix4/EW2Dk3gBgyEbuPPUPkZdCOHIyiNeUzyWYuGOe7T/aj2pTBYUlKLxCJhWeH++BViEGMpx4J7uzKo0A==",
      "type": "package",
      "path": "hotchocolate.language.web/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.web.15.1.9.nupkg.sha512",
        "hotchocolate.language.web.nuspec",
        "lib/net8.0/HotChocolate.Language.Web.dll",
        "lib/net8.0/HotChocolate.Language.Web.xml",
        "lib/net9.0/HotChocolate.Language.Web.dll",
        "lib/net9.0/HotChocolate.Language.Web.xml",
        "lib/netstandard2.0/HotChocolate.Language.Web.dll",
        "lib/netstandard2.0/HotChocolate.Language.Web.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Primitives/15.1.9": {
      "sha512": "41ZTC75xe4cPJ4FcogVBktp5U6tOplwlbmqwLreY/yY7WikghlNAooczGJQFJiutEl0IkCanLLVKeizPY2dJAw==",
      "type": "package",
      "path": "hotchocolate.primitives/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.primitives.15.1.9.nupkg.sha512",
        "hotchocolate.primitives.nuspec",
        "lib/net8.0/HotChocolate.Primitives.dll",
        "lib/net8.0/HotChocolate.Primitives.xml",
        "lib/net9.0/HotChocolate.Primitives.dll",
        "lib/net9.0/HotChocolate.Primitives.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Subscriptions/15.1.9": {
      "sha512": "Vw4UK1J/ck5HBV+prYKaS0fcPKWMynBWML49pQOVDqtRDctoCNNIk0w7G83QWRNmrQwLr70unUeh8jkeTl5U2A==",
      "type": "package",
      "path": "hotchocolate.subscriptions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.subscriptions.15.1.9.nupkg.sha512",
        "hotchocolate.subscriptions.nuspec",
        "lib/net8.0/HotChocolate.Subscriptions.dll",
        "lib/net8.0/HotChocolate.Subscriptions.xml",
        "lib/net9.0/HotChocolate.Subscriptions.dll",
        "lib/net9.0/HotChocolate.Subscriptions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Subscriptions.InMemory/15.1.9": {
      "sha512": "mbrdirU8+4O6J0zovdxoEQaqHmyeqwKMn2Yk82rOj67+M4Wd69Tl/7OF59bBFG8Plrk+fqnEb/DW5Iv8w6mnWA==",
      "type": "package",
      "path": "hotchocolate.subscriptions.inmemory/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.subscriptions.inmemory.15.1.9.nupkg.sha512",
        "hotchocolate.subscriptions.inmemory.nuspec",
        "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll",
        "lib/net8.0/HotChocolate.Subscriptions.InMemory.xml",
        "lib/net9.0/HotChocolate.Subscriptions.InMemory.dll",
        "lib/net9.0/HotChocolate.Subscriptions.InMemory.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Transport.Sockets/15.1.9": {
      "sha512": "ex9DQdgwUa8tdQDl1W2dWCBH24BE8+hgp++8iQKUFC5a00caAe6g9lzAzFCfv2s2OFIb97YzGxvct26qvCF+Aw==",
      "type": "package",
      "path": "hotchocolate.transport.sockets/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.transport.sockets.15.1.9.nupkg.sha512",
        "hotchocolate.transport.sockets.nuspec",
        "lib/net8.0/HotChocolate.Transport.Sockets.dll",
        "lib/net8.0/HotChocolate.Transport.Sockets.xml",
        "lib/net9.0/HotChocolate.Transport.Sockets.dll",
        "lib/net9.0/HotChocolate.Transport.Sockets.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types/15.1.9": {
      "sha512": "4nATgti5zOSsEyRFW0CNmYctQ7kwaINFisPTiQ7TvTD1DD7sOxWxEjEFJtuZcgocK+1OkmAlpx7jUU1+SclU6A==",
      "type": "package",
      "path": "hotchocolate.types/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.15.1.9.nupkg.sha512",
        "hotchocolate.types.nuspec",
        "lib/net8.0/HotChocolate.Types.dll",
        "lib/net8.0/HotChocolate.Types.xml",
        "lib/net9.0/HotChocolate.Types.dll",
        "lib/net9.0/HotChocolate.Types.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.CursorPagination/15.1.9": {
      "sha512": "k4EEq9WgIhWOLhkG+pSc7rsnMqE0urhUv1SsbNYx60h+xAw7R39b+kC8sL8Yjjtypw4Sr1xDjE2NIj9dCOm4tw==",
      "type": "package",
      "path": "hotchocolate.types.cursorpagination/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.cursorpagination.15.1.9.nupkg.sha512",
        "hotchocolate.types.cursorpagination.nuspec",
        "lib/net8.0/HotChocolate.Types.CursorPagination.dll",
        "lib/net8.0/HotChocolate.Types.CursorPagination.xml",
        "lib/net9.0/HotChocolate.Types.CursorPagination.dll",
        "lib/net9.0/HotChocolate.Types.CursorPagination.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
      "sha512": "uYU38ejpAnAQYMavSxZ2UuFdCKdOLeaDytEGgAmgJS48LgZrlwRI6PAj7tK7tugzgFReMn1zeXUmfgBf2SZtng==",
      "type": "package",
      "path": "hotchocolate.types.cursorpagination.extensions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.cursorpagination.extensions.15.1.9.nupkg.sha512",
        "hotchocolate.types.cursorpagination.extensions.nuspec",
        "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll",
        "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.xml",
        "lib/net9.0/HotChocolate.Types.CursorPagination.Extensions.dll",
        "lib/net9.0/HotChocolate.Types.CursorPagination.Extensions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Errors/15.1.9": {
      "sha512": "4stl4t1o97u26oXmYOrtTgznvDCECnOquXctbHbh8kjGYzmwHeCw5Wga09K4mPoi+bdJA47jTgZwUdC8ja8xKw==",
      "type": "package",
      "path": "hotchocolate.types.errors/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.errors.15.1.9.nupkg.sha512",
        "hotchocolate.types.errors.nuspec",
        "lib/net8.0/HotChocolate.Types.Errors.dll",
        "lib/net8.0/HotChocolate.Types.Errors.xml",
        "lib/net9.0/HotChocolate.Types.Errors.dll",
        "lib/net9.0/HotChocolate.Types.Errors.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Mutations/15.1.9": {
      "sha512": "lnODSHF51sjH6MUOs90s0vvROiQx3YGGe0ZJxqg0uZShrdiIygbw6jA1S9mf9VHj4q04WuJIsC5pGf89Rk19iw==",
      "type": "package",
      "path": "hotchocolate.types.mutations/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.mutations.15.1.9.nupkg.sha512",
        "hotchocolate.types.mutations.nuspec",
        "lib/net8.0/HotChocolate.Types.Mutations.dll",
        "lib/net8.0/HotChocolate.Types.Mutations.xml",
        "lib/net9.0/HotChocolate.Types.Mutations.dll",
        "lib/net9.0/HotChocolate.Types.Mutations.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Queries/15.1.9": {
      "sha512": "EmmTu5NX402uvmCAaiNw623ty4BfxBDrCl1BPVhCLShmoQKfS8WXduImtGZFvjSNN1eJ6hT4IDDjNCtgmCV3Kw==",
      "type": "package",
      "path": "hotchocolate.types.queries/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.queries.15.1.9.nupkg.sha512",
        "hotchocolate.types.queries.nuspec",
        "lib/net8.0/HotChocolate.Types.Queries.dll",
        "lib/net8.0/HotChocolate.Types.Queries.xml",
        "lib/net9.0/HotChocolate.Types.Queries.dll",
        "lib/net9.0/HotChocolate.Types.Queries.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Scalars.Upload/15.1.9": {
      "sha512": "eBAhdK80UpxGKUoQ3+GXivSHTjV3Qf73p5BRRZcQGSfN/05R9UE2TtNfNDNbXsPmEXN7vSYbLtvtyvD+0AWodA==",
      "type": "package",
      "path": "hotchocolate.types.scalars.upload/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.scalars.upload.15.1.9.nupkg.sha512",
        "hotchocolate.types.scalars.upload.nuspec",
        "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll",
        "lib/net8.0/HotChocolate.Types.Scalars.Upload.xml",
        "lib/net9.0/HotChocolate.Types.Scalars.Upload.dll",
        "lib/net9.0/HotChocolate.Types.Scalars.Upload.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Shared/15.1.9": {
      "sha512": "I34zCMRDoH27Ma0G1xF/WL6j9H9NCGxfkXY6axlIemtH1ZgSYbQCUTw6UdeSZyGbBlwAObxh54c96NsPIlay3Q==",
      "type": "package",
      "path": "hotchocolate.types.shared/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.shared.15.1.9.nupkg.sha512",
        "hotchocolate.types.shared.nuspec",
        "lib/net8.0/HotChocolate.Types.Shared.dll",
        "lib/net8.0/HotChocolate.Types.Shared.xml",
        "lib/net9.0/HotChocolate.Types.Shared.dll",
        "lib/net9.0/HotChocolate.Types.Shared.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Utilities/15.1.9": {
      "sha512": "z1pmsidrY/2u+26lzqfxP3YlxhLBQyPyyWmbrTRAta6riy4AT5iTRlCrApVZRZJxvrRsrI0Q8rz6k+nsXPn75A==",
      "type": "package",
      "path": "hotchocolate.utilities/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.utilities.15.1.9.nupkg.sha512",
        "hotchocolate.utilities.nuspec",
        "lib/net8.0/HotChocolate.Utilities.dll",
        "lib/net8.0/HotChocolate.Utilities.xml",
        "lib/net9.0/HotChocolate.Utilities.dll",
        "lib/net9.0/HotChocolate.Utilities.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Utilities.DependencyInjection/15.1.9": {
      "sha512": "ReYfZNdFn9CPDwkWtUrDfziLvr5wqvkV1NPPf3g27VYLskzOGYQ0PJfZgzyj1JfR+FYnjKjcjITenzrRc+0Q4w==",
      "type": "package",
      "path": "hotchocolate.utilities.dependencyinjection/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.utilities.dependencyinjection.15.1.9.nupkg.sha512",
        "hotchocolate.utilities.dependencyinjection.nuspec",
        "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll",
        "lib/net8.0/HotChocolate.Utilities.DependencyInjection.xml",
        "lib/net9.0/HotChocolate.Utilities.DependencyInjection.dll",
        "lib/net9.0/HotChocolate.Utilities.DependencyInjection.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Validation/15.1.9": {
      "sha512": "WwkVdB83XzehdRrSbqVsj83/Vnpia0fGNPv60jEbyhdZZUzMRF/g8VW2+JaFFi3PVGk+Ccd11yKbyGAh4au/cw==",
      "type": "package",
      "path": "hotchocolate.validation/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.validation.15.1.9.nupkg.sha512",
        "hotchocolate.validation.nuspec",
        "lib/net8.0/HotChocolate.Validation.dll",
        "lib/net8.0/HotChocolate.Validation.xml",
        "lib/net9.0/HotChocolate.Validation.dll",
        "lib/net9.0/HotChocolate.Validation.xml",
        "strawberryshake-signet.png"
      ]
    },
    "Humanizer.Core/2.14.1": {
      "sha512": "lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "type": "package",
      "path": "humanizer.core/2.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "humanizer.core.2.14.1.nupkg.sha512",
        "humanizer.core.nuspec",
        "lib/net6.0/Humanizer.dll",
        "lib/net6.0/Humanizer.xml",
        "lib/netstandard1.0/Humanizer.dll",
        "lib/netstandard1.0/Humanizer.xml",
        "lib/netstandard2.0/Humanizer.dll",
        "lib/netstandard2.0/Humanizer.xml",
        "logo.png"
      ]
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
      "sha512": "vkGkpvEGGLFHeYhlBqdJiOL/7aYiUmLg2PTfuDDjBDUDb5QTpoeWLNOOoodTlu88J+GluGE+DFF1kd9hxJd5bA==",
      "type": "package",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.19",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.xml",
        "microsoft.aspnetcore.authentication.jwtbearer.8.0.19.nupkg.sha512",
        "microsoft.aspnetcore.authentication.jwtbearer.nuspec"
      ]
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "sha512": "3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "type": "package",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Bcl.AsyncInterfaces.targets",
        "buildTransitive/net462/_._",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
        "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512",
        "microsoft.bcl.asyncinterfaces.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Build.Framework/17.8.3": {
      "sha512": "NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "type": "package",
      "path": "microsoft.build.framework/17.8.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "MSBuild-NuGet-Icon.png",
        "README.md",
        "lib/net472/Microsoft.Build.Framework.dll",
        "lib/net472/Microsoft.Build.Framework.pdb",
        "lib/net472/Microsoft.Build.Framework.xml",
        "lib/net8.0/Microsoft.Build.Framework.dll",
        "lib/net8.0/Microsoft.Build.Framework.pdb",
        "lib/net8.0/Microsoft.Build.Framework.xml",
        "microsoft.build.framework.17.8.3.nupkg.sha512",
        "microsoft.build.framework.nuspec",
        "notices/THIRDPARTYNOTICES.txt",
        "ref/net472/Microsoft.Build.Framework.dll",
        "ref/net472/Microsoft.Build.Framework.xml",
        "ref/net8.0/Microsoft.Build.Framework.dll",
        "ref/net8.0/Microsoft.Build.Framework.xml",
        "ref/netstandard2.0/Microsoft.Build.Framework.dll",
        "ref/netstandard2.0/Microsoft.Build.Framework.xml"
      ]
    },
    "Microsoft.Build.Locator/1.7.8": {
      "sha512": "sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "type": "package",
      "path": "microsoft.build.locator/1.7.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "MSBuild-NuGet-Icon.png",
        "build/Microsoft.Build.Locator.props",
        "build/Microsoft.Build.Locator.targets",
        "lib/net46/Microsoft.Build.Locator.dll",
        "lib/net6.0/Microsoft.Build.Locator.dll",
        "microsoft.build.locator.1.7.8.nupkg.sha512",
        "microsoft.build.locator.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "sha512": "AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "type": "package",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "analyzers/dotnet/cs/Microsoft.CodeAnalysis.Analyzers.dll",
        "analyzers/dotnet/cs/Microsoft.CodeAnalysis.CSharp.Analyzers.dll",
        "analyzers/dotnet/cs/cs/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/de/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/es/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/fr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/it/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ja/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ko/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pl/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pt-BR/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ru/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/tr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/zh-Hans/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/zh-Hant/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/Microsoft.CodeAnalysis.Analyzers.dll",
        "analyzers/dotnet/vb/Microsoft.CodeAnalysis.VisualBasic.Analyzers.dll",
        "analyzers/dotnet/vb/cs/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/de/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/es/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/fr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/it/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ja/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ko/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/pl/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/pt-BR/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ru/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/tr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/zh-Hans/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/zh-Hant/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "buildTransitive/Microsoft.CodeAnalysis.Analyzers.props",
        "buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets",
        "buildTransitive/config/analysislevel_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_all.globalconfig",
        "buildTransitive/config/analysislevel_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_default.globalconfig",
        "buildTransitive/config/analysislevel_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_none.globalconfig",
        "buildTransitive/config/analysislevel_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_recommended_warnaserror.globalconfig",
        "documentation/Analyzer Configuration.md",
        "documentation/Microsoft.CodeAnalysis.Analyzers.md",
        "documentation/Microsoft.CodeAnalysis.Analyzers.sarif",
        "editorconfig/AllRulesDefault/.editorconfig",
        "editorconfig/AllRulesDisabled/.editorconfig",
        "editorconfig/AllRulesEnabled/.editorconfig",
        "editorconfig/CorrectnessRulesDefault/.editorconfig",
        "editorconfig/CorrectnessRulesEnabled/.editorconfig",
        "editorconfig/DataflowRulesDefault/.editorconfig",
        "editorconfig/DataflowRulesEnabled/.editorconfig",
        "editorconfig/LibraryRulesDefault/.editorconfig",
        "editorconfig/LibraryRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCompatibilityRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCompatibilityRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCorrectnessRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCorrectnessRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDesignRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDesignRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDocumentationRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDocumentationRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisLocalizationRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisLocalizationRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisPerformanceRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisPerformanceRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisReleaseTrackingRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisReleaseTrackingRulesEnabled/.editorconfig",
        "editorconfig/PortedFromFxCopRulesDefault/.editorconfig",
        "editorconfig/PortedFromFxCopRulesEnabled/.editorconfig",
        "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512",
        "microsoft.codeanalysis.analyzers.nuspec",
        "rulesets/AllRulesDefault.ruleset",
        "rulesets/AllRulesDisabled.ruleset",
        "rulesets/AllRulesEnabled.ruleset",
        "rulesets/CorrectnessRulesDefault.ruleset",
        "rulesets/CorrectnessRulesEnabled.ruleset",
        "rulesets/DataflowRulesDefault.ruleset",
        "rulesets/DataflowRulesEnabled.ruleset",
        "rulesets/LibraryRulesDefault.ruleset",
        "rulesets/LibraryRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisCompatibilityRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisCompatibilityRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisCorrectnessRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisCorrectnessRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisDesignRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisDesignRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisDocumentationRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisDocumentationRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisLocalizationRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisLocalizationRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisPerformanceRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisPerformanceRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisReleaseTrackingRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisReleaseTrackingRulesEnabled.ruleset",
        "rulesets/PortedFromFxCopRulesDefault.ruleset",
        "rulesets/PortedFromFxCopRulesEnabled.ruleset",
        "tools/install.ps1",
        "tools/uninstall.ps1"
      ]
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "sha512": "/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "type": "package",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "microsoft.codeanalysis.common.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.common.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "sha512": "+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "type": "package",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.csharp.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "sha512": "3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "type": "package",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.csharp.workspaces.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "sha512": "LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "type": "package",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.workspaces.common.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "sha512": "IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "type": "package",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.exe",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net472/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.runtimeconfig.json",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.runtimeconfig.json",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.workspaces.msbuild.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore/9.0.8": {
      "sha512": "bNGdPhN762+BIIO5MFYLjafRqkSS1MqLOc/erd55InvLnFxt9H3N5JNsuag1ZHyBor1VtD42U0CHpgqkWeAYgQ==",
      "type": "package",
      "path": "microsoft.entityframeworkcore/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.xml",
        "microsoft.entityframeworkcore.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
      "sha512": "B2yfAIQRRAQ4zvvWqh+HudD+juV3YoLlpXnrog3tU0PM9AFpuq6xo0+mEglN1P43WgdcUiF+65CWBcZe35s15Q==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
        "microsoft.entityframeworkcore.abstractions.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.abstractions.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
      "sha512": "2EYStCXt4Hi9p3J3EYMQbItJDtASJd064Kcs8C8hj8Jt5srILrR9qlaL0Ryvk8NrWQoCQvIELsmiuqLEZMLvGA==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
        "docs/PACKAGE.md",
        "microsoft.entityframeworkcore.analyzers.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.analyzers.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.8": {
      "sha512": "02e8OcoumSUAES3VkXrMT9EnNCUKWJoifn5+8fFEbAtRhKL3xg2a/Mj6rsAUGF7tkYFox6oKzJCn0jbm6b8Lbw==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.design/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "build/net8.0/Microsoft.EntityFrameworkCore.Design.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Design.xml",
        "microsoft.entityframeworkcore.design.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.design.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
      "sha512": "OVhfyxiHxMvYpwQ8Jy3YZi4koy6TK5/Q7C1oq3z6db+HEGuu6x9L1BX5zDIdJxxlRePMyO4D8ORiXj/D7+MUqw==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.relational/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.xml",
        "microsoft.entityframeworkcore.relational.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.relational.nuspec"
      ]
    },
    "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
      "sha512": "Ckb5EDBUNJdFWyajfXzUIMRkhf52fHZOQuuZg/oiu8y7zDCVwD0iHhew6MnThjHmevanpxL3f5ci2TtHQEN6bw==",
      "type": "package",
      "path": "microsoft.extensions.apidescription.server/6.0.5",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "build/Microsoft.Extensions.ApiDescription.Server.props",
        "build/Microsoft.Extensions.ApiDescription.Server.targets",
        "buildMultiTargeting/Microsoft.Extensions.ApiDescription.Server.props",
        "buildMultiTargeting/Microsoft.Extensions.ApiDescription.Server.targets",
        "microsoft.extensions.apidescription.server.6.0.5.nupkg.sha512",
        "microsoft.extensions.apidescription.server.nuspec",
        "tools/Newtonsoft.Json.dll",
        "tools/dotnet-getdocument.deps.json",
        "tools/dotnet-getdocument.dll",
        "tools/dotnet-getdocument.runtimeconfig.json",
        "tools/net461-x86/GetDocument.Insider.exe",
        "tools/net461-x86/GetDocument.Insider.exe.config",
        "tools/net461-x86/Microsoft.Win32.Primitives.dll",
        "tools/net461-x86/System.AppContext.dll",
        "tools/net461-x86/System.Buffers.dll",
        "tools/net461-x86/System.Collections.Concurrent.dll",
        "tools/net461-x86/System.Collections.NonGeneric.dll",
        "tools/net461-x86/System.Collections.Specialized.dll",
        "tools/net461-x86/System.Collections.dll",
        "tools/net461-x86/System.ComponentModel.EventBasedAsync.dll",
        "tools/net461-x86/System.ComponentModel.Primitives.dll",
        "tools/net461-x86/System.ComponentModel.TypeConverter.dll",
        "tools/net461-x86/System.ComponentModel.dll",
        "tools/net461-x86/System.Console.dll",
        "tools/net461-x86/System.Data.Common.dll",
        "tools/net461-x86/System.Diagnostics.Contracts.dll",
        "tools/net461-x86/System.Diagnostics.Debug.dll",
        "tools/net461-x86/System.Diagnostics.DiagnosticSource.dll",
        "tools/net461-x86/System.Diagnostics.FileVersionInfo.dll",
        "tools/net461-x86/System.Diagnostics.Process.dll",
        "tools/net461-x86/System.Diagnostics.StackTrace.dll",
        "tools/net461-x86/System.Diagnostics.TextWriterTraceListener.dll",
        "tools/net461-x86/System.Diagnostics.Tools.dll",
        "tools/net461-x86/System.Diagnostics.TraceSource.dll",
        "tools/net461-x86/System.Diagnostics.Tracing.dll",
        "tools/net461-x86/System.Drawing.Primitives.dll",
        "tools/net461-x86/System.Dynamic.Runtime.dll",
        "tools/net461-x86/System.Globalization.Calendars.dll",
        "tools/net461-x86/System.Globalization.Extensions.dll",
        "tools/net461-x86/System.Globalization.dll",
        "tools/net461-x86/System.IO.Compression.ZipFile.dll",
        "tools/net461-x86/System.IO.Compression.dll",
        "tools/net461-x86/System.IO.FileSystem.DriveInfo.dll",
        "tools/net461-x86/System.IO.FileSystem.Primitives.dll",
        "tools/net461-x86/System.IO.FileSystem.Watcher.dll",
        "tools/net461-x86/System.IO.FileSystem.dll",
        "tools/net461-x86/System.IO.IsolatedStorage.dll",
        "tools/net461-x86/System.IO.MemoryMappedFiles.dll",
        "tools/net461-x86/System.IO.Pipes.dll",
        "tools/net461-x86/System.IO.UnmanagedMemoryStream.dll",
        "tools/net461-x86/System.IO.dll",
        "tools/net461-x86/System.Linq.Expressions.dll",
        "tools/net461-x86/System.Linq.Parallel.dll",
        "tools/net461-x86/System.Linq.Queryable.dll",
        "tools/net461-x86/System.Linq.dll",
        "tools/net461-x86/System.Memory.dll",
        "tools/net461-x86/System.Net.Http.dll",
        "tools/net461-x86/System.Net.NameResolution.dll",
        "tools/net461-x86/System.Net.NetworkInformation.dll",
        "tools/net461-x86/System.Net.Ping.dll",
        "tools/net461-x86/System.Net.Primitives.dll",
        "tools/net461-x86/System.Net.Requests.dll",
        "tools/net461-x86/System.Net.Security.dll",
        "tools/net461-x86/System.Net.Sockets.dll",
        "tools/net461-x86/System.Net.WebHeaderCollection.dll",
        "tools/net461-x86/System.Net.WebSockets.Client.dll",
        "tools/net461-x86/System.Net.WebSockets.dll",
        "tools/net461-x86/System.Numerics.Vectors.dll",
        "tools/net461-x86/System.ObjectModel.dll",
        "tools/net461-x86/System.Reflection.Extensions.dll",
        "tools/net461-x86/System.Reflection.Primitives.dll",
        "tools/net461-x86/System.Reflection.dll",
        "tools/net461-x86/System.Resources.Reader.dll",
        "tools/net461-x86/System.Resources.ResourceManager.dll",
        "tools/net461-x86/System.Resources.Writer.dll",
        "tools/net461-x86/System.Runtime.CompilerServices.Unsafe.dll",
        "tools/net461-x86/System.Runtime.CompilerServices.VisualC.dll",
        "tools/net461-x86/System.Runtime.Extensions.dll",
        "tools/net461-x86/System.Runtime.Handles.dll",
        "tools/net461-x86/System.Runtime.InteropServices.RuntimeInformation.dll",
        "tools/net461-x86/System.Runtime.InteropServices.dll",
        "tools/net461-x86/System.Runtime.Numerics.dll",
        "tools/net461-x86/System.Runtime.Serialization.Formatters.dll",
        "tools/net461-x86/System.Runtime.Serialization.Json.dll",
        "tools/net461-x86/System.Runtime.Serialization.Primitives.dll",
        "tools/net461-x86/System.Runtime.Serialization.Xml.dll",
        "tools/net461-x86/System.Runtime.dll",
        "tools/net461-x86/System.Security.Claims.dll",
        "tools/net461-x86/System.Security.Cryptography.Algorithms.dll",
        "tools/net461-x86/System.Security.Cryptography.Csp.dll",
        "tools/net461-x86/System.Security.Cryptography.Encoding.dll",
        "tools/net461-x86/System.Security.Cryptography.Primitives.dll",
        "tools/net461-x86/System.Security.Cryptography.X509Certificates.dll",
        "tools/net461-x86/System.Security.Principal.dll",
        "tools/net461-x86/System.Security.SecureString.dll",
        "tools/net461-x86/System.Text.Encoding.Extensions.dll",
        "tools/net461-x86/System.Text.Encoding.dll",
        "tools/net461-x86/System.Text.RegularExpressions.dll",
        "tools/net461-x86/System.Threading.Overlapped.dll",
        "tools/net461-x86/System.Threading.Tasks.Parallel.dll",
        "tools/net461-x86/System.Threading.Tasks.dll",
        "tools/net461-x86/System.Threading.Thread.dll",
        "tools/net461-x86/System.Threading.ThreadPool.dll",
        "tools/net461-x86/System.Threading.Timer.dll",
        "tools/net461-x86/System.Threading.dll",
        "tools/net461-x86/System.ValueTuple.dll",
        "tools/net461-x86/System.Xml.ReaderWriter.dll",
        "tools/net461-x86/System.Xml.XDocument.dll",
        "tools/net461-x86/System.Xml.XPath.XDocument.dll",
        "tools/net461-x86/System.Xml.XPath.dll",
        "tools/net461-x86/System.Xml.XmlDocument.dll",
        "tools/net461-x86/System.Xml.XmlSerializer.dll",
        "tools/net461-x86/netstandard.dll",
        "tools/net461/GetDocument.Insider.exe",
        "tools/net461/GetDocument.Insider.exe.config",
        "tools/net461/Microsoft.Win32.Primitives.dll",
        "tools/net461/System.AppContext.dll",
        "tools/net461/System.Buffers.dll",
        "tools/net461/System.Collections.Concurrent.dll",
        "tools/net461/System.Collections.NonGeneric.dll",
        "tools/net461/System.Collections.Specialized.dll",
        "tools/net461/System.Collections.dll",
        "tools/net461/System.ComponentModel.EventBasedAsync.dll",
        "tools/net461/System.ComponentModel.Primitives.dll",
        "tools/net461/System.ComponentModel.TypeConverter.dll",
        "tools/net461/System.ComponentModel.dll",
        "tools/net461/System.Console.dll",
        "tools/net461/System.Data.Common.dll",
        "tools/net461/System.Diagnostics.Contracts.dll",
        "tools/net461/System.Diagnostics.Debug.dll",
        "tools/net461/System.Diagnostics.DiagnosticSource.dll",
        "tools/net461/System.Diagnostics.FileVersionInfo.dll",
        "tools/net461/System.Diagnostics.Process.dll",
        "tools/net461/System.Diagnostics.StackTrace.dll",
        "tools/net461/System.Diagnostics.TextWriterTraceListener.dll",
        "tools/net461/System.Diagnostics.Tools.dll",
        "tools/net461/System.Diagnostics.TraceSource.dll",
        "tools/net461/System.Diagnostics.Tracing.dll",
        "tools/net461/System.Drawing.Primitives.dll",
        "tools/net461/System.Dynamic.Runtime.dll",
        "tools/net461/System.Globalization.Calendars.dll",
        "tools/net461/System.Globalization.Extensions.dll",
        "tools/net461/System.Globalization.dll",
        "tools/net461/System.IO.Compression.ZipFile.dll",
        "tools/net461/System.IO.Compression.dll",
        "tools/net461/System.IO.FileSystem.DriveInfo.dll",
        "tools/net461/System.IO.FileSystem.Primitives.dll",
        "tools/net461/System.IO.FileSystem.Watcher.dll",
        "tools/net461/System.IO.FileSystem.dll",
        "tools/net461/System.IO.IsolatedStorage.dll",
        "tools/net461/System.IO.MemoryMappedFiles.dll",
        "tools/net461/System.IO.Pipes.dll",
        "tools/net461/System.IO.UnmanagedMemoryStream.dll",
        "tools/net461/System.IO.dll",
        "tools/net461/System.Linq.Expressions.dll",
        "tools/net461/System.Linq.Parallel.dll",
        "tools/net461/System.Linq.Queryable.dll",
        "tools/net461/System.Linq.dll",
        "tools/net461/System.Memory.dll",
        "tools/net461/System.Net.Http.dll",
        "tools/net461/System.Net.NameResolution.dll",
        "tools/net461/System.Net.NetworkInformation.dll",
        "tools/net461/System.Net.Ping.dll",
        "tools/net461/System.Net.Primitives.dll",
        "tools/net461/System.Net.Requests.dll",
        "tools/net461/System.Net.Security.dll",
        "tools/net461/System.Net.Sockets.dll",
        "tools/net461/System.Net.WebHeaderCollection.dll",
        "tools/net461/System.Net.WebSockets.Client.dll",
        "tools/net461/System.Net.WebSockets.dll",
        "tools/net461/System.Numerics.Vectors.dll",
        "tools/net461/System.ObjectModel.dll",
        "tools/net461/System.Reflection.Extensions.dll",
        "tools/net461/System.Reflection.Primitives.dll",
        "tools/net461/System.Reflection.dll",
        "tools/net461/System.Resources.Reader.dll",
        "tools/net461/System.Resources.ResourceManager.dll",
        "tools/net461/System.Resources.Writer.dll",
        "tools/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "tools/net461/System.Runtime.CompilerServices.VisualC.dll",
        "tools/net461/System.Runtime.Extensions.dll",
        "tools/net461/System.Runtime.Handles.dll",
        "tools/net461/System.Runtime.InteropServices.RuntimeInformation.dll",
        "tools/net461/System.Runtime.InteropServices.dll",
        "tools/net461/System.Runtime.Numerics.dll",
        "tools/net461/System.Runtime.Serialization.Formatters.dll",
        "tools/net461/System.Runtime.Serialization.Json.dll",
        "tools/net461/System.Runtime.Serialization.Primitives.dll",
        "tools/net461/System.Runtime.Serialization.Xml.dll",
        "tools/net461/System.Runtime.dll",
        "tools/net461/System.Security.Claims.dll",
        "tools/net461/System.Security.Cryptography.Algorithms.dll",
        "tools/net461/System.Security.Cryptography.Csp.dll",
        "tools/net461/System.Security.Cryptography.Encoding.dll",
        "tools/net461/System.Security.Cryptography.Primitives.dll",
        "tools/net461/System.Security.Cryptography.X509Certificates.dll",
        "tools/net461/System.Security.Principal.dll",
        "tools/net461/System.Security.SecureString.dll",
        "tools/net461/System.Text.Encoding.Extensions.dll",
        "tools/net461/System.Text.Encoding.dll",
        "tools/net461/System.Text.RegularExpressions.dll",
        "tools/net461/System.Threading.Overlapped.dll",
        "tools/net461/System.Threading.Tasks.Parallel.dll",
        "tools/net461/System.Threading.Tasks.dll",
        "tools/net461/System.Threading.Thread.dll",
        "tools/net461/System.Threading.ThreadPool.dll",
        "tools/net461/System.Threading.Timer.dll",
        "tools/net461/System.Threading.dll",
        "tools/net461/System.ValueTuple.dll",
        "tools/net461/System.Xml.ReaderWriter.dll",
        "tools/net461/System.Xml.XDocument.dll",
        "tools/net461/System.Xml.XPath.XDocument.dll",
        "tools/net461/System.Xml.XPath.dll",
        "tools/net461/System.Xml.XmlDocument.dll",
        "tools/net461/System.Xml.XmlSerializer.dll",
        "tools/net461/netstandard.dll",
        "tools/netcoreapp2.1/GetDocument.Insider.deps.json",
        "tools/netcoreapp2.1/GetDocument.Insider.dll",
        "tools/netcoreapp2.1/GetDocument.Insider.runtimeconfig.json",
        "tools/netcoreapp2.1/System.Diagnostics.DiagnosticSource.dll"
      ]
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
      "sha512": "4h7bsVoKoiK+SlPM+euX/ayGnKZhl47pPCidLTiio9xyG+vgVVfcYxcYQgjm0SCrdSxjG0EGIAKF8EFr3G8Ifw==",
      "type": "package",
      "path": "microsoft.extensions.caching.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "microsoft.extensions.caching.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.caching.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Caching.Memory/9.0.8": {
      "sha512": "grR+oPyj8HVn4DT8CFUUdSw2pZZKS13KjytFe4txpHQliGM1GEDotohmjgvyl3hm7RFB3FRqvbouEX3/1ewp5A==",
      "type": "package",
      "path": "microsoft.extensions.caching.memory/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Memory.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Memory.targets",
        "lib/net462/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net462/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
        "microsoft.extensions.caching.memory.9.0.8.nupkg.sha512",
        "microsoft.extensions.caching.memory.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
      "sha512": "yNou2KM35RvzOh4vUFtl2l33rWPvOCoba+nzEDJ+BgD8aOL/jew4WPCibQvntRfOJ2pJU8ARygSMD+pdjvDHuA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "microsoft.extensions.configuration.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.configuration.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection/9.0.8": {
      "sha512": "JJjI2Fa+QtZcUyuNjbKn04OjIUX5IgFGFu/Xc+qvzh1rXdZHLcnqqVXhR4093bGirTwacRlHiVg1XYI9xum6QQ==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
        "microsoft.extensions.dependencyinjection.9.0.8.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
      "sha512": "xY3lTjj4+ZYmiKIkyWitddrp1uL5uYiweQjqo4BKBw01ZC4HhcfgLghDpPZcUlppgWAFqFy9SgkiYWOMx365pw==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyModel/9.0.8": {
      "sha512": "3CW02zNjyqJ2eORo8Zkznpw6+QvK+tYUKZgKuKuAIYdy73TRFvpaqCwYws1k6/lMSJ7ZqABfWn0/wa5bRsIJ4w==",
      "type": "package",
      "path": "microsoft.extensions.dependencymodel/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyModel.targets",
        "lib/net462/Microsoft.Extensions.DependencyModel.dll",
        "lib/net462/Microsoft.Extensions.DependencyModel.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.xml",
        "microsoft.extensions.dependencymodel.9.0.8.nupkg.sha512",
        "microsoft.extensions.dependencymodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging/9.0.8": {
      "sha512": "Z/7ze+0iheT7FJeZPqJKARYvyC2bmwu3whbm/48BJjdlGVvgDguoCqJIkI/67NkroTYobd5geai1WheNQvWrgA==",
      "type": "package",
      "path": "microsoft.extensions.logging/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.targets",
        "lib/net462/Microsoft.Extensions.Logging.dll",
        "lib/net462/Microsoft.Extensions.Logging.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.xml",
        "microsoft.extensions.logging.9.0.8.nupkg.sha512",
        "microsoft.extensions.logging.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
      "sha512": "pYnAffJL7ARD/HCnnPvnFKSIHnTSmWz84WIlT9tPeQ4lHNiu0Az7N/8itihWvcF8sT+VVD5lq8V+ckMzu4SbOw==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.ObjectPool/8.0.0": {
      "sha512": "4pm+XgxSukskwjzDDfSjG4KNUIOdFF2VaqZZDtTzoyQMOVSnlV6ZM8a9aVu5dg9LVZTB//utzSc8fOi0b0Mb2Q==",
      "type": "package",
      "path": "microsoft.extensions.objectpool/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net462/Microsoft.Extensions.ObjectPool.dll",
        "lib/net462/Microsoft.Extensions.ObjectPool.xml",
        "lib/net8.0/Microsoft.Extensions.ObjectPool.dll",
        "lib/net8.0/Microsoft.Extensions.ObjectPool.xml",
        "lib/netstandard2.0/Microsoft.Extensions.ObjectPool.dll",
        "lib/netstandard2.0/Microsoft.Extensions.ObjectPool.xml",
        "microsoft.extensions.objectpool.8.0.0.nupkg.sha512",
        "microsoft.extensions.objectpool.nuspec"
      ]
    },
    "Microsoft.Extensions.Options/9.0.8": {
      "sha512": "OmTaQ0v4gxGQkehpwWIqPoEiwsPuG/u4HUsbOFoWGx4DKET2AXzopnFe/fE608FIhzc/kcg2p8JdyMRCCUzitQ==",
      "type": "package",
      "path": "microsoft.extensions.options/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Options.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Options.targets",
        "buildTransitive/net462/Microsoft.Extensions.Options.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Options.targets",
        "lib/net462/Microsoft.Extensions.Options.dll",
        "lib/net462/Microsoft.Extensions.Options.xml",
        "lib/net8.0/Microsoft.Extensions.Options.dll",
        "lib/net8.0/Microsoft.Extensions.Options.xml",
        "lib/net9.0/Microsoft.Extensions.Options.dll",
        "lib/net9.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Options.xml",
        "microsoft.extensions.options.9.0.8.nupkg.sha512",
        "microsoft.extensions.options.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Primitives/9.0.8": {
      "sha512": "tizSIOEsIgSNSSh+hKeUVPK7xmTIjR8s+mJWOu1KXV3htvNQiPMFRMO17OdI1y/4ZApdBVk49u/08QGC9yvLug==",
      "type": "package",
      "path": "microsoft.extensions.primitives/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Primitives.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Primitives.targets",
        "lib/net462/Microsoft.Extensions.Primitives.dll",
        "lib/net462/Microsoft.Extensions.Primitives.xml",
        "lib/net8.0/Microsoft.Extensions.Primitives.dll",
        "lib/net8.0/Microsoft.Extensions.Primitives.xml",
        "lib/net9.0/Microsoft.Extensions.Primitives.dll",
        "lib/net9.0/Microsoft.Extensions.Primitives.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
        "microsoft.extensions.primitives.9.0.8.nupkg.sha512",
        "microsoft.extensions.primitives.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.IdentityModel.Abstractions/8.14.0": {
      "sha512": "iwbCpSjD3ehfTwBhtSNEtKPK0ICun6ov7Ibx6ISNA9bfwIyzI2Siwyi9eJFCJBwxowK9xcA1mj+jBWiigeqgcQ==",
      "type": "package",
      "path": "microsoft.identitymodel.abstractions/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net462/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net472/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net472/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.xml",
        "microsoft.identitymodel.abstractions.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.abstractions.nuspec"
      ]
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
      "sha512": "4jOpiA4THdtpLyMdAb24dtj7+6GmvhOhxf5XHLYWmPKF8ApEnApal1UnJsKO4HxUWRXDA6C4WQVfYyqsRhpNpQ==",
      "type": "package",
      "path": "microsoft.identitymodel.jsonwebtokens/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "microsoft.identitymodel.jsonwebtokens.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.jsonwebtokens.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Logging/8.14.0": {
      "sha512": "eqqnemdW38CKZEHS6diA50BV94QICozDZEvSrsvN3SJXUFwVB9gy+/oz76gldP7nZliA16IglXjXTCTdmU/Ejg==",
      "type": "package",
      "path": "microsoft.identitymodel.logging/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Logging.dll",
        "lib/net462/Microsoft.IdentityModel.Logging.xml",
        "lib/net472/Microsoft.IdentityModel.Logging.dll",
        "lib/net472/Microsoft.IdentityModel.Logging.xml",
        "lib/net6.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net6.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net8.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net8.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net9.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net9.0/Microsoft.IdentityModel.Logging.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.xml",
        "microsoft.identitymodel.logging.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.logging.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "sha512": "SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.xml",
        "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "sha512": "6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.openidconnect.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Tokens/8.14.0": {
      "sha512": "lKIZiBiGd36k02TCdMHp1KlNWisyIvQxcYJvIkz7P4gSQ9zi8dgh6S5Grj8NNG7HWYIPfQymGyoZ6JB5d1Lo1g==",
      "type": "package",
      "path": "microsoft.identitymodel.tokens/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Tokens.dll",
        "lib/net462/Microsoft.IdentityModel.Tokens.xml",
        "lib/net472/Microsoft.IdentityModel.Tokens.dll",
        "lib/net472/Microsoft.IdentityModel.Tokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.xml",
        "microsoft.identitymodel.tokens.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.tokens.nuspec"
      ]
    },
    "Microsoft.OpenApi/1.6.14": {
      "sha512": "tTaBT8qjk3xINfESyOPE2rIellPvB7qpVqiWiyA/lACVvz+xOGiXhFUfohcx82NLbi5avzLW0lx+s6oAqQijfw==",
      "type": "package",
      "path": "microsoft.openapi/1.6.14",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/netstandard2.0/Microsoft.OpenApi.dll",
        "lib/netstandard2.0/Microsoft.OpenApi.pdb",
        "lib/netstandard2.0/Microsoft.OpenApi.xml",
        "microsoft.openapi.1.6.14.nupkg.sha512",
        "microsoft.openapi.nuspec"
      ]
    },
    "Mono.TextTemplating/3.0.0": {
      "sha512": "YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "type": "package",
      "path": "mono.texttemplating/3.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt/LICENSE",
        "buildTransitive/Mono.TextTemplating.targets",
        "lib/net472/Mono.TextTemplating.dll",
        "lib/net6.0/Mono.TextTemplating.dll",
        "lib/netstandard2.0/Mono.TextTemplating.dll",
        "mono.texttemplating.3.0.0.nupkg.sha512",
        "mono.texttemplating.nuspec",
        "readme.md"
      ]
    },
    "Npgsql/9.0.3": {
      "sha512": "tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "type": "package",
      "path": "npgsql/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net6.0/Npgsql.dll",
        "lib/net6.0/Npgsql.xml",
        "lib/net8.0/Npgsql.dll",
        "lib/net8.0/Npgsql.xml",
        "npgsql.9.0.3.nupkg.sha512",
        "npgsql.nuspec",
        "postgresql.png"
      ]
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "sha512": "mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "type": "package",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.xml",
        "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512",
        "npgsql.entityframeworkcore.postgresql.nuspec",
        "postgresql.png"
      ]
    },
    "Swashbuckle.AspNetCore/6.6.2": {
      "sha512": "+NB4UYVYN6AhDSjW0IJAd1AGD8V33gemFNLPaxKTtPkHB+HaKAKf9MGAEUPivEWvqeQfcKIw8lJaHq6LHljRuw==",
      "type": "package",
      "path": "swashbuckle.aspnetcore/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "build/Swashbuckle.AspNetCore.props",
        "swashbuckle.aspnetcore.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore.Swagger/6.6.2": {
      "sha512": "ovgPTSYX83UrQUWiS5vzDcJ8TEX1MAxBgDFMK45rC24MorHEPQlZAHlaXj/yth4Zf6xcktpUgTEBvffRQVwDKA==",
      "type": "package",
      "path": "swashbuckle.aspnetcore.swagger/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net5.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net5.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net5.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/net6.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net6.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net6.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/net7.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net7.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net7.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net8.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net8.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.xml",
        "package-readme.md",
        "swashbuckle.aspnetcore.swagger.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.swagger.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
      "sha512": "zv4ikn4AT1VYuOsDCpktLq4QDq08e7Utzbir86M5/ZkRaLXbCPF11E1/vTmOiDzRTl0zTZINQU2qLKwTcHgfrA==",
      "type": "package",
      "path": "swashbuckle.aspnetcore.swaggergen/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "package-readme.md",
        "swashbuckle.aspnetcore.swaggergen.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.swaggergen.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
      "sha512": "mBBb+/8Hm2Q3Wygag+hu2jj69tZW5psuv0vMRXY07Wy+Rrj40vRP8ZTbKBhs91r45/HXT4aY4z0iSBYx1h6JvA==",
      "type": "package",
      "path": "swashbuckle.aspnetcore.swaggerui/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "package-readme.md",
        "swashbuckle.aspnetcore.swaggerui.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.swaggerui.nuspec"
      ]
    },
    "System.CodeDom/6.0.0": {
      "sha512": "CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "type": "package",
      "path": "system.codedom/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.CodeDom.dll",
        "lib/net461/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.6.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Collections.Immutable/7.0.0": {
      "sha512": "dQPcs0U1IKnBdRDBkrCTi1FoajSTBzLcVTpjO4MBCMC7f4pDOIPzgBoX8JjG7X6uZRJ8EBxsi8+DR1JuwjnzOQ==",
      "type": "package",
      "path": "system.collections.immutable/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "README.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Collections.Immutable.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Collections.Immutable.targets",
        "lib/net462/System.Collections.Immutable.dll",
        "lib/net462/System.Collections.Immutable.xml",
        "lib/net6.0/System.Collections.Immutable.dll",
        "lib/net6.0/System.Collections.Immutable.xml",
        "lib/net7.0/System.Collections.Immutable.dll",
        "lib/net7.0/System.Collections.Immutable.xml",
        "lib/netstandard2.0/System.Collections.Immutable.dll",
        "lib/netstandard2.0/System.Collections.Immutable.xml",
        "system.collections.immutable.7.0.0.nupkg.sha512",
        "system.collections.immutable.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition/7.0.0": {
      "sha512": "tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "type": "package",
      "path": "system.composition/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.targets",
        "lib/net461/_._",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard2.0/_._",
        "system.composition.7.0.0.nupkg.sha512",
        "system.composition.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.AttributedModel/7.0.0": {
      "sha512": "2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "type": "package",
      "path": "system.composition.attributedmodel/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.AttributedModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.AttributedModel.targets",
        "lib/net462/System.Composition.AttributedModel.dll",
        "lib/net462/System.Composition.AttributedModel.xml",
        "lib/net6.0/System.Composition.AttributedModel.dll",
        "lib/net6.0/System.Composition.AttributedModel.xml",
        "lib/net7.0/System.Composition.AttributedModel.dll",
        "lib/net7.0/System.Composition.AttributedModel.xml",
        "lib/netstandard2.0/System.Composition.AttributedModel.dll",
        "lib/netstandard2.0/System.Composition.AttributedModel.xml",
        "system.composition.attributedmodel.7.0.0.nupkg.sha512",
        "system.composition.attributedmodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Convention/7.0.0": {
      "sha512": "IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "type": "package",
      "path": "system.composition.convention/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Convention.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Convention.targets",
        "lib/net462/System.Composition.Convention.dll",
        "lib/net462/System.Composition.Convention.xml",
        "lib/net6.0/System.Composition.Convention.dll",
        "lib/net6.0/System.Composition.Convention.xml",
        "lib/net7.0/System.Composition.Convention.dll",
        "lib/net7.0/System.Composition.Convention.xml",
        "lib/netstandard2.0/System.Composition.Convention.dll",
        "lib/netstandard2.0/System.Composition.Convention.xml",
        "system.composition.convention.7.0.0.nupkg.sha512",
        "system.composition.convention.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Hosting/7.0.0": {
      "sha512": "eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "type": "package",
      "path": "system.composition.hosting/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Hosting.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Hosting.targets",
        "lib/net462/System.Composition.Hosting.dll",
        "lib/net462/System.Composition.Hosting.xml",
        "lib/net6.0/System.Composition.Hosting.dll",
        "lib/net6.0/System.Composition.Hosting.xml",
        "lib/net7.0/System.Composition.Hosting.dll",
        "lib/net7.0/System.Composition.Hosting.xml",
        "lib/netstandard2.0/System.Composition.Hosting.dll",
        "lib/netstandard2.0/System.Composition.Hosting.xml",
        "system.composition.hosting.7.0.0.nupkg.sha512",
        "system.composition.hosting.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Runtime/7.0.0": {
      "sha512": "aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "type": "package",
      "path": "system.composition.runtime/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Runtime.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Runtime.targets",
        "lib/net462/System.Composition.Runtime.dll",
        "lib/net462/System.Composition.Runtime.xml",
        "lib/net6.0/System.Composition.Runtime.dll",
        "lib/net6.0/System.Composition.Runtime.xml",
        "lib/net7.0/System.Composition.Runtime.dll",
        "lib/net7.0/System.Composition.Runtime.xml",
        "lib/netstandard2.0/System.Composition.Runtime.dll",
        "lib/netstandard2.0/System.Composition.Runtime.xml",
        "system.composition.runtime.7.0.0.nupkg.sha512",
        "system.composition.runtime.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.TypedParts/7.0.0": {
      "sha512": "ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "type": "package",
      "path": "system.composition.typedparts/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.TypedParts.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.TypedParts.targets",
        "lib/net462/System.Composition.TypedParts.dll",
        "lib/net462/System.Composition.TypedParts.xml",
        "lib/net6.0/System.Composition.TypedParts.dll",
        "lib/net6.0/System.Composition.TypedParts.xml",
        "lib/net7.0/System.Composition.TypedParts.dll",
        "lib/net7.0/System.Composition.TypedParts.xml",
        "lib/netstandard2.0/System.Composition.TypedParts.dll",
        "lib/netstandard2.0/System.Composition.TypedParts.xml",
        "system.composition.typedparts.7.0.0.nupkg.sha512",
        "system.composition.typedparts.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.DiagnosticSource/9.0.8": {
      "sha512": "Lj8/a1Hzli1z6jo8H9urc16GxkpVJtJM+W9fmivXMNu7nwzHziGkxn4vO0DFscMbudkEVKSezdDuHk5kgM0X/g==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "lib/net462/System.Diagnostics.DiagnosticSource.dll",
        "lib/net462/System.Diagnostics.DiagnosticSource.xml",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.9.0.8.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.IdentityModel.Tokens.Jwt/8.14.0": {
      "sha512": "EYGgN/S+HK7S6F3GaaPLFAfK0UzMrkXFyWCvXpQWFYmZln3dqtbyIO7VuTM/iIIPMzkelg8ZLlBPvMhxj6nOAA==",
      "type": "package",
      "path": "system.identitymodel.tokens.jwt/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net462/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net472/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net472/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.xml",
        "system.identitymodel.tokens.jwt.8.14.0.nupkg.sha512",
        "system.identitymodel.tokens.jwt.nuspec"
      ]
    },
    "System.IO.Hashing/8.0.0": {
      "sha512": "ne1843evDugl0md7Fjzy6QjJrzsjh46ZKbhf8GwBXb5f/gw97J4bxMs0NQKifDuThh/f0bZ0e62NPl1jzTuRqA==",
      "type": "package",
      "path": "system.io.hashing/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.IO.Hashing.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.IO.Hashing.targets",
        "lib/net462/System.IO.Hashing.dll",
        "lib/net462/System.IO.Hashing.xml",
        "lib/net6.0/System.IO.Hashing.dll",
        "lib/net6.0/System.IO.Hashing.xml",
        "lib/net7.0/System.IO.Hashing.dll",
        "lib/net7.0/System.IO.Hashing.xml",
        "lib/net8.0/System.IO.Hashing.dll",
        "lib/net8.0/System.IO.Hashing.xml",
        "lib/netstandard2.0/System.IO.Hashing.dll",
        "lib/netstandard2.0/System.IO.Hashing.xml",
        "system.io.hashing.8.0.0.nupkg.sha512",
        "system.io.hashing.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.IO.Pipelines/9.0.8": {
      "sha512": "6vPmJt73mgUo1gzc/OcXlJvClz/2jxZ4TQPRfriVaLoGRH2mye530D9WHJYbFQRNMxF3PWCoeofsFdCyN7fLzA==",
      "type": "package",
      "path": "system.io.pipelines/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.IO.Pipelines.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.IO.Pipelines.targets",
        "lib/net462/System.IO.Pipelines.dll",
        "lib/net462/System.IO.Pipelines.xml",
        "lib/net8.0/System.IO.Pipelines.dll",
        "lib/net8.0/System.IO.Pipelines.xml",
        "lib/net9.0/System.IO.Pipelines.dll",
        "lib/net9.0/System.IO.Pipelines.xml",
        "lib/netstandard2.0/System.IO.Pipelines.dll",
        "lib/netstandard2.0/System.IO.Pipelines.xml",
        "system.io.pipelines.9.0.8.nupkg.sha512",
        "system.io.pipelines.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Reflection.Metadata/7.0.0": {
      "sha512": "MclTG61lsD9sYdpNz9xsKBzjsmsfCtcMZYXz/IUr2zlhaTaABonlr1ESeompTgM+Xk+IwtGYU7/voh3YWB/fWw==",
      "type": "package",
      "path": "system.reflection.metadata/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "README.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Reflection.Metadata.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Reflection.Metadata.targets",
        "lib/net462/System.Reflection.Metadata.dll",
        "lib/net462/System.Reflection.Metadata.xml",
        "lib/net6.0/System.Reflection.Metadata.dll",
        "lib/net6.0/System.Reflection.Metadata.xml",
        "lib/net7.0/System.Reflection.Metadata.dll",
        "lib/net7.0/System.Reflection.Metadata.xml",
        "lib/netstandard2.0/System.Reflection.Metadata.dll",
        "lib/netstandard2.0/System.Reflection.Metadata.xml",
        "system.reflection.metadata.7.0.0.nupkg.sha512",
        "system.reflection.metadata.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "sha512": "/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "type": "package",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
        "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512",
        "system.runtime.compilerservices.unsafe.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encodings.Web/9.0.8": {
      "sha512": "W+LotQsM4wBJ4PG7uRkyul4wqL4Fz7R4ty6uXrCNZUhbaHYANgrPaYR2ZpMVpdCjQEJ17Jr1NMN8hv4SHaHY4A==",
      "type": "package",
      "path": "system.text.encodings.web/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Text.Encodings.Web.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "lib/net462/System.Text.Encodings.Web.dll",
        "lib/net462/System.Text.Encodings.Web.xml",
        "lib/net8.0/System.Text.Encodings.Web.dll",
        "lib/net8.0/System.Text.Encodings.Web.xml",
        "lib/net9.0/System.Text.Encodings.Web.dll",
        "lib/net9.0/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net9.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net9.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.9.0.8.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Json/9.0.8": {
      "sha512": "mIQir9jBqk0V7X0Nw5hzPJZC8DuGdf+2DS3jAVsr6rq5+/VyH5rza0XGcONJUWBrZ+G6BCwNyjWYd9lncBu48A==",
      "type": "package",
      "path": "system.text.json/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "buildTransitive/net461/System.Text.Json.targets",
        "buildTransitive/net462/System.Text.Json.targets",
        "buildTransitive/net8.0/System.Text.Json.targets",
        "buildTransitive/netcoreapp2.0/System.Text.Json.targets",
        "buildTransitive/netstandard2.0/System.Text.Json.targets",
        "lib/net462/System.Text.Json.dll",
        "lib/net462/System.Text.Json.xml",
        "lib/net8.0/System.Text.Json.dll",
        "lib/net8.0/System.Text.Json.xml",
        "lib/net9.0/System.Text.Json.dll",
        "lib/net9.0/System.Text.Json.xml",
        "lib/netstandard2.0/System.Text.Json.dll",
        "lib/netstandard2.0/System.Text.Json.xml",
        "system.text.json.9.0.8.nupkg.sha512",
        "system.text.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Channels/7.0.0": {
      "sha512": "qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "type": "package",
      "path": "system.threading.channels/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Threading.Channels.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Threading.Channels.targets",
        "lib/net462/System.Threading.Channels.dll",
        "lib/net462/System.Threading.Channels.xml",
        "lib/net6.0/System.Threading.Channels.dll",
        "lib/net6.0/System.Threading.Channels.xml",
        "lib/net7.0/System.Threading.Channels.dll",
        "lib/net7.0/System.Threading.Channels.xml",
        "lib/netstandard2.0/System.Threading.Channels.dll",
        "lib/netstandard2.0/System.Threading.Channels.xml",
        "lib/netstandard2.1/System.Threading.Channels.dll",
        "lib/netstandard2.1/System.Threading.Channels.xml",
        "system.threading.channels.7.0.0.nupkg.sha512",
        "system.threading.channels.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Yarp.ReverseProxy/2.3.0": {
      "sha512": "gxtkN3a+9biu9V9Zd5NaTO6VZWXAnS2mhQ0R/VXmSPoTuiQNZsakKikrKpDtKxrL5nUYzbRsHtl40WNq+ZBKKg==",
      "type": "package",
      "path": "yarp.reverseproxy/2.3.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "ConfigurationSchema.json",
        "README.md",
        "buildTransitive/net6.0/Yarp.ReverseProxy.targets",
        "buildTransitive/net7.0/Yarp.ReverseProxy.targets",
        "buildTransitive/net8.0/Yarp.ReverseProxy.targets",
        "icon.png",
        "lib/net6.0/Yarp.ReverseProxy.dll",
        "lib/net6.0/Yarp.ReverseProxy.xml",
        "lib/net7.0/Yarp.ReverseProxy.dll",
        "lib/net7.0/Yarp.ReverseProxy.xml",
        "lib/net8.0/Yarp.ReverseProxy.dll",
        "lib/net8.0/Yarp.ReverseProxy.xml",
        "yarp.reverseproxy.2.3.0.nupkg.sha512",
        "yarp.reverseproxy.nuspec"
      ]
    }
  },
  "projectFileDependencyGroups": {
    "net8.0": [
      "BCrypt.Net-Next >= 4.0.3",
      "EFCore.NamingConventions >= 9.0.0",
      "HotChocolate.AspNetCore >= 15.1.9",
      "HotChocolate.AspNetCore.Authorization >= 15.1.9",
      "HotChocolate.Data >= 15.1.9",
      "HotChocolate.Data.EntityFramework >= 15.1.9",
      "Microsoft.AspNetCore.Authentication.JwtBearer >= 8.0.19",
      "Microsoft.EntityFrameworkCore >= 9.0.8",
      "Microsoft.EntityFrameworkCore.Design >= 9.0.8",
      "Npgsql.EntityFrameworkCore.PostgreSQL >= 9.0.4",
      "Swashbuckle.AspNetCore >= 6.6.2",
      "System.IdentityModel.Tokens.Jwt >= 8.14.0"
    ]
  },
  "packageFolders": {
    "C:\\Users\\mcrae\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj",
      "projectName": "ThoughtGarden.Api",
      "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj",
      "packagesPath": "C:\\Users\\mcrae\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\mcrae\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net8.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "projectReferences": {}
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net8.0": {
        "targetAlias": "net8.0",
        "dependencies": {
          "BCrypt.Net-Next": {
            "target": "Package",
            "version": "[4.0.3, )"
          },
          "EFCore.NamingConventions": {
            "target": "Package",
            "version": "[9.0.0, )"
          },
          "HotChocolate.AspNetCore": {
            "target": "Package",
            "version": "[15.1.9, )"
          },
          "HotChocolate.AspNetCore.Authorization": {
            "target": "Package",
            "version": "[15.1.9, )"
          },
          "HotChocolate.Data": {
            "target": "Package",
            "version": "[15.1.9, )"
          },
          "HotChocolate.Data.EntityFramework": {
            "target": "Package",
            "version": "[15.1.9, )"
          },
          "Microsoft.AspNetCore.Authentication.JwtBearer": {
            "target": "Package",
            "version": "[8.0.19, )"
          },
          "Microsoft.EntityFrameworkCore": {
            "target": "Package",
            "version": "[9.0.8, )"
          },
          "Microsoft.EntityFrameworkCore.Design": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[9.0.8, )"
          },
          "Npgsql.EntityFrameworkCore.PostgreSQL": {
            "target": "Package",
            "version": "[9.0.4, )"
          },
          "Swashbuckle.AspNetCore": {
            "target": "Package",
            "version": "[6.6.2, )"
          },
          "System.IdentityModel.Tokens.Jwt": {
            "target": "Package",
            "version": "[8.14.0, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.AspNetCore.App": {
            "privateAssets": "none"
          },
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.305/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\project.assets.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\ThoughtGarden.Api.csproj.nuget.dgspec.json =====
{
  "format": 1,
  "restore": {
    "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj": {}
  },
  "projects": {
    "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj",
        "projectName": "ThoughtGarden.Api",
        "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj",
        "packagesPath": "C:\\Users\\mcrae\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\mcrae\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "EFCore.NamingConventions": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "HotChocolate.AspNetCore": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.AspNetCore.Authorization": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.Data": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.Data.EntityFramework": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.19, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Microsoft.EntityFrameworkCore.Design": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "Swashbuckle.AspNetCore": {
              "target": "Package",
              "version": "[6.6.2, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.14.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.305/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\obj\ThoughtGarden.Api.csproj.nuget.dgspec.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Properties\launchSettings.json =====
{
  "$schema": "http://json.schemastore.org/launchsettings.json",
  "iisSettings": {
    "windowsAuthentication": false,
    "anonymousAuthentication": true,
    "iisExpress": {
      "applicationUrl": "http://localhost:52662",
      "sslPort": 44395
    }
  },
  "profiles": {
    "http": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "http://0.0.0.0:5151",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "https": {
      "commandName": "Project",
      "dotnetRunMessages": true,
      "launchBrowser": true,
      "launchUrl": "swagger",
      "applicationUrl": "https://localhost:7252;http://0.0.0.0:5151",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "launchUrl": "swagger",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Properties\launchSettings.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Types\JournalEntryType.cs =====
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.GraphQL.Types
{
    public class JournalEntryType
    {
        public int Id { get; set; }
        public string Text { get; set; } = null!;   // decrypted text only
        public DateTime CreatedAt { get; set; }
        public DateTime UpdatedAt { get; set; }
        public bool IsDeleted { get; set; }

        public int? MoodId { get; set; }
        public EmotionTag? Mood { get; set; }
        public ICollection<EntryEmotion> SecondaryEmotions { get; set; } = new List<EntryEmotion>();
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Types\JournalEntryType.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\appsettings.json =====
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Cors": {
    "AllowedOrigins": [
      "http://localhost:19006",
      "http://127.0.0.1:19006"
    ]
  }

}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\appsettings.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Program.cs =====
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.EntityFrameworkCore;
using Microsoft.IdentityModel.Tokens;
using ThoughtGarden.Api.Config;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.GraphQL.Mutations;
using ThoughtGarden.Api.GraphQL.Queries;
using ThoughtGarden.Api.Infrastructure;

static string? FindUp(string startDir, string file)
{
    var dir = new DirectoryInfo(startDir);
    while (dir is not null)
    {
        var candidate = System.IO.Path.Combine(dir.FullName, file);
        if (File.Exists(candidate)) return candidate;
        dir = dir.Parent;
    }
    return null;
}

var builder = WebApplication.CreateBuilder(args);

// ---- Secrets loading policy ----
// .env => Development only
var envPath = FindUp(builder.Environment.ContentRootPath, ".env");
if (envPath is not null && builder.Environment.IsDevelopment())
{
    DotEnv.Load(envPath);
}

// Doppler => only when NOT Testing (dev/prod/staging allowed)
var isTesting = builder.Environment.IsEnvironment("Testing");
var dopplerToken = Environment.GetEnvironmentVariable("DOPPLER_TOKEN");
if (!isTesting && !string.IsNullOrWhiteSpace(dopplerToken))
{
    builder.Configuration.AddDopplerSecrets();
}

// ---- Services ----
builder.Services.AddControllers();

// DbContext registration
// In Testing, skip registration entirely; the test factory will inject a container DB.
if (!isTesting)
{
    var defaultConn = builder.Configuration.GetConnectionString("DefaultConnection")
        ?? throw new InvalidOperationException("ConnectionStrings:DefaultConnection missing");
    builder.Services.AddDbContextPool<ThoughtGardenDbContext>(opt =>
        opt.UseNpgsql(defaultConn).UseSnakeCaseNamingConvention());
}

// DI helpers (add others you use in resolvers)
builder.Services.AddScoped<JwtHelper>();
builder.Services.AddSingleton<EnvelopeCrypto>();
builder.Services.AddSingleton<IServerInfoProvider, ServerInfoProvider>();

// GraphQL + guardrails
var gql = builder.Services
    .AddGraphQLServer()
    .AddAuthorization()
    .AddProjections()
    .AddFiltering()
    .AddSorting()
    .AddMaxExecutionDepthRule(16)
    .ModifyRequestOptions(o =>
    {
        o.ExecutionTimeout = TimeSpan.FromMinutes(2);
        o.IncludeExceptionDetails = builder.Environment.IsDevelopment();
    })
    .AddQueryType(d => d.Name("Query"))
        .AddTypeExtension<UserQueries>()
        .AddTypeExtension<JournalEntryQueries>()
        .AddTypeExtension<GardenQueries>()
        .AddTypeExtension<GardenPlantQueries>()
        .AddTypeExtension<EmotionQueries>()
        .AddTypeExtension<PlantTypeQueries>()
        .AddTypeExtension<ServerInfoQueries>()
    .AddMutationType(d => d.Name("Mutation"))
        .AddTypeExtension<UserMutations>()
        .AddTypeExtension<JournalEntryMutations>()
        .AddTypeExtension<EmotionTagMutations>()
        .AddTypeExtension<GardenStateMutations>()
        .AddTypeExtension<GardenPlantMutations>()
        .AddTypeExtension<PlantTypeMutations>();

if (builder.Environment.IsDevelopment() || builder.Environment.IsEnvironment("Testing"))
{
    gql.AddTypeExtension<MaintenanceMutations>();
}

// Swagger (dev only)
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

// CORS (dev: wide open; prod: restrict origins; JWT only => no credentials)
builder.Services.AddCors(options =>
{
    options.AddPolicy("DevAll", p => p.AllowAnyOrigin().AllowAnyHeader().AllowAnyMethod());
    options.AddPolicy("SpaHost", p => p
        .WithOrigins(builder.Configuration.GetSection("Cors:AllowedOrigins").Get<string[]>() ?? Array.Empty<string>())
        .AllowAnyHeader()
        .AllowAnyMethod());
});

// JWT (hardening)
builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(options =>
    {
        var issuer = builder.Configuration["Jwt:Issuer"] ?? throw new InvalidOperationException("Jwt:Issuer missing");
        var audience = builder.Configuration["Jwt:Audience"] ?? throw new InvalidOperationException("Jwt:Audience missing");
        var keyB64 = builder.Configuration["Jwt:Key"] ?? throw new InvalidOperationException("Jwt:Key missing");
        var keyBytes = Convert.FromBase64String(keyB64);

        options.RequireHttpsMetadata = !builder.Environment.IsDevelopment();
        options.SaveToken = false;
        options.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuer = true,
            ValidIssuer = issuer,
            ValidateAudience = true,
            ValidAudience = audience,
            ValidateLifetime = true,
            RequireExpirationTime = true,
            ClockSkew = TimeSpan.FromSeconds(30),
            ValidateIssuerSigningKey = true,
            IssuerSigningKey = new SymmetricSecurityKey(keyBytes),
            NameClaimType = "sub",
        };
    });

builder.Services.AddAuthorization();

// Dev seed (dev only)
if (builder.Environment.IsDevelopment())
{
    builder.Services.AddHostedService<ThoughtGarden.Api.Infrastructure.DevSeedHostedService>();
}

var app = builder.Build();

// ---- Middleware ----
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

if (app.Environment.IsDevelopment()) app.UseCors("DevAll");
else app.UseCors("SpaHost");

app.UseHttpsRedirection();

app.UseAuthentication();
app.UseAuthorization();

app.MapControllers();
app.MapGraphQL("/graphql");

app.Run();

public partial class Program { }
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\Program.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\ThoughtGarden.Api.csproj =====
<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
	<RootNamespace>ThoughtGarden.Api</RootNamespace>
	<AssemblyName>ThoughtGarden.Api</AssemblyName>
	<AssemblyVersion>1.0.0.0</AssemblyVersion>
	<FileVersion>1.0.0.0</FileVersion>
	<InformationalVersion>1.0.0-beta</InformationalVersion>
	<UserSecretsId>21ba92a7-380a-49d5-8234-ddcd2d2677cb</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="BCrypt.Net-Next" Version="4.0.3" />
    <PackageReference Include="EFCore.NamingConventions" Version="9.0.0" />
    <PackageReference Include="HotChocolate.AspNetCore" Version="15.1.9" />
    <PackageReference Include="HotChocolate.AspNetCore.Authorization" Version="15.1.9" />
    <PackageReference Include="HotChocolate.Data" Version="15.1.9" />
    <PackageReference Include="HotChocolate.Data.EntityFramework" Version="15.1.9" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="8.0.19" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.8">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="9.0.4" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="8.14.0" />
  </ItemGroup>

</Project>
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api\ThoughtGarden.Api.csproj =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\appsettings.json =====
{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Cors": {
    "AllowedOrigins": [
      "http://localhost:19006",
      "http://127.0.0.1:19006"
    ]
  }

}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\appsettings.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\MvcTestingAppManifest.json =====
{
  "ThoughtGarden.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api"
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\MvcTestingAppManifest.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.deps.json =====
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {},
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "ThoughtGarden.Api/1.0.0": {
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "EFCore.NamingConventions": "9.0.0",
          "HotChocolate.AspNetCore": "15.1.9",
          "HotChocolate.AspNetCore.Authorization": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "HotChocolate.Data.EntityFramework": "15.1.9",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.19",
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Design": "9.0.8",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "Swashbuckle.AspNetCore": "6.6.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "runtime": {
          "ThoughtGarden.Api.dll": {}
        }
      },
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        }
      },
      "ChilliCream.Nitro.App/28.0.7": {
        "dependencies": {
          "Yarp.ReverseProxy": "2.3.0"
        },
        "runtime": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {
            "assemblyVersion": "28.0.0.0",
            "fileVersion": "28.0.7.0"
          }
        }
      },
      "EFCore.NamingConventions/9.0.0": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/EFCore.NamingConventions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        }
      },
      "GreenDonut/15.1.9": {
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Abstractions/15.1.9": {
        "runtime": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data.Abstractions/15.1.9": {
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data.EntityFramework/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "GreenDonut.Data.Primitives/15.1.9": {
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate/15.1.9": {
        "dependencies": {
          "HotChocolate.Authorization": "15.1.9",
          "HotChocolate.CostAnalysis": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9",
          "HotChocolate.Types.CursorPagination.Extensions": "15.1.9",
          "HotChocolate.Types.Mutations": "15.1.9",
          "HotChocolate.Types.Queries": "15.1.9",
          "HotChocolate.Validation": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Abstractions/15.1.9": {
        "dependencies": {
          "HotChocolate.Primitives": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.AspNetCore/15.1.9": {
        "dependencies": {
          "ChilliCream.Nitro.App": "28.0.7",
          "HotChocolate": "15.1.9",
          "HotChocolate.Subscriptions.InMemory": "15.1.9",
          "HotChocolate.Transport.Sockets": "15.1.9",
          "HotChocolate.Types.Scalars.Upload": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.AspNetCore.Authorization/15.1.9": {
        "dependencies": {
          "HotChocolate": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Authorization/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.CostAnalysis/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Data/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Data.EntityFramework/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.EntityFramework": "15.1.9",
          "HotChocolate": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Execution/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9",
          "HotChocolate.Validation": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Execution.Abstractions/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Execution.Projections/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Features/15.1.9": {
        "runtime": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Fetching/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9",
          "HotChocolate.Language.Utf8": "15.1.9",
          "HotChocolate.Language.Visitors": "15.1.9",
          "HotChocolate.Language.Web": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.SyntaxTree/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.Utf8/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.Visitors/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Language.Web/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.Utf8": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Primitives/15.1.9": {
        "dependencies": {
          "HotChocolate.Language": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Subscriptions/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Utilities": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Subscriptions.InMemory/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Subscriptions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Transport.Sockets/15.1.9": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Features": "15.1.9",
          "HotChocolate.Types.Shared": "15.1.9",
          "HotChocolate.Utilities": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.CursorPagination/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Errors/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Mutations/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Queries/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Scalars.Upload/15.1.9": {
        "dependencies": {
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Types.Shared/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Utilities/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Utilities.DependencyInjection/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "HotChocolate.Validation/15.1.9": {
        "dependencies": {
          "HotChocolate.Types": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        }
      },
      "Humanizer.Core/2.14.1": {
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "assemblyVersion": "2.14.0.0",
            "fileVersion": "2.14.1.48190"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.19.0",
            "fileVersion": "8.0.1925.37204"
          }
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "Microsoft.Build.Framework/17.8.3": {},
      "Microsoft.Build.Locator/1.7.8": {
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.7.8.28074"
          }
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {},
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "9.0.8",
          "System.Threading.Channels": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "dependencies": {
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.8",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {},
      "Microsoft.EntityFrameworkCore.Design/9.0.8": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyModel": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.Extensions.ApiDescription.Server/6.0.5": {},
      "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.8": {
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.8",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "assemblyVersion": "9.0.0.8",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "System.Diagnostics.DiagnosticSource": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.ObjectPool/8.0.0": {},
      "Microsoft.Extensions.Options/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.Extensions.Primitives/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.14.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.14.0": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.IdentityModel.Logging": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "Microsoft.OpenApi/1.6.14": {
        "runtime": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "assemblyVersion": "1.6.14.0",
            "fileVersion": "1.6.14.0"
          }
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {
            "assemblyVersion": "3.0.0.0",
            "fileVersion": "3.0.0.1"
          }
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        }
      },
      "Swashbuckle.AspNetCore/6.6.2": {
        "dependencies": {
          "Microsoft.Extensions.ApiDescription.Server": "6.0.5",
          "Swashbuckle.AspNetCore.Swagger": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerGen": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerUI": "6.6.2"
        }
      },
      "Swashbuckle.AspNetCore.Swagger/6.6.2": {
        "dependencies": {
          "Microsoft.OpenApi": "1.6.14"
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        }
      },
      "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
        "dependencies": {
          "Swashbuckle.AspNetCore.Swagger": "6.6.2"
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        }
      },
      "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        }
      },
      "System.CodeDom/6.0.0": {
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Collections.Immutable/7.0.0": {},
      "System.Composition/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Convention/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.8": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        }
      },
      "System.IO.Hashing/8.0.0": {
        "runtime": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.23.53103"
          }
        }
      },
      "System.IO.Pipelines/9.0.8": {
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.Reflection.Metadata/7.0.0": {
        "dependencies": {
          "System.Collections.Immutable": "7.0.0"
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Text.Encodings.Web/9.0.8": {
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.Text.Json/9.0.8": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8",
          "System.Text.Encodings.Web": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        }
      },
      "System.Threading.Channels/7.0.0": {},
      "Yarp.ReverseProxy/2.3.0": {
        "dependencies": {
          "System.IO.Hashing": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "assemblyVersion": "2.3.0.0",
            "fileVersion": "2.300.25.12702"
          }
        }
      }
    }
  },
  "libraries": {
    "ThoughtGarden.Api/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "ChilliCream.Nitro.App/28.0.7": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-G6CZod8ForeoVMXigRyAxTTqiiUYcppE85UY/zy4XLMunpF1Ginn5njWK+F+93bw3x5SssPR/fexEpOtQqkVLw==",
      "path": "chillicream.nitro.app/28.0.7",
      "hashPath": "chillicream.nitro.app.28.0.7.nupkg.sha512"
    },
    "EFCore.NamingConventions/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-heKIYzPdEWx+Ba4xuG6jfEssW9rEi7I0lX38eoN7wo7qgg9uw7nn8UEmDQfwGEYPzSDpetCVANnDr5tqt2Asjg==",
      "path": "efcore.namingconventions/9.0.0",
      "hashPath": "efcore.namingconventions.9.0.0.nupkg.sha512"
    },
    "GreenDonut/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-482fPqj2Q7enNUsUDENHjrghwI1GPlUbsGQ425SdFJNSl6hhrWzNjMmwd2x1V6NZJCDWk6TAjJ35NK22T1eNNw==",
      "path": "greendonut/15.1.9",
      "hashPath": "greendonut.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-imB88uJvK18ZxMwmnLW1XRE7nPU0rRsV5pFzpbuzfVDabedsEqOnoGQDSOJUORJ1Dn6ZOFH7PBxWh92MnXP8JA==",
      "path": "greendonut.abstractions/15.1.9",
      "hashPath": "greendonut.abstractions.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-T5mfw9CnQKhl4sa+5RbfBNk9hGTdSiGnUCYGFyXcREfLGMMe7kfOabjhR6T7FB7kZeEWb8GqcipU655jMbTX/w==",
      "path": "greendonut.data/15.1.9",
      "hashPath": "greendonut.data.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-E/a5ms3kV8niLBPB0s7rkVuYV1yRAR6JHasTrMg9a9Yk0U18yUj28wXEKwZY1A3mze2S2vF3kebQDAHCN5bjwg==",
      "path": "greendonut.data.abstractions/15.1.9",
      "hashPath": "greendonut.data.abstractions.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.EntityFramework/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dBEK3bkLoq46n7Tg+Vn77FTXJn7ugp2OWcgo+CeqGTfQa+8MbWY9IohQGjAMFLt4TigTnU0ek63keNACv5vl5g==",
      "path": "greendonut.data.entityframework/15.1.9",
      "hashPath": "greendonut.data.entityframework.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.Primitives/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-U7uS+C7lEvlgn48xtSFCHMKSjV0oJXgtlbYe6KPWZSJfhDwFxfUFmD58Tn1BxVpCbUqAjr7TzHZaNelhzIu/8A==",
      "path": "greendonut.data.primitives/15.1.9",
      "hashPath": "greendonut.data.primitives.15.1.9.nupkg.sha512"
    },
    "HotChocolate/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-VTVw4bKfnLYuVU4BPzRLILU+IpN+ixblF4uqQ1aMQgwTueLfQ9cycQqvlunWBisRsrtbhcalyn/ksHYn9zgv3A==",
      "path": "hotchocolate/15.1.9",
      "hashPath": "hotchocolate.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-jQL/Va5z9sksqG1/++Mm4nzwl5I+qppOOnV6z2/SeZ9BseaBxao9njBMd6wBkfMgbOoiOh5FGqWCVna7mdhJcw==",
      "path": "hotchocolate.abstractions/15.1.9",
      "hashPath": "hotchocolate.abstractions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.AspNetCore/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9G60X0PbDZOaA3k8gbIHTS9vwjvBo6jbKwQe8VKr6liEVHNWXYu2kvaxqQbIgd4FuG759Ie1TKLHSwX411ceag==",
      "path": "hotchocolate.aspnetcore/15.1.9",
      "hashPath": "hotchocolate.aspnetcore.15.1.9.nupkg.sha512"
    },
    "HotChocolate.AspNetCore.Authorization/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YQKitD1Yp0QdKPCcggHqGLuDDifJspmFTERyDyNxy4ZEL+emvc3PbTNqHp+/l/t+zRLtssNIpLoja1vXZ0sRqg==",
      "path": "hotchocolate.aspnetcore.authorization/15.1.9",
      "hashPath": "hotchocolate.aspnetcore.authorization.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Authorization/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wfKg+7F/DNzugwAHA4fd1flBStmfa7aXCo4fvpwFAqqpp3zguoKzzSVLw8VC1Ob0uTUutHWtqVVbBMYP8Cmq9g==",
      "path": "hotchocolate.authorization/15.1.9",
      "hashPath": "hotchocolate.authorization.15.1.9.nupkg.sha512"
    },
    "HotChocolate.CostAnalysis/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-XYseRG+XLHlmE8TnY6/dZCleKxxhHomR0kiriqaQ9Nt2nuJ0l8CTy7ucXK4ZYdikBrz46/KxXj0RwicIJzSN1Q==",
      "path": "hotchocolate.costanalysis/15.1.9",
      "hashPath": "hotchocolate.costanalysis.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Data/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xYiRcqB3MTazm1+taZlnWk6qMDaF47DvyTakB+ERaotqSlHyXkQWuX5vPXyhGCTncu7Wvppv6HkOSdw5x1Q9lA==",
      "path": "hotchocolate.data/15.1.9",
      "hashPath": "hotchocolate.data.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Data.EntityFramework/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-BQ6c+NvWoygeok0ZwNf5Iof6CeFt+FBE2F8LOxCUW3r5t2g792CTG1tiZ7ZfrrAi3qwu3YdOYcLw+6tX+5M6pw==",
      "path": "hotchocolate.data.entityframework/15.1.9",
      "hashPath": "hotchocolate.data.entityframework.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pTf6SyyMWiQLAp8NHcSBb/DYbkzEcVLLhrdh0BkX2VKwL6iknH3lKuQjP25LryIBiBpdB2ddl8ULNBjRBXMmMQ==",
      "path": "hotchocolate.execution/15.1.9",
      "hashPath": "hotchocolate.execution.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-x4Tx+n7e45tySRfBISeN8DCt2dcqPrR/JC/1dbnTVkgL5conIybhlfChuLNK36TbGPCNhqYgmow/jyNoorSAdg==",
      "path": "hotchocolate.execution.abstractions/15.1.9",
      "hashPath": "hotchocolate.execution.abstractions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution.Projections/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xcASpOZxMWNa8o8OIlduqPGgpNHaxYVp8K8hzWunCpWP2JsR39a/U/YE8J3Yaj3x4KUlBNXiTq914axLY4qkTA==",
      "path": "hotchocolate.execution.projections/15.1.9",
      "hashPath": "hotchocolate.execution.projections.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Features/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dFNkiW5BeA/B37/WdeZzX3o4mBfGzpQtWM4O7iI7pzlXnInLwNB7nuD1B186eulNnRiQBCSqM0ZcFjbLtUuzag==",
      "path": "hotchocolate.features/15.1.9",
      "hashPath": "hotchocolate.features.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Fetching/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-oH0qn/8CjiOQJmyag3IX/qFPJ4Aoc3Xz3I/MqPETQ40IRkwN0RrXfnFYgyulcF9O0VTGoUFUf4G8sT67CP6ffg==",
      "path": "hotchocolate.fetching/15.1.9",
      "hashPath": "hotchocolate.fetching.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/6uru5EbOPm5lKZ0VRzEVfP11mbKIhaPlQINybWMCXq1LAn21P0DgY/fVCh2AoNeFeITCTO8itqPv4vLntsnQg==",
      "path": "hotchocolate.language/15.1.9",
      "hashPath": "hotchocolate.language.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.SyntaxTree/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Tzuk9ZnpgLZNnxUl79tRYpr2/Gt/W6g8LvwcXkpU+aejGOi6UHxYJtas30U4XQOCPyEd24Waw1WdtVe2AYil3A==",
      "path": "hotchocolate.language.syntaxtree/15.1.9",
      "hashPath": "hotchocolate.language.syntaxtree.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Utf8/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-E/53yeCEZUpjLsxkCunN7AgMZVaIPnvZopqB6oyD+ygZjm7zkpWgssnI621GL0WxAmTbr7ehrHx5EXt8dN/TQw==",
      "path": "hotchocolate.language.utf8/15.1.9",
      "hashPath": "hotchocolate.language.utf8.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Visitors/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9LVHdE/22DwxpTzD+U0hTRik8oD+yqPr0gO9WlOHbqqV4oaI6m07KdkF6F48Z8evmMLtfPWmOjUX2dNI5k9Wgg==",
      "path": "hotchocolate.language.visitors/15.1.9",
      "hashPath": "hotchocolate.language.visitors.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Web/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SMRx4Ix4/EW2Dk3gBgyEbuPPUPkZdCOHIyiNeUzyWYuGOe7T/aj2pTBYUlKLxCJhWeH++BViEGMpx4J7uzKo0A==",
      "path": "hotchocolate.language.web/15.1.9",
      "hashPath": "hotchocolate.language.web.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Primitives/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-41ZTC75xe4cPJ4FcogVBktp5U6tOplwlbmqwLreY/yY7WikghlNAooczGJQFJiutEl0IkCanLLVKeizPY2dJAw==",
      "path": "hotchocolate.primitives/15.1.9",
      "hashPath": "hotchocolate.primitives.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Subscriptions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Vw4UK1J/ck5HBV+prYKaS0fcPKWMynBWML49pQOVDqtRDctoCNNIk0w7G83QWRNmrQwLr70unUeh8jkeTl5U2A==",
      "path": "hotchocolate.subscriptions/15.1.9",
      "hashPath": "hotchocolate.subscriptions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Subscriptions.InMemory/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mbrdirU8+4O6J0zovdxoEQaqHmyeqwKMn2Yk82rOj67+M4Wd69Tl/7OF59bBFG8Plrk+fqnEb/DW5Iv8w6mnWA==",
      "path": "hotchocolate.subscriptions.inmemory/15.1.9",
      "hashPath": "hotchocolate.subscriptions.inmemory.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Transport.Sockets/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ex9DQdgwUa8tdQDl1W2dWCBH24BE8+hgp++8iQKUFC5a00caAe6g9lzAzFCfv2s2OFIb97YzGxvct26qvCF+Aw==",
      "path": "hotchocolate.transport.sockets/15.1.9",
      "hashPath": "hotchocolate.transport.sockets.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4nATgti5zOSsEyRFW0CNmYctQ7kwaINFisPTiQ7TvTD1DD7sOxWxEjEFJtuZcgocK+1OkmAlpx7jUU1+SclU6A==",
      "path": "hotchocolate.types/15.1.9",
      "hashPath": "hotchocolate.types.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.CursorPagination/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4EEq9WgIhWOLhkG+pSc7rsnMqE0urhUv1SsbNYx60h+xAw7R39b+kC8sL8Yjjtypw4Sr1xDjE2NIj9dCOm4tw==",
      "path": "hotchocolate.types.cursorpagination/15.1.9",
      "hashPath": "hotchocolate.types.cursorpagination.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uYU38ejpAnAQYMavSxZ2UuFdCKdOLeaDytEGgAmgJS48LgZrlwRI6PAj7tK7tugzgFReMn1zeXUmfgBf2SZtng==",
      "path": "hotchocolate.types.cursorpagination.extensions/15.1.9",
      "hashPath": "hotchocolate.types.cursorpagination.extensions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Errors/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4stl4t1o97u26oXmYOrtTgznvDCECnOquXctbHbh8kjGYzmwHeCw5Wga09K4mPoi+bdJA47jTgZwUdC8ja8xKw==",
      "path": "hotchocolate.types.errors/15.1.9",
      "hashPath": "hotchocolate.types.errors.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Mutations/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lnODSHF51sjH6MUOs90s0vvROiQx3YGGe0ZJxqg0uZShrdiIygbw6jA1S9mf9VHj4q04WuJIsC5pGf89Rk19iw==",
      "path": "hotchocolate.types.mutations/15.1.9",
      "hashPath": "hotchocolate.types.mutations.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Queries/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EmmTu5NX402uvmCAaiNw623ty4BfxBDrCl1BPVhCLShmoQKfS8WXduImtGZFvjSNN1eJ6hT4IDDjNCtgmCV3Kw==",
      "path": "hotchocolate.types.queries/15.1.9",
      "hashPath": "hotchocolate.types.queries.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Scalars.Upload/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eBAhdK80UpxGKUoQ3+GXivSHTjV3Qf73p5BRRZcQGSfN/05R9UE2TtNfNDNbXsPmEXN7vSYbLtvtyvD+0AWodA==",
      "path": "hotchocolate.types.scalars.upload/15.1.9",
      "hashPath": "hotchocolate.types.scalars.upload.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Shared/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-I34zCMRDoH27Ma0G1xF/WL6j9H9NCGxfkXY6axlIemtH1ZgSYbQCUTw6UdeSZyGbBlwAObxh54c96NsPIlay3Q==",
      "path": "hotchocolate.types.shared/15.1.9",
      "hashPath": "hotchocolate.types.shared.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Utilities/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-z1pmsidrY/2u+26lzqfxP3YlxhLBQyPyyWmbrTRAta6riy4AT5iTRlCrApVZRZJxvrRsrI0Q8rz6k+nsXPn75A==",
      "path": "hotchocolate.utilities/15.1.9",
      "hashPath": "hotchocolate.utilities.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Utilities.DependencyInjection/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ReYfZNdFn9CPDwkWtUrDfziLvr5wqvkV1NPPf3g27VYLskzOGYQ0PJfZgzyj1JfR+FYnjKjcjITenzrRc+0Q4w==",
      "path": "hotchocolate.utilities.dependencyinjection/15.1.9",
      "hashPath": "hotchocolate.utilities.dependencyinjection.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Validation/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WwkVdB83XzehdRrSbqVsj83/Vnpia0fGNPv60jEbyhdZZUzMRF/g8VW2+JaFFi3PVGk+Ccd11yKbyGAh4au/cw==",
      "path": "hotchocolate.validation/15.1.9",
      "hashPath": "hotchocolate.validation.15.1.9.nupkg.sha512"
    },
    "Humanizer.Core/2.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "path": "humanizer.core/2.14.1",
      "hashPath": "humanizer.core.2.14.1.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vkGkpvEGGLFHeYhlBqdJiOL/7aYiUmLg2PTfuDDjBDUDb5QTpoeWLNOOoodTlu88J+GluGE+DFF1kd9hxJd5bA==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.19",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.19.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512"
    },
    "Microsoft.Build.Framework/17.8.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "path": "microsoft.build.framework/17.8.3",
      "hashPath": "microsoft.build.framework.17.8.3.nupkg.sha512"
    },
    "Microsoft.Build.Locator/1.7.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "path": "microsoft.build.locator/1.7.8",
      "hashPath": "microsoft.build.locator.1.7.8.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hashPath": "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bNGdPhN762+BIIO5MFYLjafRqkSS1MqLOc/erd55InvLnFxt9H3N5JNsuag1ZHyBor1VtD42U0CHpgqkWeAYgQ==",
      "path": "microsoft.entityframeworkcore/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-B2yfAIQRRAQ4zvvWqh+HudD+juV3YoLlpXnrog3tU0PM9AFpuq6xo0+mEglN1P43WgdcUiF+65CWBcZe35s15Q==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2EYStCXt4Hi9p3J3EYMQbItJDtASJd064Kcs8C8hj8Jt5srILrR9qlaL0Ryvk8NrWQoCQvIELsmiuqLEZMLvGA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-02e8OcoumSUAES3VkXrMT9EnNCUKWJoifn5+8fFEbAtRhKL3xg2a/Mj6rsAUGF7tkYFox6oKzJCn0jbm6b8Lbw==",
      "path": "microsoft.entityframeworkcore.design/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.design.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OVhfyxiHxMvYpwQ8Jy3YZi4koy6TK5/Q7C1oq3z6db+HEGuu6x9L1BX5zDIdJxxlRePMyO4D8ORiXj/D7+MUqw==",
      "path": "microsoft.entityframeworkcore.relational/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Ckb5EDBUNJdFWyajfXzUIMRkhf52fHZOQuuZg/oiu8y7zDCVwD0iHhew6MnThjHmevanpxL3f5ci2TtHQEN6bw==",
      "path": "microsoft.extensions.apidescription.server/6.0.5",
      "hashPath": "microsoft.extensions.apidescription.server.6.0.5.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4h7bsVoKoiK+SlPM+euX/ayGnKZhl47pPCidLTiio9xyG+vgVVfcYxcYQgjm0SCrdSxjG0EGIAKF8EFr3G8Ifw==",
      "path": "microsoft.extensions.caching.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-grR+oPyj8HVn4DT8CFUUdSw2pZZKS13KjytFe4txpHQliGM1GEDotohmjgvyl3hm7RFB3FRqvbouEX3/1ewp5A==",
      "path": "microsoft.extensions.caching.memory/9.0.8",
      "hashPath": "microsoft.extensions.caching.memory.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yNou2KM35RvzOh4vUFtl2l33rWPvOCoba+nzEDJ+BgD8aOL/jew4WPCibQvntRfOJ2pJU8ARygSMD+pdjvDHuA==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-JJjI2Fa+QtZcUyuNjbKn04OjIUX5IgFGFu/Xc+qvzh1rXdZHLcnqqVXhR4093bGirTwacRlHiVg1XYI9xum6QQ==",
      "path": "microsoft.extensions.dependencyinjection/9.0.8",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xY3lTjj4+ZYmiKIkyWitddrp1uL5uYiweQjqo4BKBw01ZC4HhcfgLghDpPZcUlppgWAFqFy9SgkiYWOMx365pw==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyModel/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3CW02zNjyqJ2eORo8Zkznpw6+QvK+tYUKZgKuKuAIYdy73TRFvpaqCwYws1k6/lMSJ7ZqABfWn0/wa5bRsIJ4w==",
      "path": "microsoft.extensions.dependencymodel/9.0.8",
      "hashPath": "microsoft.extensions.dependencymodel.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Z/7ze+0iheT7FJeZPqJKARYvyC2bmwu3whbm/48BJjdlGVvgDguoCqJIkI/67NkroTYobd5geai1WheNQvWrgA==",
      "path": "microsoft.extensions.logging/9.0.8",
      "hashPath": "microsoft.extensions.logging.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pYnAffJL7ARD/HCnnPvnFKSIHnTSmWz84WIlT9tPeQ4lHNiu0Az7N/8itihWvcF8sT+VVD5lq8V+ckMzu4SbOw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.ObjectPool/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4pm+XgxSukskwjzDDfSjG4KNUIOdFF2VaqZZDtTzoyQMOVSnlV6ZM8a9aVu5dg9LVZTB//utzSc8fOi0b0Mb2Q==",
      "path": "microsoft.extensions.objectpool/8.0.0",
      "hashPath": "microsoft.extensions.objectpool.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OmTaQ0v4gxGQkehpwWIqPoEiwsPuG/u4HUsbOFoWGx4DKET2AXzopnFe/fE608FIhzc/kcg2p8JdyMRCCUzitQ==",
      "path": "microsoft.extensions.options/9.0.8",
      "hashPath": "microsoft.extensions.options.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tizSIOEsIgSNSSh+hKeUVPK7xmTIjR8s+mJWOu1KXV3htvNQiPMFRMO17OdI1y/4ZApdBVk49u/08QGC9yvLug==",
      "path": "microsoft.extensions.primitives/9.0.8",
      "hashPath": "microsoft.extensions.primitives.9.0.8.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-iwbCpSjD3ehfTwBhtSNEtKPK0ICun6ov7Ibx6ISNA9bfwIyzI2Siwyi9eJFCJBwxowK9xcA1mj+jBWiigeqgcQ==",
      "path": "microsoft.identitymodel.abstractions/8.14.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4jOpiA4THdtpLyMdAb24dtj7+6GmvhOhxf5XHLYWmPKF8ApEnApal1UnJsKO4HxUWRXDA6C4WQVfYyqsRhpNpQ==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.14.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eqqnemdW38CKZEHS6diA50BV94QICozDZEvSrsvN3SJXUFwVB9gy+/oz76gldP7nZliA16IglXjXTCTdmU/Ejg==",
      "path": "microsoft.identitymodel.logging/8.14.0",
      "hashPath": "microsoft.identitymodel.logging.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lKIZiBiGd36k02TCdMHp1KlNWisyIvQxcYJvIkz7P4gSQ9zi8dgh6S5Grj8NNG7HWYIPfQymGyoZ6JB5d1Lo1g==",
      "path": "microsoft.identitymodel.tokens/8.14.0",
      "hashPath": "microsoft.identitymodel.tokens.8.14.0.nupkg.sha512"
    },
    "Microsoft.OpenApi/1.6.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tTaBT8qjk3xINfESyOPE2rIellPvB7qpVqiWiyA/lACVvz+xOGiXhFUfohcx82NLbi5avzLW0lx+s6oAqQijfw==",
      "path": "microsoft.openapi/1.6.14",
      "hashPath": "microsoft.openapi.1.6.14.nupkg.sha512"
    },
    "Mono.TextTemplating/3.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "path": "mono.texttemplating/3.0.0",
      "hashPath": "mono.texttemplating.3.0.0.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+NB4UYVYN6AhDSjW0IJAd1AGD8V33gemFNLPaxKTtPkHB+HaKAKf9MGAEUPivEWvqeQfcKIw8lJaHq6LHljRuw==",
      "path": "swashbuckle.aspnetcore/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.Swagger/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ovgPTSYX83UrQUWiS5vzDcJ8TEX1MAxBgDFMK45rC24MorHEPQlZAHlaXj/yth4Zf6xcktpUgTEBvffRQVwDKA==",
      "path": "swashbuckle.aspnetcore.swagger/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swagger.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zv4ikn4AT1VYuOsDCpktLq4QDq08e7Utzbir86M5/ZkRaLXbCPF11E1/vTmOiDzRTl0zTZINQU2qLKwTcHgfrA==",
      "path": "swashbuckle.aspnetcore.swaggergen/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swaggergen.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mBBb+/8Hm2Q3Wygag+hu2jj69tZW5psuv0vMRXY07Wy+Rrj40vRP8ZTbKBhs91r45/HXT4aY4z0iSBYx1h6JvA==",
      "path": "swashbuckle.aspnetcore.swaggerui/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swaggerui.6.6.2.nupkg.sha512"
    },
    "System.CodeDom/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "path": "system.codedom/6.0.0",
      "hashPath": "system.codedom.6.0.0.nupkg.sha512"
    },
    "System.Collections.Immutable/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dQPcs0U1IKnBdRDBkrCTi1FoajSTBzLcVTpjO4MBCMC7f4pDOIPzgBoX8JjG7X6uZRJ8EBxsi8+DR1JuwjnzOQ==",
      "path": "system.collections.immutable/7.0.0",
      "hashPath": "system.collections.immutable.7.0.0.nupkg.sha512"
    },
    "System.Composition/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "path": "system.composition/7.0.0",
      "hashPath": "system.composition.7.0.0.nupkg.sha512"
    },
    "System.Composition.AttributedModel/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "path": "system.composition.attributedmodel/7.0.0",
      "hashPath": "system.composition.attributedmodel.7.0.0.nupkg.sha512"
    },
    "System.Composition.Convention/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "path": "system.composition.convention/7.0.0",
      "hashPath": "system.composition.convention.7.0.0.nupkg.sha512"
    },
    "System.Composition.Hosting/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "path": "system.composition.hosting/7.0.0",
      "hashPath": "system.composition.hosting.7.0.0.nupkg.sha512"
    },
    "System.Composition.Runtime/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "path": "system.composition.runtime/7.0.0",
      "hashPath": "system.composition.runtime.7.0.0.nupkg.sha512"
    },
    "System.Composition.TypedParts/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "path": "system.composition.typedparts/7.0.0",
      "hashPath": "system.composition.typedparts.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Lj8/a1Hzli1z6jo8H9urc16GxkpVJtJM+W9fmivXMNu7nwzHziGkxn4vO0DFscMbudkEVKSezdDuHk5kgM0X/g==",
      "path": "system.diagnostics.diagnosticsource/9.0.8",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.8.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EYGgN/S+HK7S6F3GaaPLFAfK0UzMrkXFyWCvXpQWFYmZln3dqtbyIO7VuTM/iIIPMzkelg8ZLlBPvMhxj6nOAA==",
      "path": "system.identitymodel.tokens.jwt/8.14.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.14.0.nupkg.sha512"
    },
    "System.IO.Hashing/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ne1843evDugl0md7Fjzy6QjJrzsjh46ZKbhf8GwBXb5f/gw97J4bxMs0NQKifDuThh/f0bZ0e62NPl1jzTuRqA==",
      "path": "system.io.hashing/8.0.0",
      "hashPath": "system.io.hashing.8.0.0.nupkg.sha512"
    },
    "System.IO.Pipelines/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6vPmJt73mgUo1gzc/OcXlJvClz/2jxZ4TQPRfriVaLoGRH2mye530D9WHJYbFQRNMxF3PWCoeofsFdCyN7fLzA==",
      "path": "system.io.pipelines/9.0.8",
      "hashPath": "system.io.pipelines.9.0.8.nupkg.sha512"
    },
    "System.Reflection.Metadata/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-MclTG61lsD9sYdpNz9xsKBzjsmsfCtcMZYXz/IUr2zlhaTaABonlr1ESeompTgM+Xk+IwtGYU7/voh3YWB/fWw==",
      "path": "system.reflection.metadata/7.0.0",
      "hashPath": "system.reflection.metadata.7.0.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+LotQsM4wBJ4PG7uRkyul4wqL4Fz7R4ty6uXrCNZUhbaHYANgrPaYR2ZpMVpdCjQEJ17Jr1NMN8hv4SHaHY4A==",
      "path": "system.text.encodings.web/9.0.8",
      "hashPath": "system.text.encodings.web.9.0.8.nupkg.sha512"
    },
    "System.Text.Json/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mIQir9jBqk0V7X0Nw5hzPJZC8DuGdf+2DS3jAVsr6rq5+/VyH5rza0XGcONJUWBrZ+G6BCwNyjWYd9lncBu48A==",
      "path": "system.text.json/9.0.8",
      "hashPath": "system.text.json.9.0.8.nupkg.sha512"
    },
    "System.Threading.Channels/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "path": "system.threading.channels/7.0.0",
      "hashPath": "system.threading.channels.7.0.0.nupkg.sha512"
    },
    "Yarp.ReverseProxy/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gxtkN3a+9biu9V9Zd5NaTO6VZWXAnS2mhQ0R/VXmSPoTuiQNZsakKikrKpDtKxrL5nUYzbRsHtl40WNq+ZBKKg==",
      "path": "yarp.reverseproxy/2.3.0",
      "hashPath": "yarp.reverseproxy.2.3.0.nupkg.sha512"
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.deps.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.runtimeconfig.json =====
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "System.GC.Server": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.runtimeconfig.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.staticwebassets.endpoints.json =====
{"Version":1,"ManifestType":"Build","Endpoints":[]}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.staticwebassets.endpoints.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.Tests.deps.json =====
{
  "runtimeTarget": {
    "name": ".NETCoreApp,Version=v8.0",
    "signature": ""
  },
  "compilationOptions": {
    "defines": [
      "TRACE",
      "DEBUG",
      "NET",
      "NET8_0",
      "NETCOREAPP",
      "NET5_0_OR_GREATER",
      "NET6_0_OR_GREATER",
      "NET7_0_OR_GREATER",
      "NET8_0_OR_GREATER",
      "NETCOREAPP1_0_OR_GREATER",
      "NETCOREAPP1_1_OR_GREATER",
      "NETCOREAPP2_0_OR_GREATER",
      "NETCOREAPP2_1_OR_GREATER",
      "NETCOREAPP2_2_OR_GREATER",
      "NETCOREAPP3_0_OR_GREATER",
      "NETCOREAPP3_1_OR_GREATER"
    ],
    "languageVersion": "12.0",
    "platform": "",
    "allowUnsafe": false,
    "warningsAsErrors": false,
    "optimize": false,
    "keyFile": "",
    "emitEntryPoint": true,
    "xmlDoc": false,
    "debugType": "portable"
  },
  "targets": {
    ".NETCoreApp,Version=v8.0": {
      "ThoughtGarden.Api.Tests/1.0.0": {
        "dependencies": {
          "DotNet.Testcontainers": "1.6.0",
          "HotChocolate.AspNetCore": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "Microsoft.AspNetCore.Mvc.Testing": "8.0.19",
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Design": "9.0.8",
          "Microsoft.EntityFrameworkCore.Tools": "9.0.8",
          "Microsoft.NET.Test.Sdk": "17.14.1",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "Snapshooter.Xunit": "1.0.1",
          "Testcontainers.PostgreSql": "4.7.0",
          "ThoughtGarden.Api": "1.0.0",
          "coverlet.collector": "6.0.0",
          "xunit": "2.9.3",
          "xunit.runner.visualstudio": "3.1.4",
          "Microsoft.AspNetCore.Antiforgery": "8.0.0.0",
          "Microsoft.AspNetCore.Authentication.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Authentication.BearerToken": "8.0.0.0",
          "Microsoft.AspNetCore.Authentication.Cookies": "8.0.0.0",
          "Microsoft.AspNetCore.Authentication.Core": "8.0.0.0",
          "Microsoft.AspNetCore.Authentication": "8.0.0.0",
          "Microsoft.AspNetCore.Authentication.OAuth": "8.0.0.0",
          "Microsoft.AspNetCore.Authorization": "8.0.0.0",
          "Microsoft.AspNetCore.Authorization.Policy": "8.0.0.0",
          "Microsoft.AspNetCore.Components.Authorization": "8.0.0.0",
          "Microsoft.AspNetCore.Components": "8.0.0.0",
          "Microsoft.AspNetCore.Components.Endpoints": "8.0.0.0",
          "Microsoft.AspNetCore.Components.Forms": "8.0.0.0",
          "Microsoft.AspNetCore.Components.Server": "8.0.0.0",
          "Microsoft.AspNetCore.Components.Web": "8.0.0.0",
          "Microsoft.AspNetCore.Connections.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.CookiePolicy": "8.0.0.0",
          "Microsoft.AspNetCore.Cors": "8.0.0.0",
          "Microsoft.AspNetCore.Cryptography.Internal": "8.0.0.0",
          "Microsoft.AspNetCore.Cryptography.KeyDerivation": "8.0.0.0",
          "Microsoft.AspNetCore.DataProtection.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.DataProtection": "8.0.0.0",
          "Microsoft.AspNetCore.DataProtection.Extensions": "8.0.0.0",
          "Microsoft.AspNetCore.Diagnostics.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Diagnostics": "8.0.0.0",
          "Microsoft.AspNetCore.Diagnostics.HealthChecks": "8.0.0.0",
          "Microsoft.AspNetCore": "8.0.0.0",
          "Microsoft.AspNetCore.HostFiltering": "8.0.0.0",
          "Microsoft.AspNetCore.Hosting.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Hosting": "8.0.0.0",
          "Microsoft.AspNetCore.Hosting.Server.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Html.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Http.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Http.Connections.Common": "8.0.0.0",
          "Microsoft.AspNetCore.Http.Connections": "8.0.0.0",
          "Microsoft.AspNetCore.Http": "8.0.0.0",
          "Microsoft.AspNetCore.Http.Extensions": "8.0.0.0",
          "Microsoft.AspNetCore.Http.Features": "8.0.0.0",
          "Microsoft.AspNetCore.Http.Results": "8.0.0.0",
          "Microsoft.AspNetCore.HttpLogging": "8.0.0.0",
          "Microsoft.AspNetCore.HttpOverrides": "8.0.0.0",
          "Microsoft.AspNetCore.HttpsPolicy": "8.0.0.0",
          "Microsoft.AspNetCore.Identity": "8.0.0.0",
          "Microsoft.AspNetCore.Localization": "8.0.0.0",
          "Microsoft.AspNetCore.Localization.Routing": "8.0.0.0",
          "Microsoft.AspNetCore.Metadata": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.ApiExplorer": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Core": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Cors": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.DataAnnotations": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Formatters.Json": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Formatters.Xml": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Localization": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.Razor": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.RazorPages": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.TagHelpers": "8.0.0.0",
          "Microsoft.AspNetCore.Mvc.ViewFeatures": "8.0.0.0",
          "Microsoft.AspNetCore.OutputCaching": "8.0.0.0",
          "Microsoft.AspNetCore.RateLimiting": "8.0.0.0",
          "Microsoft.AspNetCore.Razor": "8.0.0.0",
          "Microsoft.AspNetCore.Razor.Runtime": "8.0.0.0",
          "Microsoft.AspNetCore.RequestDecompression": "8.0.0.0",
          "Microsoft.AspNetCore.ResponseCaching.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.ResponseCaching": "8.0.0.0",
          "Microsoft.AspNetCore.ResponseCompression": "8.0.0.0",
          "Microsoft.AspNetCore.Rewrite": "8.0.0.0",
          "Microsoft.AspNetCore.Routing.Abstractions": "8.0.0.0",
          "Microsoft.AspNetCore.Routing": "8.0.0.0",
          "Microsoft.AspNetCore.Server.HttpSys": "8.0.0.0",
          "Microsoft.AspNetCore.Server.IIS": "8.0.0.0",
          "Microsoft.AspNetCore.Server.IISIntegration": "8.0.0.0",
          "Microsoft.AspNetCore.Server.Kestrel.Core": "8.0.0.0",
          "Microsoft.AspNetCore.Server.Kestrel": "8.0.0.0",
          "Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes": "8.0.0.0",
          "Microsoft.AspNetCore.Server.Kestrel.Transport.Quic": "8.0.0.0",
          "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets": "8.0.0.0",
          "Microsoft.AspNetCore.Session": "8.0.0.0",
          "Microsoft.AspNetCore.SignalR.Common": "8.0.0.0",
          "Microsoft.AspNetCore.SignalR.Core": "8.0.0.0",
          "Microsoft.AspNetCore.SignalR": "8.0.0.0",
          "Microsoft.AspNetCore.SignalR.Protocols.Json": "8.0.0.0",
          "Microsoft.AspNetCore.StaticFiles": "8.0.0.0",
          "Microsoft.AspNetCore.WebSockets": "8.0.0.0",
          "Microsoft.AspNetCore.WebUtilities": "8.0.0.0",
          "Microsoft.CSharp": "8.0.0.0",
          "Microsoft.Extensions.Configuration.Binder.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.CommandLine.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.EnvironmentVariables.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.Ini": "8.0.0.0",
          "Microsoft.Extensions.Configuration.Json.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.KeyPerFile": "8.0.0.0",
          "Microsoft.Extensions.Configuration.UserSecrets.Reference": "8.0.0.0",
          "Microsoft.Extensions.Configuration.Xml": "8.0.0.0",
          "Microsoft.Extensions.Diagnostics.Abstractions.Reference": "8.0.0.0",
          "Microsoft.Extensions.Diagnostics.Reference": "8.0.0.0",
          "Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions": "8.0.0.0",
          "Microsoft.Extensions.Diagnostics.HealthChecks": "8.0.0.0",
          "Microsoft.Extensions.Features": "8.0.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions.Reference": "8.0.0.0",
          "Microsoft.Extensions.FileProviders.Composite": "8.0.0.0",
          "Microsoft.Extensions.FileProviders.Embedded": "8.0.0.0",
          "Microsoft.Extensions.FileProviders.Physical.Reference": "8.0.0.0",
          "Microsoft.Extensions.FileSystemGlobbing.Reference": "8.0.0.0",
          "Microsoft.Extensions.Hosting.Abstractions.Reference": "8.0.0.0",
          "Microsoft.Extensions.Hosting.Reference": "8.0.0.0",
          "Microsoft.Extensions.Http": "8.0.0.0",
          "Microsoft.Extensions.Identity.Core": "8.0.0.0",
          "Microsoft.Extensions.Identity.Stores": "8.0.0.0",
          "Microsoft.Extensions.Localization.Abstractions": "8.0.0.0",
          "Microsoft.Extensions.Localization": "8.0.0.0",
          "Microsoft.Extensions.Logging.Configuration.Reference": "8.0.0.0",
          "Microsoft.Extensions.Logging.Console.Reference": "8.0.0.0",
          "Microsoft.Extensions.Logging.Debug.Reference": "8.0.0.0",
          "Microsoft.Extensions.Logging.EventLog.Reference": "8.0.0.0",
          "Microsoft.Extensions.Logging.EventSource.Reference": "8.0.0.0",
          "Microsoft.Extensions.Logging.TraceSource": "8.0.0.0",
          "Microsoft.Extensions.ObjectPool.Reference": "8.0.0.0",
          "Microsoft.Extensions.Options.ConfigurationExtensions.Reference": "8.0.0.0",
          "Microsoft.Extensions.Options.DataAnnotations": "8.0.0.0",
          "Microsoft.Extensions.WebEncoders": "8.0.0.0",
          "Microsoft.JSInterop": "8.0.0.0",
          "Microsoft.Net.Http.Headers": "8.0.0.0",
          "Microsoft.VisualBasic.Core": "13.0.0.0",
          "Microsoft.VisualBasic": "10.0.0.0",
          "Microsoft.Win32.Primitives": "8.0.0.0",
          "Microsoft.Win32.Registry": "8.0.0.0",
          "mscorlib": "4.0.0.0",
          "netstandard": "2.1.0.0",
          "System.AppContext": "8.0.0.0",
          "System.Buffers.Reference": "8.0.0.0",
          "System.Collections.Concurrent": "8.0.0.0",
          "System.Collections": "8.0.0.0",
          "System.Collections.Immutable.Reference": "8.0.0.0",
          "System.Collections.NonGeneric": "8.0.0.0",
          "System.Collections.Specialized": "8.0.0.0",
          "System.ComponentModel.Annotations": "8.0.0.0",
          "System.ComponentModel.DataAnnotations": "4.0.0.0",
          "System.ComponentModel": "8.0.0.0",
          "System.ComponentModel.EventBasedAsync": "8.0.0.0",
          "System.ComponentModel.Primitives": "8.0.0.0",
          "System.ComponentModel.TypeConverter": "8.0.0.0",
          "System.Configuration": "4.0.0.0",
          "System.Console": "8.0.0.0",
          "System.Core": "4.0.0.0",
          "System.Data.Common": "8.0.0.0",
          "System.Data.DataSetExtensions": "8.0.0.0",
          "System.Data": "4.0.0.0",
          "System.Diagnostics.Contracts": "8.0.0.0",
          "System.Diagnostics.Debug": "8.0.0.0",
          "System.Diagnostics.EventLog.Reference": "8.0.0.0",
          "System.Diagnostics.FileVersionInfo": "8.0.0.0",
          "System.Diagnostics.Process": "8.0.0.0",
          "System.Diagnostics.StackTrace": "8.0.0.0",
          "System.Diagnostics.TextWriterTraceListener": "8.0.0.0",
          "System.Diagnostics.Tools": "8.0.0.0",
          "System.Diagnostics.TraceSource": "8.0.0.0",
          "System.Diagnostics.Tracing": "8.0.0.0",
          "System": "4.0.0.0",
          "System.Drawing": "4.0.0.0",
          "System.Drawing.Primitives": "8.0.0.0",
          "System.Dynamic.Runtime": "8.0.0.0",
          "System.Formats.Asn1": "8.0.0.0",
          "System.Formats.Tar": "8.0.0.0",
          "System.Globalization.Calendars": "8.0.0.0",
          "System.Globalization": "8.0.0.0",
          "System.Globalization.Extensions": "8.0.0.0",
          "System.IO.Compression.Brotli": "8.0.0.0",
          "System.IO.Compression": "8.0.0.0",
          "System.IO.Compression.FileSystem": "4.0.0.0",
          "System.IO.Compression.ZipFile": "8.0.0.0",
          "System.IO": "8.0.0.0",
          "System.IO.FileSystem.AccessControl": "8.0.0.0",
          "System.IO.FileSystem": "8.0.0.0",
          "System.IO.FileSystem.DriveInfo": "8.0.0.0",
          "System.IO.FileSystem.Primitives": "8.0.0.0",
          "System.IO.FileSystem.Watcher": "8.0.0.0",
          "System.IO.IsolatedStorage": "8.0.0.0",
          "System.IO.MemoryMappedFiles": "8.0.0.0",
          "System.IO.Pipes.AccessControl": "8.0.0.0",
          "System.IO.Pipes": "8.0.0.0",
          "System.IO.UnmanagedMemoryStream": "8.0.0.0",
          "System.Linq": "8.0.0.0",
          "System.Linq.Expressions": "8.0.0.0",
          "System.Linq.Parallel": "8.0.0.0",
          "System.Linq.Queryable": "8.0.0.0",
          "System.Memory": "8.0.0.0",
          "System.Net": "4.0.0.0",
          "System.Net.Http": "8.0.0.0",
          "System.Net.Http.Json": "8.0.0.0",
          "System.Net.HttpListener": "8.0.0.0",
          "System.Net.Mail": "8.0.0.0",
          "System.Net.NameResolution": "8.0.0.0",
          "System.Net.NetworkInformation": "8.0.0.0",
          "System.Net.Ping": "8.0.0.0",
          "System.Net.Primitives": "8.0.0.0",
          "System.Net.Quic": "8.0.0.0",
          "System.Net.Requests": "8.0.0.0",
          "System.Net.Security": "8.0.0.0",
          "System.Net.ServicePoint": "8.0.0.0",
          "System.Net.Sockets": "8.0.0.0",
          "System.Net.WebClient": "8.0.0.0",
          "System.Net.WebHeaderCollection": "8.0.0.0",
          "System.Net.WebProxy": "8.0.0.0",
          "System.Net.WebSockets.Client": "8.0.0.0",
          "System.Net.WebSockets": "8.0.0.0",
          "System.Numerics": "4.0.0.0",
          "System.Numerics.Vectors": "8.0.0.0",
          "System.ObjectModel": "8.0.0.0",
          "System.Reflection.DispatchProxy": "8.0.0.0",
          "System.Reflection": "8.0.0.0",
          "System.Reflection.Emit": "8.0.0.0",
          "System.Reflection.Emit.ILGeneration": "8.0.0.0",
          "System.Reflection.Emit.Lightweight": "8.0.0.0",
          "System.Reflection.Extensions": "8.0.0.0",
          "System.Reflection.Metadata.Reference": "8.0.0.0",
          "System.Reflection.Primitives": "8.0.0.0",
          "System.Reflection.TypeExtensions": "8.0.0.0",
          "System.Resources.Reader": "8.0.0.0",
          "System.Resources.ResourceManager": "8.0.0.0",
          "System.Resources.Writer": "8.0.0.0",
          "System.Runtime.CompilerServices.Unsafe.Reference": "8.0.0.0",
          "System.Runtime.CompilerServices.VisualC": "8.0.0.0",
          "System.Runtime": "8.0.0.0",
          "System.Runtime.Extensions": "8.0.0.0",
          "System.Runtime.Handles": "8.0.0.0",
          "System.Runtime.InteropServices": "8.0.0.0",
          "System.Runtime.InteropServices.JavaScript": "8.0.0.0",
          "System.Runtime.InteropServices.RuntimeInformation": "8.0.0.0",
          "System.Runtime.Intrinsics": "8.0.0.0",
          "System.Runtime.Loader": "8.0.0.0",
          "System.Runtime.Numerics": "8.0.0.0",
          "System.Runtime.Serialization": "4.0.0.0",
          "System.Runtime.Serialization.Formatters": "8.0.0.0",
          "System.Runtime.Serialization.Json": "8.0.0.0",
          "System.Runtime.Serialization.Primitives": "8.0.0.0",
          "System.Runtime.Serialization.Xml": "8.0.0.0",
          "System.Security.AccessControl": "8.0.0.0",
          "System.Security.Claims": "8.0.0.0",
          "System.Security.Cryptography.Algorithms": "8.0.0.0",
          "System.Security.Cryptography.Cng": "8.0.0.0",
          "System.Security.Cryptography.Csp": "8.0.0.0",
          "System.Security.Cryptography": "8.0.0.0",
          "System.Security.Cryptography.Encoding": "8.0.0.0",
          "System.Security.Cryptography.OpenSsl": "8.0.0.0",
          "System.Security.Cryptography.Primitives": "8.0.0.0",
          "System.Security.Cryptography.X509Certificates": "8.0.0.0",
          "System.Security.Cryptography.Xml": "8.0.0.0",
          "System.Security": "4.0.0.0",
          "System.Security.Principal": "8.0.0.0",
          "System.Security.Principal.Windows": "8.0.0.0",
          "System.Security.SecureString": "8.0.0.0",
          "System.ServiceModel.Web": "4.0.0.0",
          "System.ServiceProcess": "4.0.0.0",
          "System.Text.Encoding.CodePages": "8.0.0.0",
          "System.Text.Encoding": "8.0.0.0",
          "System.Text.Encoding.Extensions": "8.0.0.0",
          "System.Text.RegularExpressions": "8.0.0.0",
          "System.Threading.Channels.Reference": "8.0.0.0",
          "System.Threading": "8.0.0.0",
          "System.Threading.Overlapped": "8.0.0.0",
          "System.Threading.RateLimiting": "8.0.0.0",
          "System.Threading.Tasks.Dataflow": "8.0.0.0",
          "System.Threading.Tasks": "8.0.0.0",
          "System.Threading.Tasks.Extensions.Reference": "8.0.0.0",
          "System.Threading.Tasks.Parallel": "8.0.0.0",
          "System.Threading.Thread": "8.0.0.0",
          "System.Threading.ThreadPool": "8.0.0.0",
          "System.Threading.Timer": "8.0.0.0",
          "System.Transactions": "4.0.0.0",
          "System.Transactions.Local": "8.0.0.0",
          "System.ValueTuple": "8.0.0.0",
          "System.Web": "4.0.0.0",
          "System.Web.HttpUtility": "8.0.0.0",
          "System.Windows": "4.0.0.0",
          "System.Xml": "4.0.0.0",
          "System.Xml.Linq": "4.0.0.0",
          "System.Xml.ReaderWriter": "8.0.0.0",
          "System.Xml.Serialization": "4.0.0.0",
          "System.Xml.XDocument": "8.0.0.0",
          "System.Xml.XmlDocument": "8.0.0.0",
          "System.Xml.XmlSerializer": "8.0.0.0",
          "System.Xml.XPath": "8.0.0.0",
          "System.Xml.XPath.XDocument": "8.0.0.0",
          "WindowsBase": "4.0.0.0"
        },
        "runtime": {
          "ThoughtGarden.Api.Tests.dll": {}
        },
        "compile": {
          "ThoughtGarden.Api.Tests.dll": {}
        }
      },
      "BCrypt.Net-Next/4.0.3": {
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "assemblyVersion": "4.0.3.0",
            "fileVersion": "4.0.3.0"
          }
        },
        "compile": {
          "lib/net6.0/BCrypt.Net-Next.dll": {}
        }
      },
      "BouncyCastle.Cryptography/2.4.0": {
        "runtime": {
          "lib/net6.0/BouncyCastle.Cryptography.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.4.0.33771"
          }
        },
        "compile": {
          "lib/net6.0/BouncyCastle.Cryptography.dll": {}
        }
      },
      "ChilliCream.Nitro.App/28.0.7": {
        "dependencies": {
          "Yarp.ReverseProxy": "2.3.0"
        },
        "runtime": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {
            "assemblyVersion": "28.0.0.0",
            "fileVersion": "28.0.7.0"
          }
        },
        "compile": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {}
        }
      },
      "coverlet.collector/6.0.0": {},
      "Docker.DotNet/3.125.5": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3",
          "System.Buffers": "4.5.1",
          "System.Threading.Tasks.Extensions": "4.5.4"
        }
      },
      "Docker.DotNet.Enhanced/3.128.5": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Docker.DotNet.dll": {
            "assemblyVersion": "3.128.0.0",
            "fileVersion": "3.128.5.1"
          }
        },
        "compile": {
          "lib/net8.0/Docker.DotNet.dll": {}
        }
      },
      "Docker.DotNet.Enhanced.X509/3.128.5": {
        "dependencies": {
          "Docker.DotNet.Enhanced": "3.128.5"
        },
        "runtime": {
          "lib/net8.0/Docker.DotNet.X509.dll": {
            "assemblyVersion": "3.128.0.0",
            "fileVersion": "3.128.5.1"
          }
        },
        "compile": {
          "lib/net8.0/Docker.DotNet.X509.dll": {}
        }
      },
      "DotNet.Testcontainers/1.6.0": {
        "dependencies": {
          "Docker.DotNet": "3.125.5",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "SharpZipLib": "1.4.2",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/netstandard2.1/DotNet.Testcontainers.dll": {
            "assemblyVersion": "1.6.0.0",
            "fileVersion": "1.6.0.0"
          }
        },
        "compile": {
          "lib/netstandard2.1/DotNet.Testcontainers.dll": {}
        }
      },
      "EFCore.NamingConventions/9.0.0": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/EFCore.NamingConventions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.0.0"
          }
        },
        "compile": {
          "lib/net8.0/EFCore.NamingConventions.dll": {}
        }
      },
      "GreenDonut/15.1.9": {
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/GreenDonut.dll": {}
        }
      },
      "GreenDonut.Abstractions/15.1.9": {
        "runtime": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {}
        }
      },
      "GreenDonut.Data/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.dll": {}
        }
      },
      "GreenDonut.Data.Abstractions/15.1.9": {
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {}
        }
      },
      "GreenDonut.Data.EntityFramework/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {}
        }
      },
      "GreenDonut.Data.Primitives/15.1.9": {
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {}
        }
      },
      "HotChocolate/15.1.9": {
        "dependencies": {
          "HotChocolate.Authorization": "15.1.9",
          "HotChocolate.CostAnalysis": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9",
          "HotChocolate.Types.CursorPagination.Extensions": "15.1.9",
          "HotChocolate.Types.Mutations": "15.1.9",
          "HotChocolate.Types.Queries": "15.1.9",
          "HotChocolate.Validation": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.dll": {}
        }
      },
      "HotChocolate.Abstractions/15.1.9": {
        "dependencies": {
          "HotChocolate.Primitives": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {}
        }
      },
      "HotChocolate.AspNetCore/15.1.9": {
        "dependencies": {
          "ChilliCream.Nitro.App": "28.0.7",
          "HotChocolate": "15.1.9",
          "HotChocolate.Subscriptions.InMemory": "15.1.9",
          "HotChocolate.Transport.Sockets": "15.1.9",
          "HotChocolate.Types.Scalars.Upload": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {}
        }
      },
      "HotChocolate.AspNetCore.Authorization/15.1.9": {
        "dependencies": {
          "HotChocolate": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {}
        }
      },
      "HotChocolate.Authorization/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Authorization.dll": {}
        }
      },
      "HotChocolate.CostAnalysis/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {}
        }
      },
      "HotChocolate.Data/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Data.dll": {}
        }
      },
      "HotChocolate.Data.EntityFramework/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.EntityFramework": "15.1.9",
          "HotChocolate": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {}
        }
      },
      "HotChocolate.Execution/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9",
          "HotChocolate.Validation": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.dll": {}
        }
      },
      "HotChocolate.Execution.Abstractions/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {}
        }
      },
      "HotChocolate.Execution.Projections/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {}
        }
      },
      "HotChocolate.Features/15.1.9": {
        "runtime": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Features.dll": {}
        }
      },
      "HotChocolate.Fetching/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Fetching.dll": {}
        }
      },
      "HotChocolate.Language/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9",
          "HotChocolate.Language.Utf8": "15.1.9",
          "HotChocolate.Language.Visitors": "15.1.9",
          "HotChocolate.Language.Web": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.dll": {}
        }
      },
      "HotChocolate.Language.SyntaxTree/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {}
        }
      },
      "HotChocolate.Language.Utf8/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {}
        }
      },
      "HotChocolate.Language.Visitors/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {}
        }
      },
      "HotChocolate.Language.Web/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.Utf8": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {}
        }
      },
      "HotChocolate.Primitives/15.1.9": {
        "dependencies": {
          "HotChocolate.Language": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Primitives.dll": {}
        }
      },
      "HotChocolate.Subscriptions/15.1.9": {
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Utilities": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {}
        }
      },
      "HotChocolate.Subscriptions.InMemory/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Subscriptions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {}
        }
      },
      "HotChocolate.Transport.Sockets/15.1.9": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {}
        }
      },
      "HotChocolate.Types/15.1.9": {
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Features": "15.1.9",
          "HotChocolate.Types.Shared": "15.1.9",
          "HotChocolate.Utilities": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.dll": {}
        }
      },
      "HotChocolate.Types.CursorPagination/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {}
        }
      },
      "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {}
        }
      },
      "HotChocolate.Types.Errors/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {}
        }
      },
      "HotChocolate.Types.Mutations/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {}
        }
      },
      "HotChocolate.Types.Queries/15.1.9": {
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {}
        }
      },
      "HotChocolate.Types.Scalars.Upload/15.1.9": {
        "dependencies": {
          "HotChocolate.Types": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {}
        }
      },
      "HotChocolate.Types.Shared/15.1.9": {
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {}
        }
      },
      "HotChocolate.Utilities/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Utilities.dll": {}
        }
      },
      "HotChocolate.Utilities.DependencyInjection/15.1.9": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {}
        }
      },
      "HotChocolate.Validation/15.1.9": {
        "dependencies": {
          "HotChocolate.Types": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "assemblyVersion": "15.1.9.0",
            "fileVersion": "15.1.9.0"
          }
        },
        "compile": {
          "lib/net8.0/HotChocolate.Validation.dll": {}
        }
      },
      "Humanizer.Core/2.14.1": {
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "assemblyVersion": "2.14.0.0",
            "fileVersion": "2.14.1.48190"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "assemblyVersion": "8.0.19.0",
            "fileVersion": "8.0.1925.37204"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {}
        }
      },
      "Microsoft.AspNetCore.Mvc.Testing/8.0.19": {
        "dependencies": {
          "Microsoft.AspNetCore.TestHost": "8.0.19",
          "Microsoft.Extensions.DependencyModel": "9.0.8",
          "Microsoft.Extensions.Hosting": "8.0.1"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Mvc.Testing.dll": {
            "assemblyVersion": "8.0.19.0",
            "fileVersion": "8.0.1925.37204"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Mvc.Testing.dll": {}
        }
      },
      "Microsoft.AspNetCore.TestHost/8.0.19": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.TestHost.dll": {
            "assemblyVersion": "8.0.19.0",
            "fileVersion": "8.0.1925.37204"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.TestHost.dll": {}
        }
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        },
        "compile": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
        }
      },
      "Microsoft.Build.Framework/17.8.3": {},
      "Microsoft.Build.Locator/1.7.8": {
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.7.8.28074"
          }
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {},
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "8.0.0",
          "System.Reflection.Metadata": "8.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "9.0.8",
          "System.Threading.Channels": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "dependencies": {
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.CodeAnalysis.Common": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.Common": "4.8.0",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "assemblyVersion": "4.8.0.0",
            "fileVersion": "4.800.23.55801"
          }
        },
        "resources": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeCoverage/17.14.1": {
        "runtime": {
          "lib/net8.0/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.225.12603"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {}
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.8",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {},
      "Microsoft.EntityFrameworkCore.Design/9.0.8": {
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyModel": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "assemblyVersion": "9.0.8.0",
            "fileVersion": "9.0.825.36802"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Tools/9.0.8": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Design": "9.0.8"
        }
      },
      "Microsoft.Extensions.ApiDescription.Server/6.0.5": {},
      "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {}
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {}
        }
      },
      "Microsoft.Extensions.Configuration/8.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {}
        }
      },
      "Microsoft.Extensions.Configuration.Binder/8.0.2": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.724.31311"
          }
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8"
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8"
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.724.31311"
          }
        }
      },
      "Microsoft.Extensions.Configuration.Json/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Configuration.Json": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.8": {
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.8",
          "System.Text.Json": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "assemblyVersion": "9.0.0.8",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {}
        }
      },
      "Microsoft.Extensions.Diagnostics/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Diagnostics.Abstractions": "8.0.1",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/8.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileSystemGlobbing": "8.0.0",
          "Microsoft.Extensions.Primitives": "9.0.8"
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {},
      "Microsoft.Extensions.Hosting/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Configuration.Binder": "8.0.2",
          "Microsoft.Extensions.Configuration.CommandLine": "8.0.0",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.1",
          "Microsoft.Extensions.Configuration.Json": "8.0.1",
          "Microsoft.Extensions.Configuration.UserSecrets": "8.0.1",
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Diagnostics": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "8.0.1",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Configuration": "8.0.1",
          "Microsoft.Extensions.Logging.Console": "8.0.1",
          "Microsoft.Extensions.Logging.Debug": "8.0.1",
          "Microsoft.Extensions.Logging.EventLog": "8.0.1",
          "Microsoft.Extensions.Logging.EventSource": "8.0.1",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Diagnostics.Abstractions": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Logging/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "System.Diagnostics.DiagnosticSource": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
        }
      },
      "Microsoft.Extensions.Logging.Configuration/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Configuration.Binder": "8.0.2",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Logging.Console/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Configuration": "8.0.1",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Logging.Debug/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Logging.EventLog/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "System.Diagnostics.EventLog": "8.0.1"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.Logging.EventSource/8.0.1": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "Microsoft.Extensions.ObjectPool/8.0.0": {},
      "Microsoft.Extensions.Options/9.0.8": {
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {}
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Configuration.Binder": "8.0.2",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        }
      },
      "Microsoft.Extensions.Primitives/9.0.8": {
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {}
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.14.0": {
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {}
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {}
        }
      },
      "Microsoft.IdentityModel.Logging/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {}
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {}
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "assemblyVersion": "7.1.2.0",
            "fileVersion": "7.1.2.41121"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {}
        }
      },
      "Microsoft.IdentityModel.Tokens/8.14.0": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.IdentityModel.Logging": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {}
        }
      },
      "Microsoft.NET.Test.Sdk/17.14.1": {
        "dependencies": {
          "Microsoft.CodeCoverage": "17.14.1",
          "Microsoft.TestPlatform.TestHost": "17.14.1"
        }
      },
      "Microsoft.OpenApi/1.6.14": {
        "runtime": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "assemblyVersion": "1.6.14.0",
            "fileVersion": "1.6.14.0"
          }
        },
        "compile": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {}
        }
      },
      "Microsoft.TestPlatform.ObjectModel/17.14.1": {
        "dependencies": {
          "System.Reflection.Metadata": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          },
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          },
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          }
        },
        "resources": {
          "lib/net8.0/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/de/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/es/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/it/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/net8.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hant"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {}
        }
      },
      "Microsoft.TestPlatform.TestHost/17.14.1": {
        "dependencies": {
          "Microsoft.TestPlatform.ObjectModel": "17.14.1",
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net8.0/Microsoft.TestPlatform.CommunicationUtilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          },
          "lib/net8.0/Microsoft.TestPlatform.CrossPlatEngine.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          },
          "lib/net8.0/Microsoft.TestPlatform.Utilities.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          },
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.Common.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          },
          "lib/net8.0/testhost.dll": {
            "assemblyVersion": "15.0.0.0",
            "fileVersion": "17.1400.125.30202"
          }
        },
        "resources": {
          "lib/net8.0/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/net8.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hant"
          }
        },
        "compile": {
          "lib/net8.0/Microsoft.TestPlatform.CommunicationUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.CrossPlatEngine.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.Utilities.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.Common.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {},
          "lib/net8.0/testhost.dll": {}
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {
            "assemblyVersion": "3.0.0.0",
            "fileVersion": "3.0.0.1"
          }
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "assemblyVersion": "13.0.0.0",
            "fileVersion": "13.0.3.27908"
          }
        },
        "compile": {
          "lib/net6.0/Newtonsoft.Json.dll": {}
        }
      },
      "Npgsql/9.0.3": {
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "assemblyVersion": "9.0.3.0",
            "fileVersion": "9.0.3.0"
          }
        },
        "compile": {
          "lib/net8.0/Npgsql.dll": {}
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Npgsql": "9.0.3"
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "assemblyVersion": "9.0.4.0",
            "fileVersion": "9.0.4.0"
          }
        },
        "compile": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
        }
      },
      "SharpZipLib/1.4.2": {
        "runtime": {
          "lib/net6.0/ICSharpCode.SharpZipLib.dll": {
            "assemblyVersion": "1.4.2.13",
            "fileVersion": "1.4.2.13"
          }
        },
        "compile": {
          "lib/net6.0/ICSharpCode.SharpZipLib.dll": {}
        }
      },
      "Snapshooter/1.0.1": {
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "runtime": {
          "lib/net8.0/Snapshooter.dll": {
            "assemblyVersion": "1.0.1.0",
            "fileVersion": "1.0.1.0"
          }
        },
        "compile": {
          "lib/net8.0/Snapshooter.dll": {}
        }
      },
      "Snapshooter.Xunit/1.0.1": {
        "dependencies": {
          "Snapshooter": "1.0.1",
          "xunit.assert": "2.9.3",
          "xunit.core": "2.9.3"
        },
        "runtime": {
          "lib/net8.0/Snapshooter.Xunit.dll": {
            "assemblyVersion": "1.0.1.0",
            "fileVersion": "1.0.1.0"
          }
        },
        "compile": {
          "lib/net8.0/Snapshooter.Xunit.dll": {}
        }
      },
      "SSH.NET/2024.2.0": {
        "dependencies": {
          "BouncyCastle.Cryptography": "2.4.0"
        },
        "runtime": {
          "lib/net8.0/Renci.SshNet.dll": {
            "assemblyVersion": "2024.2.0.1",
            "fileVersion": "2024.2.0.1"
          }
        },
        "compile": {
          "lib/net8.0/Renci.SshNet.dll": {}
        }
      },
      "Swashbuckle.AspNetCore/6.6.2": {
        "dependencies": {
          "Microsoft.Extensions.ApiDescription.Server": "6.0.5",
          "Swashbuckle.AspNetCore.Swagger": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerGen": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerUI": "6.6.2"
        }
      },
      "Swashbuckle.AspNetCore.Swagger/6.6.2": {
        "dependencies": {
          "Microsoft.OpenApi": "1.6.14"
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {}
        }
      },
      "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
        "dependencies": {
          "Swashbuckle.AspNetCore.Swagger": "6.6.2"
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {}
        }
      },
      "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "assemblyVersion": "6.6.2.0",
            "fileVersion": "6.6.2.401"
          }
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {}
        }
      },
      "System.Buffers/4.5.1": {},
      "System.CodeDom/6.0.0": {
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "assemblyVersion": "6.0.0.0",
            "fileVersion": "6.0.21.52210"
          }
        }
      },
      "System.Collections.Immutable/8.0.0": {},
      "System.Composition/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Convention/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "assemblyVersion": "7.0.0.0",
            "fileVersion": "7.0.22.51805"
          }
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.8": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {}
        }
      },
      "System.Diagnostics.EventLog/8.0.1": {
        "runtime": {
          "lib/net8.0/System.Diagnostics.EventLog.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        },
        "runtimeTargets": {
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll": {
            "rid": "win",
            "assetType": "runtime",
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.1024.46610"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.14.0": {
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "assemblyVersion": "8.14.0.0",
            "fileVersion": "8.14.0.60815"
          }
        },
        "compile": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {}
        }
      },
      "System.IO.Hashing/8.0.0": {
        "runtime": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "assemblyVersion": "8.0.0.0",
            "fileVersion": "8.0.23.53103"
          }
        },
        "compile": {
          "lib/net8.0/System.IO.Hashing.dll": {}
        }
      },
      "System.IO.Pipelines/9.0.8": {
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/System.IO.Pipelines.dll": {}
        }
      },
      "System.Reflection.Metadata/8.0.0": {
        "dependencies": {
          "System.Collections.Immutable": "8.0.0"
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {},
      "System.Text.Encodings.Web/9.0.8": {
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "rid": "browser",
            "assetType": "runtime",
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {}
        }
      },
      "System.Text.Json/9.0.8": {
        "dependencies": {
          "System.IO.Pipelines": "9.0.8",
          "System.Text.Encodings.Web": "9.0.8"
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "assemblyVersion": "9.0.0.0",
            "fileVersion": "9.0.825.36511"
          }
        },
        "compile": {
          "lib/net8.0/System.Text.Json.dll": {}
        }
      },
      "System.Threading.Channels/7.0.0": {},
      "System.Threading.Tasks.Extensions/4.5.4": {},
      "Testcontainers/4.7.0": {
        "dependencies": {
          "Docker.DotNet.Enhanced": "3.128.5",
          "Docker.DotNet.Enhanced.X509": "3.128.5",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "SSH.NET": "2024.2.0",
          "SharpZipLib": "1.4.2"
        },
        "runtime": {
          "lib/net8.0/Testcontainers.dll": {
            "assemblyVersion": "4.7.0.0",
            "fileVersion": "4.7.0.0"
          }
        },
        "compile": {
          "lib/net8.0/Testcontainers.dll": {}
        }
      },
      "Testcontainers.PostgreSql/4.7.0": {
        "dependencies": {
          "Testcontainers": "4.7.0"
        },
        "runtime": {
          "lib/net8.0/Testcontainers.PostgreSql.dll": {
            "assemblyVersion": "4.7.0.0",
            "fileVersion": "4.7.0.0"
          }
        },
        "compile": {
          "lib/net8.0/Testcontainers.PostgreSql.dll": {}
        }
      },
      "xunit/2.9.3": {
        "dependencies": {
          "xunit.analyzers": "1.18.0",
          "xunit.assert": "2.9.3",
          "xunit.core": "2.9.3"
        }
      },
      "xunit.abstractions/2.0.3": {
        "runtime": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "assemblyVersion": "2.0.0.0",
            "fileVersion": "2.0.0.0"
          }
        },
        "compile": {
          "lib/netstandard2.0/xunit.abstractions.dll": {}
        }
      },
      "xunit.analyzers/1.18.0": {},
      "xunit.assert/2.9.3": {
        "runtime": {
          "lib/net6.0/xunit.assert.dll": {
            "assemblyVersion": "2.9.3.0",
            "fileVersion": "2.9.3.0"
          }
        },
        "compile": {
          "lib/net6.0/xunit.assert.dll": {}
        }
      },
      "xunit.core/2.9.3": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.3",
          "xunit.extensibility.execution": "2.9.3"
        }
      },
      "xunit.extensibility.core/2.9.3": {
        "dependencies": {
          "xunit.abstractions": "2.0.3"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.core.dll": {
            "assemblyVersion": "2.9.3.0",
            "fileVersion": "2.9.3.0"
          }
        },
        "compile": {
          "lib/netstandard1.1/xunit.core.dll": {}
        }
      },
      "xunit.extensibility.execution/2.9.3": {
        "dependencies": {
          "xunit.extensibility.core": "2.9.3"
        },
        "runtime": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "assemblyVersion": "2.9.3.0",
            "fileVersion": "2.9.3.0"
          }
        },
        "compile": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {}
        }
      },
      "xunit.runner.visualstudio/3.1.4": {},
      "Yarp.ReverseProxy/2.3.0": {
        "dependencies": {
          "System.IO.Hashing": "8.0.0"
        },
        "runtime": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "assemblyVersion": "2.3.0.0",
            "fileVersion": "2.300.25.12702"
          }
        },
        "compile": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {}
        }
      },
      "ThoughtGarden.Api/1.0.0": {
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "EFCore.NamingConventions": "9.0.0",
          "HotChocolate.AspNetCore": "15.1.9",
          "HotChocolate.AspNetCore.Authorization": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "HotChocolate.Data.EntityFramework": "15.1.9",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.19",
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "Swashbuckle.AspNetCore": "6.6.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "runtime": {
          "ThoughtGarden.Api.dll": {
            "assemblyVersion": "1.0.0.0",
            "fileVersion": "1.0.0.0"
          }
        },
        "compile": {
          "ThoughtGarden.Api.dll": {}
        }
      },
      "Microsoft.AspNetCore.Antiforgery/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Antiforgery.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authentication.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authentication.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authentication.BearerToken/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authentication.BearerToken.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authentication.Cookies/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authentication.Cookies.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authentication.Core/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authentication.Core.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authentication/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authentication.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authentication.OAuth/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authentication.OAuth.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authorization/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authorization.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Authorization.Policy/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Authorization.Policy.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Components.Authorization/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Components.Authorization.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Components/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Components.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Components.Endpoints/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Components.Endpoints.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Components.Forms/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Components.Forms.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Components.Server/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Components.Server.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Components.Web/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Components.Web.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Connections.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Connections.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.CookiePolicy/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.CookiePolicy.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Cors/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Cors.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Cryptography.Internal/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Cryptography.Internal.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Cryptography.KeyDerivation/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Cryptography.KeyDerivation.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.DataProtection.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.DataProtection.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.DataProtection/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.DataProtection.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.DataProtection.Extensions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.DataProtection.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Diagnostics.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Diagnostics.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Diagnostics/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Diagnostics.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Diagnostics.HealthChecks/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Diagnostics.HealthChecks.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.HostFiltering/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.HostFiltering.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Hosting.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Hosting.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Hosting/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Hosting.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Hosting.Server.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Hosting.Server.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Html.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Html.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http.Connections.Common/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.Connections.Common.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http.Connections/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.Connections.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http.Extensions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http.Features/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.Features.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Http.Results/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Http.Results.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.HttpLogging/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.HttpLogging.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.HttpOverrides/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.HttpOverrides.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.HttpsPolicy/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.HttpsPolicy.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Identity/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Identity.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Localization/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Localization.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Localization.Routing/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Localization.Routing.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Metadata/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Metadata.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.ApiExplorer/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.ApiExplorer.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Core/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Core.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Cors/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Cors.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.DataAnnotations/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.DataAnnotations.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Formatters.Json/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Formatters.Json.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Formatters.Xml/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Formatters.Xml.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Localization/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Localization.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.Razor/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.Razor.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.RazorPages/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.RazorPages.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.TagHelpers/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.TagHelpers.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Mvc.ViewFeatures/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Mvc.ViewFeatures.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.OutputCaching/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.OutputCaching.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.RateLimiting/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.RateLimiting.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Razor/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Razor.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Razor.Runtime/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Razor.Runtime.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.RequestDecompression/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.RequestDecompression.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.ResponseCaching.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.ResponseCaching.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.ResponseCaching/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.ResponseCaching.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.ResponseCompression/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.ResponseCompression.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Rewrite/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Rewrite.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Routing.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Routing.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Routing/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Routing.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.HttpSys/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.HttpSys.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.IIS/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.IIS.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.IISIntegration/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.IISIntegration.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.Kestrel.Core/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.Kestrel.Core.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.Kestrel/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.Kestrel.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.Kestrel.Transport.Quic/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.Kestrel.Transport.Quic.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.Session/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.Session.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.SignalR.Common/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.SignalR.Common.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.SignalR.Core/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.SignalR.Core.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.SignalR/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.SignalR.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.SignalR.Protocols.Json/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.SignalR.Protocols.Json.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.StaticFiles/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.StaticFiles.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.WebSockets/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.WebSockets.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.AspNetCore.WebUtilities/8.0.0.0": {
        "compile": {
          "Microsoft.AspNetCore.WebUtilities.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.CSharp/8.0.0.0": {
        "compile": {
          "Microsoft.CSharp.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.Binder.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.Binder.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.CommandLine.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.CommandLine.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.FileExtensions.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.FileExtensions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.Ini/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.Ini.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.Json.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.Json.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.KeyPerFile/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.KeyPerFile.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.UserSecrets.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.UserSecrets.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Configuration.Xml/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Configuration.Xml.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Diagnostics.Abstractions.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Diagnostics.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Diagnostics.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Diagnostics.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Diagnostics.HealthChecks/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Diagnostics.HealthChecks.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Features/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Features.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.FileProviders.Abstractions.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.FileProviders.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.FileProviders.Composite/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.FileProviders.Composite.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.FileProviders.Embedded/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.FileProviders.Embedded.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.FileProviders.Physical.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.FileProviders.Physical.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.FileSystemGlobbing.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.FileSystemGlobbing.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Hosting.Abstractions.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Hosting.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Hosting.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Hosting.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Http/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Http.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Identity.Core/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Identity.Core.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Identity.Stores/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Identity.Stores.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Localization.Abstractions/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Localization.Abstractions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Localization/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Localization.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Logging.Configuration.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Logging.Configuration.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Logging.Console.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Logging.Console.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Logging.Debug.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Logging.Debug.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Logging.EventLog.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Logging.EventLog.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Logging.EventSource.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Logging.EventSource.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Logging.TraceSource/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Logging.TraceSource.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.ObjectPool.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.ObjectPool.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions.Reference/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Options.ConfigurationExtensions.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.Options.DataAnnotations/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.Options.DataAnnotations.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Extensions.WebEncoders/8.0.0.0": {
        "compile": {
          "Microsoft.Extensions.WebEncoders.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.JSInterop/8.0.0.0": {
        "compile": {
          "Microsoft.JSInterop.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Net.Http.Headers/8.0.0.0": {
        "compile": {
          "Microsoft.Net.Http.Headers.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.VisualBasic.Core/13.0.0.0": {
        "compile": {
          "Microsoft.VisualBasic.Core.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.VisualBasic/10.0.0.0": {
        "compile": {
          "Microsoft.VisualBasic.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Win32.Primitives/8.0.0.0": {
        "compile": {
          "Microsoft.Win32.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "Microsoft.Win32.Registry/8.0.0.0": {
        "compile": {
          "Microsoft.Win32.Registry.dll": {}
        },
        "compileOnly": true
      },
      "mscorlib/4.0.0.0": {
        "compile": {
          "mscorlib.dll": {}
        },
        "compileOnly": true
      },
      "netstandard/2.1.0.0": {
        "compile": {
          "netstandard.dll": {}
        },
        "compileOnly": true
      },
      "System.AppContext/8.0.0.0": {
        "compile": {
          "System.AppContext.dll": {}
        },
        "compileOnly": true
      },
      "System.Buffers.Reference/8.0.0.0": {
        "compile": {
          "System.Buffers.dll": {}
        },
        "compileOnly": true
      },
      "System.Collections.Concurrent/8.0.0.0": {
        "compile": {
          "System.Collections.Concurrent.dll": {}
        },
        "compileOnly": true
      },
      "System.Collections/8.0.0.0": {
        "compile": {
          "System.Collections.dll": {}
        },
        "compileOnly": true
      },
      "System.Collections.Immutable.Reference/8.0.0.0": {
        "compile": {
          "System.Collections.Immutable.dll": {}
        },
        "compileOnly": true
      },
      "System.Collections.NonGeneric/8.0.0.0": {
        "compile": {
          "System.Collections.NonGeneric.dll": {}
        },
        "compileOnly": true
      },
      "System.Collections.Specialized/8.0.0.0": {
        "compile": {
          "System.Collections.Specialized.dll": {}
        },
        "compileOnly": true
      },
      "System.ComponentModel.Annotations/8.0.0.0": {
        "compile": {
          "System.ComponentModel.Annotations.dll": {}
        },
        "compileOnly": true
      },
      "System.ComponentModel.DataAnnotations/4.0.0.0": {
        "compile": {
          "System.ComponentModel.DataAnnotations.dll": {}
        },
        "compileOnly": true
      },
      "System.ComponentModel/8.0.0.0": {
        "compile": {
          "System.ComponentModel.dll": {}
        },
        "compileOnly": true
      },
      "System.ComponentModel.EventBasedAsync/8.0.0.0": {
        "compile": {
          "System.ComponentModel.EventBasedAsync.dll": {}
        },
        "compileOnly": true
      },
      "System.ComponentModel.Primitives/8.0.0.0": {
        "compile": {
          "System.ComponentModel.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.ComponentModel.TypeConverter/8.0.0.0": {
        "compile": {
          "System.ComponentModel.TypeConverter.dll": {}
        },
        "compileOnly": true
      },
      "System.Configuration/4.0.0.0": {
        "compile": {
          "System.Configuration.dll": {}
        },
        "compileOnly": true
      },
      "System.Console/8.0.0.0": {
        "compile": {
          "System.Console.dll": {}
        },
        "compileOnly": true
      },
      "System.Core/4.0.0.0": {
        "compile": {
          "System.Core.dll": {}
        },
        "compileOnly": true
      },
      "System.Data.Common/8.0.0.0": {
        "compile": {
          "System.Data.Common.dll": {}
        },
        "compileOnly": true
      },
      "System.Data.DataSetExtensions/8.0.0.0": {
        "compile": {
          "System.Data.DataSetExtensions.dll": {}
        },
        "compileOnly": true
      },
      "System.Data/4.0.0.0": {
        "compile": {
          "System.Data.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.Contracts/8.0.0.0": {
        "compile": {
          "System.Diagnostics.Contracts.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.Debug/8.0.0.0": {
        "compile": {
          "System.Diagnostics.Debug.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.EventLog.Reference/8.0.0.0": {
        "compile": {
          "System.Diagnostics.EventLog.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.FileVersionInfo/8.0.0.0": {
        "compile": {
          "System.Diagnostics.FileVersionInfo.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.Process/8.0.0.0": {
        "compile": {
          "System.Diagnostics.Process.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.StackTrace/8.0.0.0": {
        "compile": {
          "System.Diagnostics.StackTrace.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.TextWriterTraceListener/8.0.0.0": {
        "compile": {
          "System.Diagnostics.TextWriterTraceListener.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.Tools/8.0.0.0": {
        "compile": {
          "System.Diagnostics.Tools.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.TraceSource/8.0.0.0": {
        "compile": {
          "System.Diagnostics.TraceSource.dll": {}
        },
        "compileOnly": true
      },
      "System.Diagnostics.Tracing/8.0.0.0": {
        "compile": {
          "System.Diagnostics.Tracing.dll": {}
        },
        "compileOnly": true
      },
      "System/4.0.0.0": {
        "compile": {
          "System.dll": {}
        },
        "compileOnly": true
      },
      "System.Drawing/4.0.0.0": {
        "compile": {
          "System.Drawing.dll": {}
        },
        "compileOnly": true
      },
      "System.Drawing.Primitives/8.0.0.0": {
        "compile": {
          "System.Drawing.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.Dynamic.Runtime/8.0.0.0": {
        "compile": {
          "System.Dynamic.Runtime.dll": {}
        },
        "compileOnly": true
      },
      "System.Formats.Asn1/8.0.0.0": {
        "compile": {
          "System.Formats.Asn1.dll": {}
        },
        "compileOnly": true
      },
      "System.Formats.Tar/8.0.0.0": {
        "compile": {
          "System.Formats.Tar.dll": {}
        },
        "compileOnly": true
      },
      "System.Globalization.Calendars/8.0.0.0": {
        "compile": {
          "System.Globalization.Calendars.dll": {}
        },
        "compileOnly": true
      },
      "System.Globalization/8.0.0.0": {
        "compile": {
          "System.Globalization.dll": {}
        },
        "compileOnly": true
      },
      "System.Globalization.Extensions/8.0.0.0": {
        "compile": {
          "System.Globalization.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.Compression.Brotli/8.0.0.0": {
        "compile": {
          "System.IO.Compression.Brotli.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.Compression/8.0.0.0": {
        "compile": {
          "System.IO.Compression.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.Compression.FileSystem/4.0.0.0": {
        "compile": {
          "System.IO.Compression.FileSystem.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.Compression.ZipFile/8.0.0.0": {
        "compile": {
          "System.IO.Compression.ZipFile.dll": {}
        },
        "compileOnly": true
      },
      "System.IO/8.0.0.0": {
        "compile": {
          "System.IO.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.FileSystem.AccessControl/8.0.0.0": {
        "compile": {
          "System.IO.FileSystem.AccessControl.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.FileSystem/8.0.0.0": {
        "compile": {
          "System.IO.FileSystem.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.FileSystem.DriveInfo/8.0.0.0": {
        "compile": {
          "System.IO.FileSystem.DriveInfo.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.FileSystem.Primitives/8.0.0.0": {
        "compile": {
          "System.IO.FileSystem.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.FileSystem.Watcher/8.0.0.0": {
        "compile": {
          "System.IO.FileSystem.Watcher.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.IsolatedStorage/8.0.0.0": {
        "compile": {
          "System.IO.IsolatedStorage.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.MemoryMappedFiles/8.0.0.0": {
        "compile": {
          "System.IO.MemoryMappedFiles.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.Pipes.AccessControl/8.0.0.0": {
        "compile": {
          "System.IO.Pipes.AccessControl.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.Pipes/8.0.0.0": {
        "compile": {
          "System.IO.Pipes.dll": {}
        },
        "compileOnly": true
      },
      "System.IO.UnmanagedMemoryStream/8.0.0.0": {
        "compile": {
          "System.IO.UnmanagedMemoryStream.dll": {}
        },
        "compileOnly": true
      },
      "System.Linq/8.0.0.0": {
        "compile": {
          "System.Linq.dll": {}
        },
        "compileOnly": true
      },
      "System.Linq.Expressions/8.0.0.0": {
        "compile": {
          "System.Linq.Expressions.dll": {}
        },
        "compileOnly": true
      },
      "System.Linq.Parallel/8.0.0.0": {
        "compile": {
          "System.Linq.Parallel.dll": {}
        },
        "compileOnly": true
      },
      "System.Linq.Queryable/8.0.0.0": {
        "compile": {
          "System.Linq.Queryable.dll": {}
        },
        "compileOnly": true
      },
      "System.Memory/8.0.0.0": {
        "compile": {
          "System.Memory.dll": {}
        },
        "compileOnly": true
      },
      "System.Net/4.0.0.0": {
        "compile": {
          "System.Net.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Http/8.0.0.0": {
        "compile": {
          "System.Net.Http.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Http.Json/8.0.0.0": {
        "compile": {
          "System.Net.Http.Json.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.HttpListener/8.0.0.0": {
        "compile": {
          "System.Net.HttpListener.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Mail/8.0.0.0": {
        "compile": {
          "System.Net.Mail.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.NameResolution/8.0.0.0": {
        "compile": {
          "System.Net.NameResolution.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.NetworkInformation/8.0.0.0": {
        "compile": {
          "System.Net.NetworkInformation.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Ping/8.0.0.0": {
        "compile": {
          "System.Net.Ping.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Primitives/8.0.0.0": {
        "compile": {
          "System.Net.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Quic/8.0.0.0": {
        "compile": {
          "System.Net.Quic.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Requests/8.0.0.0": {
        "compile": {
          "System.Net.Requests.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Security/8.0.0.0": {
        "compile": {
          "System.Net.Security.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.ServicePoint/8.0.0.0": {
        "compile": {
          "System.Net.ServicePoint.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.Sockets/8.0.0.0": {
        "compile": {
          "System.Net.Sockets.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.WebClient/8.0.0.0": {
        "compile": {
          "System.Net.WebClient.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.WebHeaderCollection/8.0.0.0": {
        "compile": {
          "System.Net.WebHeaderCollection.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.WebProxy/8.0.0.0": {
        "compile": {
          "System.Net.WebProxy.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.WebSockets.Client/8.0.0.0": {
        "compile": {
          "System.Net.WebSockets.Client.dll": {}
        },
        "compileOnly": true
      },
      "System.Net.WebSockets/8.0.0.0": {
        "compile": {
          "System.Net.WebSockets.dll": {}
        },
        "compileOnly": true
      },
      "System.Numerics/4.0.0.0": {
        "compile": {
          "System.Numerics.dll": {}
        },
        "compileOnly": true
      },
      "System.Numerics.Vectors/8.0.0.0": {
        "compile": {
          "System.Numerics.Vectors.dll": {}
        },
        "compileOnly": true
      },
      "System.ObjectModel/8.0.0.0": {
        "compile": {
          "System.ObjectModel.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.DispatchProxy/8.0.0.0": {
        "compile": {
          "System.Reflection.DispatchProxy.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection/8.0.0.0": {
        "compile": {
          "System.Reflection.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.Emit/8.0.0.0": {
        "compile": {
          "System.Reflection.Emit.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.Emit.ILGeneration/8.0.0.0": {
        "compile": {
          "System.Reflection.Emit.ILGeneration.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.Emit.Lightweight/8.0.0.0": {
        "compile": {
          "System.Reflection.Emit.Lightweight.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.Extensions/8.0.0.0": {
        "compile": {
          "System.Reflection.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.Metadata.Reference/8.0.0.0": {
        "compile": {
          "System.Reflection.Metadata.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.Primitives/8.0.0.0": {
        "compile": {
          "System.Reflection.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.Reflection.TypeExtensions/8.0.0.0": {
        "compile": {
          "System.Reflection.TypeExtensions.dll": {}
        },
        "compileOnly": true
      },
      "System.Resources.Reader/8.0.0.0": {
        "compile": {
          "System.Resources.Reader.dll": {}
        },
        "compileOnly": true
      },
      "System.Resources.ResourceManager/8.0.0.0": {
        "compile": {
          "System.Resources.ResourceManager.dll": {}
        },
        "compileOnly": true
      },
      "System.Resources.Writer/8.0.0.0": {
        "compile": {
          "System.Resources.Writer.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.CompilerServices.Unsafe.Reference/8.0.0.0": {
        "compile": {
          "System.Runtime.CompilerServices.Unsafe.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.CompilerServices.VisualC/8.0.0.0": {
        "compile": {
          "System.Runtime.CompilerServices.VisualC.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime/8.0.0.0": {
        "compile": {
          "System.Runtime.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Extensions/8.0.0.0": {
        "compile": {
          "System.Runtime.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Handles/8.0.0.0": {
        "compile": {
          "System.Runtime.Handles.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.InteropServices/8.0.0.0": {
        "compile": {
          "System.Runtime.InteropServices.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.InteropServices.JavaScript/8.0.0.0": {
        "compile": {
          "System.Runtime.InteropServices.JavaScript.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.InteropServices.RuntimeInformation/8.0.0.0": {
        "compile": {
          "System.Runtime.InteropServices.RuntimeInformation.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Intrinsics/8.0.0.0": {
        "compile": {
          "System.Runtime.Intrinsics.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Loader/8.0.0.0": {
        "compile": {
          "System.Runtime.Loader.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Numerics/8.0.0.0": {
        "compile": {
          "System.Runtime.Numerics.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Serialization/4.0.0.0": {
        "compile": {
          "System.Runtime.Serialization.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Serialization.Formatters/8.0.0.0": {
        "compile": {
          "System.Runtime.Serialization.Formatters.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Serialization.Json/8.0.0.0": {
        "compile": {
          "System.Runtime.Serialization.Json.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Serialization.Primitives/8.0.0.0": {
        "compile": {
          "System.Runtime.Serialization.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.Runtime.Serialization.Xml/8.0.0.0": {
        "compile": {
          "System.Runtime.Serialization.Xml.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.AccessControl/8.0.0.0": {
        "compile": {
          "System.Security.AccessControl.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Claims/8.0.0.0": {
        "compile": {
          "System.Security.Claims.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.Algorithms/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.Algorithms.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.Cng/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.Cng.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.Csp/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.Csp.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.Encoding/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.Encoding.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.OpenSsl/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.OpenSsl.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.Primitives/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.Primitives.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.X509Certificates/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.X509Certificates.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Cryptography.Xml/8.0.0.0": {
        "compile": {
          "System.Security.Cryptography.Xml.dll": {}
        },
        "compileOnly": true
      },
      "System.Security/4.0.0.0": {
        "compile": {
          "System.Security.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Principal/8.0.0.0": {
        "compile": {
          "System.Security.Principal.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.Principal.Windows/8.0.0.0": {
        "compile": {
          "System.Security.Principal.Windows.dll": {}
        },
        "compileOnly": true
      },
      "System.Security.SecureString/8.0.0.0": {
        "compile": {
          "System.Security.SecureString.dll": {}
        },
        "compileOnly": true
      },
      "System.ServiceModel.Web/4.0.0.0": {
        "compile": {
          "System.ServiceModel.Web.dll": {}
        },
        "compileOnly": true
      },
      "System.ServiceProcess/4.0.0.0": {
        "compile": {
          "System.ServiceProcess.dll": {}
        },
        "compileOnly": true
      },
      "System.Text.Encoding.CodePages/8.0.0.0": {
        "compile": {
          "System.Text.Encoding.CodePages.dll": {}
        },
        "compileOnly": true
      },
      "System.Text.Encoding/8.0.0.0": {
        "compile": {
          "System.Text.Encoding.dll": {}
        },
        "compileOnly": true
      },
      "System.Text.Encoding.Extensions/8.0.0.0": {
        "compile": {
          "System.Text.Encoding.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "System.Text.RegularExpressions/8.0.0.0": {
        "compile": {
          "System.Text.RegularExpressions.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Channels.Reference/8.0.0.0": {
        "compile": {
          "System.Threading.Channels.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading/8.0.0.0": {
        "compile": {
          "System.Threading.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Overlapped/8.0.0.0": {
        "compile": {
          "System.Threading.Overlapped.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.RateLimiting/8.0.0.0": {
        "compile": {
          "System.Threading.RateLimiting.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Tasks.Dataflow/8.0.0.0": {
        "compile": {
          "System.Threading.Tasks.Dataflow.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Tasks/8.0.0.0": {
        "compile": {
          "System.Threading.Tasks.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Tasks.Extensions.Reference/8.0.0.0": {
        "compile": {
          "System.Threading.Tasks.Extensions.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Tasks.Parallel/8.0.0.0": {
        "compile": {
          "System.Threading.Tasks.Parallel.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Thread/8.0.0.0": {
        "compile": {
          "System.Threading.Thread.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.ThreadPool/8.0.0.0": {
        "compile": {
          "System.Threading.ThreadPool.dll": {}
        },
        "compileOnly": true
      },
      "System.Threading.Timer/8.0.0.0": {
        "compile": {
          "System.Threading.Timer.dll": {}
        },
        "compileOnly": true
      },
      "System.Transactions/4.0.0.0": {
        "compile": {
          "System.Transactions.dll": {}
        },
        "compileOnly": true
      },
      "System.Transactions.Local/8.0.0.0": {
        "compile": {
          "System.Transactions.Local.dll": {}
        },
        "compileOnly": true
      },
      "System.ValueTuple/8.0.0.0": {
        "compile": {
          "System.ValueTuple.dll": {}
        },
        "compileOnly": true
      },
      "System.Web/4.0.0.0": {
        "compile": {
          "System.Web.dll": {}
        },
        "compileOnly": true
      },
      "System.Web.HttpUtility/8.0.0.0": {
        "compile": {
          "System.Web.HttpUtility.dll": {}
        },
        "compileOnly": true
      },
      "System.Windows/4.0.0.0": {
        "compile": {
          "System.Windows.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml/4.0.0.0": {
        "compile": {
          "System.Xml.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.Linq/4.0.0.0": {
        "compile": {
          "System.Xml.Linq.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.ReaderWriter/8.0.0.0": {
        "compile": {
          "System.Xml.ReaderWriter.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.Serialization/4.0.0.0": {
        "compile": {
          "System.Xml.Serialization.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.XDocument/8.0.0.0": {
        "compile": {
          "System.Xml.XDocument.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.XmlDocument/8.0.0.0": {
        "compile": {
          "System.Xml.XmlDocument.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.XmlSerializer/8.0.0.0": {
        "compile": {
          "System.Xml.XmlSerializer.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.XPath/8.0.0.0": {
        "compile": {
          "System.Xml.XPath.dll": {}
        },
        "compileOnly": true
      },
      "System.Xml.XPath.XDocument/8.0.0.0": {
        "compile": {
          "System.Xml.XPath.XDocument.dll": {}
        },
        "compileOnly": true
      },
      "WindowsBase/4.0.0.0": {
        "compile": {
          "WindowsBase.dll": {}
        },
        "compileOnly": true
      }
    }
  },
  "libraries": {
    "ThoughtGarden.Api.Tests/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "BCrypt.Net-Next/4.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "path": "bcrypt.net-next/4.0.3",
      "hashPath": "bcrypt.net-next.4.0.3.nupkg.sha512"
    },
    "BouncyCastle.Cryptography/2.4.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SwXsAV3sMvAU/Nn31pbjhWurYSjJ+/giI/0n6tCrYoupEK34iIHCuk3STAd9fx8yudM85KkLSVdn951vTng/vQ==",
      "path": "bouncycastle.cryptography/2.4.0",
      "hashPath": "bouncycastle.cryptography.2.4.0.nupkg.sha512"
    },
    "ChilliCream.Nitro.App/28.0.7": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-G6CZod8ForeoVMXigRyAxTTqiiUYcppE85UY/zy4XLMunpF1Ginn5njWK+F+93bw3x5SssPR/fexEpOtQqkVLw==",
      "path": "chillicream.nitro.app/28.0.7",
      "hashPath": "chillicream.nitro.app.28.0.7.nupkg.sha512"
    },
    "coverlet.collector/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tW3lsNS+dAEII6YGUX/VMoJjBS1QvsxqJeqLaJXub08y1FSjasFPtQ4UBUsudE9PNrzLjooClMsPtY2cZLdXpQ==",
      "path": "coverlet.collector/6.0.0",
      "hashPath": "coverlet.collector.6.0.0.nupkg.sha512"
    },
    "Docker.DotNet/3.125.5": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-1tClPIBzz/7HP1XejCdTiRMviVRtS14omyRhHD0R6086woRRBCh61hJeVrpL6CVTnsRui4X9qaI8wO8xOCqKkQ==",
      "path": "docker.dotnet/3.125.5",
      "hashPath": "docker.dotnet.3.125.5.nupkg.sha512"
    },
    "Docker.DotNet.Enhanced/3.128.5": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-RmhcxDmS/zEuWhV9XA5M/xwFinfGe8IRyyNuEu/7EmnLam35dxlIXabi1Kp/MeEWr1fNPjPFrgxKieZfPeOOqw==",
      "path": "docker.dotnet.enhanced/3.128.5",
      "hashPath": "docker.dotnet.enhanced.3.128.5.nupkg.sha512"
    },
    "Docker.DotNet.Enhanced.X509/3.128.5": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ofHQIPpv5HillvBZwk66wEGzHjV/G/771Ta1HjbOtcG8+Lv3bKNH19+fa+hgMzO4sZQCWGDIXygyDralePOKQA==",
      "path": "docker.dotnet.enhanced.x509/3.128.5",
      "hashPath": "docker.dotnet.enhanced.x509.3.128.5.nupkg.sha512"
    },
    "DotNet.Testcontainers/1.6.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-XQU1FfE6+VmG4WL12wcoGc2BQOyIuRmY0APnn7L9cej6KgaUnqlzFCOnfhhCnpS+KLMKMF+brY6OuE5CK68CXg==",
      "path": "dotnet.testcontainers/1.6.0",
      "hashPath": "dotnet.testcontainers.1.6.0.nupkg.sha512"
    },
    "EFCore.NamingConventions/9.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-heKIYzPdEWx+Ba4xuG6jfEssW9rEi7I0lX38eoN7wo7qgg9uw7nn8UEmDQfwGEYPzSDpetCVANnDr5tqt2Asjg==",
      "path": "efcore.namingconventions/9.0.0",
      "hashPath": "efcore.namingconventions.9.0.0.nupkg.sha512"
    },
    "GreenDonut/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-482fPqj2Q7enNUsUDENHjrghwI1GPlUbsGQ425SdFJNSl6hhrWzNjMmwd2x1V6NZJCDWk6TAjJ35NK22T1eNNw==",
      "path": "greendonut/15.1.9",
      "hashPath": "greendonut.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-imB88uJvK18ZxMwmnLW1XRE7nPU0rRsV5pFzpbuzfVDabedsEqOnoGQDSOJUORJ1Dn6ZOFH7PBxWh92MnXP8JA==",
      "path": "greendonut.abstractions/15.1.9",
      "hashPath": "greendonut.abstractions.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-T5mfw9CnQKhl4sa+5RbfBNk9hGTdSiGnUCYGFyXcREfLGMMe7kfOabjhR6T7FB7kZeEWb8GqcipU655jMbTX/w==",
      "path": "greendonut.data/15.1.9",
      "hashPath": "greendonut.data.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-E/a5ms3kV8niLBPB0s7rkVuYV1yRAR6JHasTrMg9a9Yk0U18yUj28wXEKwZY1A3mze2S2vF3kebQDAHCN5bjwg==",
      "path": "greendonut.data.abstractions/15.1.9",
      "hashPath": "greendonut.data.abstractions.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.EntityFramework/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dBEK3bkLoq46n7Tg+Vn77FTXJn7ugp2OWcgo+CeqGTfQa+8MbWY9IohQGjAMFLt4TigTnU0ek63keNACv5vl5g==",
      "path": "greendonut.data.entityframework/15.1.9",
      "hashPath": "greendonut.data.entityframework.15.1.9.nupkg.sha512"
    },
    "GreenDonut.Data.Primitives/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-U7uS+C7lEvlgn48xtSFCHMKSjV0oJXgtlbYe6KPWZSJfhDwFxfUFmD58Tn1BxVpCbUqAjr7TzHZaNelhzIu/8A==",
      "path": "greendonut.data.primitives/15.1.9",
      "hashPath": "greendonut.data.primitives.15.1.9.nupkg.sha512"
    },
    "HotChocolate/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-VTVw4bKfnLYuVU4BPzRLILU+IpN+ixblF4uqQ1aMQgwTueLfQ9cycQqvlunWBisRsrtbhcalyn/ksHYn9zgv3A==",
      "path": "hotchocolate/15.1.9",
      "hashPath": "hotchocolate.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-jQL/Va5z9sksqG1/++Mm4nzwl5I+qppOOnV6z2/SeZ9BseaBxao9njBMd6wBkfMgbOoiOh5FGqWCVna7mdhJcw==",
      "path": "hotchocolate.abstractions/15.1.9",
      "hashPath": "hotchocolate.abstractions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.AspNetCore/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9G60X0PbDZOaA3k8gbIHTS9vwjvBo6jbKwQe8VKr6liEVHNWXYu2kvaxqQbIgd4FuG759Ie1TKLHSwX411ceag==",
      "path": "hotchocolate.aspnetcore/15.1.9",
      "hashPath": "hotchocolate.aspnetcore.15.1.9.nupkg.sha512"
    },
    "HotChocolate.AspNetCore.Authorization/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YQKitD1Yp0QdKPCcggHqGLuDDifJspmFTERyDyNxy4ZEL+emvc3PbTNqHp+/l/t+zRLtssNIpLoja1vXZ0sRqg==",
      "path": "hotchocolate.aspnetcore.authorization/15.1.9",
      "hashPath": "hotchocolate.aspnetcore.authorization.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Authorization/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-wfKg+7F/DNzugwAHA4fd1flBStmfa7aXCo4fvpwFAqqpp3zguoKzzSVLw8VC1Ob0uTUutHWtqVVbBMYP8Cmq9g==",
      "path": "hotchocolate.authorization/15.1.9",
      "hashPath": "hotchocolate.authorization.15.1.9.nupkg.sha512"
    },
    "HotChocolate.CostAnalysis/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-XYseRG+XLHlmE8TnY6/dZCleKxxhHomR0kiriqaQ9Nt2nuJ0l8CTy7ucXK4ZYdikBrz46/KxXj0RwicIJzSN1Q==",
      "path": "hotchocolate.costanalysis/15.1.9",
      "hashPath": "hotchocolate.costanalysis.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Data/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xYiRcqB3MTazm1+taZlnWk6qMDaF47DvyTakB+ERaotqSlHyXkQWuX5vPXyhGCTncu7Wvppv6HkOSdw5x1Q9lA==",
      "path": "hotchocolate.data/15.1.9",
      "hashPath": "hotchocolate.data.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Data.EntityFramework/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-BQ6c+NvWoygeok0ZwNf5Iof6CeFt+FBE2F8LOxCUW3r5t2g792CTG1tiZ7ZfrrAi3qwu3YdOYcLw+6tX+5M6pw==",
      "path": "hotchocolate.data.entityframework/15.1.9",
      "hashPath": "hotchocolate.data.entityframework.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pTf6SyyMWiQLAp8NHcSBb/DYbkzEcVLLhrdh0BkX2VKwL6iknH3lKuQjP25LryIBiBpdB2ddl8ULNBjRBXMmMQ==",
      "path": "hotchocolate.execution/15.1.9",
      "hashPath": "hotchocolate.execution.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution.Abstractions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-x4Tx+n7e45tySRfBISeN8DCt2dcqPrR/JC/1dbnTVkgL5conIybhlfChuLNK36TbGPCNhqYgmow/jyNoorSAdg==",
      "path": "hotchocolate.execution.abstractions/15.1.9",
      "hashPath": "hotchocolate.execution.abstractions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Execution.Projections/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xcASpOZxMWNa8o8OIlduqPGgpNHaxYVp8K8hzWunCpWP2JsR39a/U/YE8J3Yaj3x4KUlBNXiTq914axLY4qkTA==",
      "path": "hotchocolate.execution.projections/15.1.9",
      "hashPath": "hotchocolate.execution.projections.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Features/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-dFNkiW5BeA/B37/WdeZzX3o4mBfGzpQtWM4O7iI7pzlXnInLwNB7nuD1B186eulNnRiQBCSqM0ZcFjbLtUuzag==",
      "path": "hotchocolate.features/15.1.9",
      "hashPath": "hotchocolate.features.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Fetching/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-oH0qn/8CjiOQJmyag3IX/qFPJ4Aoc3Xz3I/MqPETQ40IRkwN0RrXfnFYgyulcF9O0VTGoUFUf4G8sT67CP6ffg==",
      "path": "hotchocolate.fetching/15.1.9",
      "hashPath": "hotchocolate.fetching.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/6uru5EbOPm5lKZ0VRzEVfP11mbKIhaPlQINybWMCXq1LAn21P0DgY/fVCh2AoNeFeITCTO8itqPv4vLntsnQg==",
      "path": "hotchocolate.language/15.1.9",
      "hashPath": "hotchocolate.language.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.SyntaxTree/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Tzuk9ZnpgLZNnxUl79tRYpr2/Gt/W6g8LvwcXkpU+aejGOi6UHxYJtas30U4XQOCPyEd24Waw1WdtVe2AYil3A==",
      "path": "hotchocolate.language.syntaxtree/15.1.9",
      "hashPath": "hotchocolate.language.syntaxtree.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Utf8/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-E/53yeCEZUpjLsxkCunN7AgMZVaIPnvZopqB6oyD+ygZjm7zkpWgssnI621GL0WxAmTbr7ehrHx5EXt8dN/TQw==",
      "path": "hotchocolate.language.utf8/15.1.9",
      "hashPath": "hotchocolate.language.utf8.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Visitors/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9LVHdE/22DwxpTzD+U0hTRik8oD+yqPr0gO9WlOHbqqV4oaI6m07KdkF6F48Z8evmMLtfPWmOjUX2dNI5k9Wgg==",
      "path": "hotchocolate.language.visitors/15.1.9",
      "hashPath": "hotchocolate.language.visitors.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Language.Web/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SMRx4Ix4/EW2Dk3gBgyEbuPPUPkZdCOHIyiNeUzyWYuGOe7T/aj2pTBYUlKLxCJhWeH++BViEGMpx4J7uzKo0A==",
      "path": "hotchocolate.language.web/15.1.9",
      "hashPath": "hotchocolate.language.web.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Primitives/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-41ZTC75xe4cPJ4FcogVBktp5U6tOplwlbmqwLreY/yY7WikghlNAooczGJQFJiutEl0IkCanLLVKeizPY2dJAw==",
      "path": "hotchocolate.primitives/15.1.9",
      "hashPath": "hotchocolate.primitives.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Subscriptions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Vw4UK1J/ck5HBV+prYKaS0fcPKWMynBWML49pQOVDqtRDctoCNNIk0w7G83QWRNmrQwLr70unUeh8jkeTl5U2A==",
      "path": "hotchocolate.subscriptions/15.1.9",
      "hashPath": "hotchocolate.subscriptions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Subscriptions.InMemory/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mbrdirU8+4O6J0zovdxoEQaqHmyeqwKMn2Yk82rOj67+M4Wd69Tl/7OF59bBFG8Plrk+fqnEb/DW5Iv8w6mnWA==",
      "path": "hotchocolate.subscriptions.inmemory/15.1.9",
      "hashPath": "hotchocolate.subscriptions.inmemory.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Transport.Sockets/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ex9DQdgwUa8tdQDl1W2dWCBH24BE8+hgp++8iQKUFC5a00caAe6g9lzAzFCfv2s2OFIb97YzGxvct26qvCF+Aw==",
      "path": "hotchocolate.transport.sockets/15.1.9",
      "hashPath": "hotchocolate.transport.sockets.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4nATgti5zOSsEyRFW0CNmYctQ7kwaINFisPTiQ7TvTD1DD7sOxWxEjEFJtuZcgocK+1OkmAlpx7jUU1+SclU6A==",
      "path": "hotchocolate.types/15.1.9",
      "hashPath": "hotchocolate.types.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.CursorPagination/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-k4EEq9WgIhWOLhkG+pSc7rsnMqE0urhUv1SsbNYx60h+xAw7R39b+kC8sL8Yjjtypw4Sr1xDjE2NIj9dCOm4tw==",
      "path": "hotchocolate.types.cursorpagination/15.1.9",
      "hashPath": "hotchocolate.types.cursorpagination.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uYU38ejpAnAQYMavSxZ2UuFdCKdOLeaDytEGgAmgJS48LgZrlwRI6PAj7tK7tugzgFReMn1zeXUmfgBf2SZtng==",
      "path": "hotchocolate.types.cursorpagination.extensions/15.1.9",
      "hashPath": "hotchocolate.types.cursorpagination.extensions.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Errors/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4stl4t1o97u26oXmYOrtTgznvDCECnOquXctbHbh8kjGYzmwHeCw5Wga09K4mPoi+bdJA47jTgZwUdC8ja8xKw==",
      "path": "hotchocolate.types.errors/15.1.9",
      "hashPath": "hotchocolate.types.errors.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Mutations/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lnODSHF51sjH6MUOs90s0vvROiQx3YGGe0ZJxqg0uZShrdiIygbw6jA1S9mf9VHj4q04WuJIsC5pGf89Rk19iw==",
      "path": "hotchocolate.types.mutations/15.1.9",
      "hashPath": "hotchocolate.types.mutations.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Queries/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EmmTu5NX402uvmCAaiNw623ty4BfxBDrCl1BPVhCLShmoQKfS8WXduImtGZFvjSNN1eJ6hT4IDDjNCtgmCV3Kw==",
      "path": "hotchocolate.types.queries/15.1.9",
      "hashPath": "hotchocolate.types.queries.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Scalars.Upload/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eBAhdK80UpxGKUoQ3+GXivSHTjV3Qf73p5BRRZcQGSfN/05R9UE2TtNfNDNbXsPmEXN7vSYbLtvtyvD+0AWodA==",
      "path": "hotchocolate.types.scalars.upload/15.1.9",
      "hashPath": "hotchocolate.types.scalars.upload.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Types.Shared/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-I34zCMRDoH27Ma0G1xF/WL6j9H9NCGxfkXY6axlIemtH1ZgSYbQCUTw6UdeSZyGbBlwAObxh54c96NsPIlay3Q==",
      "path": "hotchocolate.types.shared/15.1.9",
      "hashPath": "hotchocolate.types.shared.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Utilities/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-z1pmsidrY/2u+26lzqfxP3YlxhLBQyPyyWmbrTRAta6riy4AT5iTRlCrApVZRZJxvrRsrI0Q8rz6k+nsXPn75A==",
      "path": "hotchocolate.utilities/15.1.9",
      "hashPath": "hotchocolate.utilities.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Utilities.DependencyInjection/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ReYfZNdFn9CPDwkWtUrDfziLvr5wqvkV1NPPf3g27VYLskzOGYQ0PJfZgzyj1JfR+FYnjKjcjITenzrRc+0Q4w==",
      "path": "hotchocolate.utilities.dependencyinjection/15.1.9",
      "hashPath": "hotchocolate.utilities.dependencyinjection.15.1.9.nupkg.sha512"
    },
    "HotChocolate.Validation/15.1.9": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-WwkVdB83XzehdRrSbqVsj83/Vnpia0fGNPv60jEbyhdZZUzMRF/g8VW2+JaFFi3PVGk+Ccd11yKbyGAh4au/cw==",
      "path": "hotchocolate.validation/15.1.9",
      "hashPath": "hotchocolate.validation.15.1.9.nupkg.sha512"
    },
    "Humanizer.Core/2.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "path": "humanizer.core/2.14.1",
      "hashPath": "humanizer.core.2.14.1.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-vkGkpvEGGLFHeYhlBqdJiOL/7aYiUmLg2PTfuDDjBDUDb5QTpoeWLNOOoodTlu88J+GluGE+DFF1kd9hxJd5bA==",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.19",
      "hashPath": "microsoft.aspnetcore.authentication.jwtbearer.8.0.19.nupkg.sha512"
    },
    "Microsoft.AspNetCore.Mvc.Testing/8.0.19": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-KeVY5Hp8sghfQd/YrZYiVeTi3bvPQGnucuUWWDlXkTQMm2TumXWdp44roF77D1vwH5eQrgUbNEmPwWNe1S013g==",
      "path": "microsoft.aspnetcore.mvc.testing/8.0.19",
      "hashPath": "microsoft.aspnetcore.mvc.testing.8.0.19.nupkg.sha512"
    },
    "Microsoft.AspNetCore.TestHost/8.0.19": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-iTKZC+re7D1GRYIltORRTONhX9sZ8AbIU2QFP+2eLneACdKoARGla/zuQq7U0jvekd/nNJxZM2rwn98mKnGDPw==",
      "path": "microsoft.aspnetcore.testhost/8.0.19",
      "hashPath": "microsoft.aspnetcore.testhost.8.0.19.nupkg.sha512"
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "hashPath": "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512"
    },
    "Microsoft.Build.Framework/17.8.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "path": "microsoft.build.framework/17.8.3",
      "hashPath": "microsoft.build.framework.17.8.3.nupkg.sha512"
    },
    "Microsoft.Build.Locator/1.7.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "path": "microsoft.build.locator/1.7.8",
      "hashPath": "microsoft.build.locator.1.7.8.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hashPath": "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "hashPath": "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "hashPath": "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512"
    },
    "Microsoft.CodeCoverage/17.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pmTrhfFIoplzFVbhVwUquT+77CbGH+h4/3mBpdmIlYtBi9nAB+kKI6dN3A/nV4DFi3wLLx/BlHIPK+MkbQ6Tpg==",
      "path": "microsoft.codecoverage/17.14.1",
      "hashPath": "microsoft.codecoverage.17.14.1.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bNGdPhN762+BIIO5MFYLjafRqkSS1MqLOc/erd55InvLnFxt9H3N5JNsuag1ZHyBor1VtD42U0CHpgqkWeAYgQ==",
      "path": "microsoft.entityframeworkcore/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-B2yfAIQRRAQ4zvvWqh+HudD+juV3YoLlpXnrog3tU0PM9AFpuq6xo0+mEglN1P43WgdcUiF+65CWBcZe35s15Q==",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2EYStCXt4Hi9p3J3EYMQbItJDtASJd064Kcs8C8hj8Jt5srILrR9qlaL0Ryvk8NrWQoCQvIELsmiuqLEZMLvGA==",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.analyzers.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-02e8OcoumSUAES3VkXrMT9EnNCUKWJoifn5+8fFEbAtRhKL3xg2a/Mj6rsAUGF7tkYFox6oKzJCn0jbm6b8Lbw==",
      "path": "microsoft.entityframeworkcore.design/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.design.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OVhfyxiHxMvYpwQ8Jy3YZi4koy6TK5/Q7C1oq3z6db+HEGuu6x9L1BX5zDIdJxxlRePMyO4D8ORiXj/D7+MUqw==",
      "path": "microsoft.entityframeworkcore.relational/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.relational.9.0.8.nupkg.sha512"
    },
    "Microsoft.EntityFrameworkCore.Tools/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gtjwfJsEB5Mz5qOhdYjm+9KWJEVmVu5xxOgrxHxW6dNmhGfwdNXnNx5Nvdk6IHt0hmn0OK6MREMZEOsjrnSCfA==",
      "path": "microsoft.entityframeworkcore.tools/9.0.8",
      "hashPath": "microsoft.entityframeworkcore.tools.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Ckb5EDBUNJdFWyajfXzUIMRkhf52fHZOQuuZg/oiu8y7zDCVwD0iHhew6MnThjHmevanpxL3f5ci2TtHQEN6bw==",
      "path": "microsoft.extensions.apidescription.server/6.0.5",
      "hashPath": "microsoft.extensions.apidescription.server.6.0.5.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4h7bsVoKoiK+SlPM+euX/ayGnKZhl47pPCidLTiio9xyG+vgVVfcYxcYQgjm0SCrdSxjG0EGIAKF8EFr3G8Ifw==",
      "path": "microsoft.extensions.caching.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.caching.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Caching.Memory/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-grR+oPyj8HVn4DT8CFUUdSw2pZZKS13KjytFe4txpHQliGM1GEDotohmjgvyl3hm7RFB3FRqvbouEX3/1ewp5A==",
      "path": "microsoft.extensions.caching.memory/9.0.8",
      "hashPath": "microsoft.extensions.caching.memory.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0J/9YNXTMWSZP2p2+nvl8p71zpSwokZXZuJW+VjdErkegAnFdO1XlqtA62SJtgVYHdKu3uPxJHcMR/r35HwFBA==",
      "path": "microsoft.extensions.configuration/8.0.0",
      "hashPath": "microsoft.extensions.configuration.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yNou2KM35RvzOh4vUFtl2l33rWPvOCoba+nzEDJ+BgD8aOL/jew4WPCibQvntRfOJ2pJU8ARygSMD+pdjvDHuA==",
      "path": "microsoft.extensions.configuration.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.configuration.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Binder/8.0.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7IQhGK+wjyGrNsPBjJcZwWAr+Wf6D4+TwOptUt77bWtgNkiV8tDEbhFS+dDamtQFZ2X7kWG9m71iZQRj2x3zgQ==",
      "path": "microsoft.extensions.configuration.binder/8.0.2",
      "hashPath": "microsoft.extensions.configuration.binder.8.0.2.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-NZuZMz3Q8Z780nKX3ifV1fE7lS+6pynDHK71OfU4OZ1ItgvDOhyOC7E6z+JMZrAj63zRpwbdldYFk499t3+1dQ==",
      "path": "microsoft.extensions.configuration.commandline/8.0.0",
      "hashPath": "microsoft.extensions.configuration.commandline.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-plvZ0ZIpq+97gdPNNvhwvrEZ92kNml9hd1pe3idMA7svR0PztdzVLkoWLcRFgySYXUJc3kSM3Xw3mNFMo/bxRA==",
      "path": "microsoft.extensions.configuration.environmentvariables/8.0.0",
      "hashPath": "microsoft.extensions.configuration.environmentvariables.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.FileExtensions/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EJzSNO9oaAXnTdtdNO6npPRsIIeZCBSNmdQ091VDO7fBiOtJAAeEq6dtrVXIi3ZyjC5XRSAtVvF8SzcneRHqKQ==",
      "path": "microsoft.extensions.configuration.fileextensions/8.0.1",
      "hashPath": "microsoft.extensions.configuration.fileextensions.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.Json/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-L89DLNuimOghjV3tLx0ArFDwVEJD6+uGB3BMCMX01kaLzXkaXHb2021xOMl2QOxUxbdePKUZsUY7n2UUkycjRg==",
      "path": "microsoft.extensions.configuration.json/8.0.1",
      "hashPath": "microsoft.extensions.configuration.json.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Configuration.UserSecrets/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-7tYqdPPpAK+3jO9d5LTuCK2VxrEdf85Ol4trUr6ds4jclBecadWZ/RyPCbNjfbN5iGTfUnD/h65TOQuqQv2c+A==",
      "path": "microsoft.extensions.configuration.usersecrets/8.0.1",
      "hashPath": "microsoft.extensions.configuration.usersecrets.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-JJjI2Fa+QtZcUyuNjbKn04OjIUX5IgFGFu/Xc+qvzh1rXdZHLcnqqVXhR4093bGirTwacRlHiVg1XYI9xum6QQ==",
      "path": "microsoft.extensions.dependencyinjection/9.0.8",
      "hashPath": "microsoft.extensions.dependencyinjection.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xY3lTjj4+ZYmiKIkyWitddrp1uL5uYiweQjqo4BKBw01ZC4HhcfgLghDpPZcUlppgWAFqFy9SgkiYWOMx365pw==",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.DependencyModel/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-3CW02zNjyqJ2eORo8Zkznpw6+QvK+tYUKZgKuKuAIYdy73TRFvpaqCwYws1k6/lMSJ7ZqABfWn0/wa5bRsIJ4w==",
      "path": "microsoft.extensions.dependencymodel/9.0.8",
      "hashPath": "microsoft.extensions.dependencymodel.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Diagnostics/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-doVPCUUCY7c6LhBsEfiy3W1bvS7Mi6LkfQMS8nlC22jZWNxBv8VO8bdfeyvpYFst6Kxqk7HBC6lytmEoBssvSQ==",
      "path": "microsoft.extensions.diagnostics/8.0.1",
      "hashPath": "microsoft.extensions.diagnostics.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Diagnostics.Abstractions/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-elH2vmwNmsXuKmUeMQ4YW9ldXiF+gSGDgg1vORksob5POnpaI6caj1Hu8zaYbEuibhqCoWg0YRWDazBY3zjBfg==",
      "path": "microsoft.extensions.diagnostics.abstractions/8.0.1",
      "hashPath": "microsoft.extensions.diagnostics.abstractions.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.FileProviders.Abstractions/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZbaMlhJlpisjuWbvXr4LdAst/1XxH3vZ6A0BsgTphZ2L4PGuxRLz7Jr/S7mkAAnOn78Vu0fKhEgNF5JO3zfjqQ==",
      "path": "microsoft.extensions.fileproviders.abstractions/8.0.0",
      "hashPath": "microsoft.extensions.fileproviders.abstractions.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-UboiXxpPUpwulHvIAVE36Knq0VSHaAmfrFkegLyBZeaADuKezJ/AIXYAW8F5GBlGk/VaibN2k/Zn1ca8YAfVdA==",
      "path": "microsoft.extensions.fileproviders.physical/8.0.0",
      "hashPath": "microsoft.extensions.fileproviders.physical.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OK+670i7esqlQrPjdIKRbsyMCe9g5kSLpRRQGSr4Q58AOYEe/hCnfLZprh7viNisSUUQZmMrbbuDaIrP+V1ebQ==",
      "path": "microsoft.extensions.filesystemglobbing/8.0.0",
      "hashPath": "microsoft.extensions.filesystemglobbing.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Hosting/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-bP9EEkHBEfjgYiG8nUaXqMk/ujwJrffOkNPP7onpRMO8R+OUSESSP4xHkCAXgYZ1COP2Q9lXlU5gkMFh20gRuw==",
      "path": "microsoft.extensions.hosting/8.0.1",
      "hashPath": "microsoft.extensions.hosting.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Hosting.Abstractions/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-nHwq9aPBdBPYXPti6wYEEfgXddfBrYC+CQLn+qISiwQq5tpfaqDZSKOJNxoe9rfQxGf1c+2wC/qWFe1QYJPYqw==",
      "path": "microsoft.extensions.hosting.abstractions/8.0.1",
      "hashPath": "microsoft.extensions.hosting.abstractions.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Z/7ze+0iheT7FJeZPqJKARYvyC2bmwu3whbm/48BJjdlGVvgDguoCqJIkI/67NkroTYobd5geai1WheNQvWrgA==",
      "path": "microsoft.extensions.logging/9.0.8",
      "hashPath": "microsoft.extensions.logging.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pYnAffJL7ARD/HCnnPvnFKSIHnTSmWz84WIlT9tPeQ4lHNiu0Az7N/8itihWvcF8sT+VVD5lq8V+ckMzu4SbOw==",
      "path": "microsoft.extensions.logging.abstractions/9.0.8",
      "hashPath": "microsoft.extensions.logging.abstractions.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Configuration/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-QWwTrsgOnJMmn+XUslm8D2H1n3PkP/u/v52FODtyBc/k4W9r3i2vcXXeeX/upnzllJYRRbrzVzT0OclfNJtBJA==",
      "path": "microsoft.extensions.logging.configuration/8.0.1",
      "hashPath": "microsoft.extensions.logging.configuration.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Console/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-uzcg/5U2eLyn5LIKlERkdSxw6VPC1yydnOSQiRRWGBGN3kphq3iL4emORzrojScDmxRhv49gp5BI8U3Dz7y4iA==",
      "path": "microsoft.extensions.logging.console/8.0.1",
      "hashPath": "microsoft.extensions.logging.console.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.Debug/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-B8hqNuYudC2RB+L/DI33uO4rf5by41fZVdcVL2oZj0UyoAZqnwTwYHp1KafoH4nkl1/23piNeybFFASaV2HkFg==",
      "path": "microsoft.extensions.logging.debug/8.0.1",
      "hashPath": "microsoft.extensions.logging.debug.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.EventLog/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZD1m4GXoxcZeDJIq8qePKj+QAWeQNO/OG8skvrOG8RQfxLp9MAKRoliTc27xanoNUzeqvX5HhS/I7c0BvwAYUg==",
      "path": "microsoft.extensions.logging.eventlog/8.0.1",
      "hashPath": "microsoft.extensions.logging.eventlog.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.Logging.EventSource/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YMXMAla6B6sEf/SnfZYTty633Ool3AH7KOw2LOaaEqwSo2piK4f7HMtzyc3CNiipDnq1fsUSuG5Oc7ZzpVy8WQ==",
      "path": "microsoft.extensions.logging.eventsource/8.0.1",
      "hashPath": "microsoft.extensions.logging.eventsource.8.0.1.nupkg.sha512"
    },
    "Microsoft.Extensions.ObjectPool/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4pm+XgxSukskwjzDDfSjG4KNUIOdFF2VaqZZDtTzoyQMOVSnlV6ZM8a9aVu5dg9LVZTB//utzSc8fOi0b0Mb2Q==",
      "path": "microsoft.extensions.objectpool/8.0.0",
      "hashPath": "microsoft.extensions.objectpool.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Options/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OmTaQ0v4gxGQkehpwWIqPoEiwsPuG/u4HUsbOFoWGx4DKET2AXzopnFe/fE608FIhzc/kcg2p8JdyMRCCUzitQ==",
      "path": "microsoft.extensions.options/9.0.8",
      "hashPath": "microsoft.extensions.options.9.0.8.nupkg.sha512"
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-0f4DMRqEd50zQh+UyJc+/HiBsZ3vhAQALgdkcQEalSH1L2isdC7Yj54M3cyo5e+BeO5fcBQ7Dxly8XiBBcvRgw==",
      "path": "microsoft.extensions.options.configurationextensions/8.0.0",
      "hashPath": "microsoft.extensions.options.configurationextensions.8.0.0.nupkg.sha512"
    },
    "Microsoft.Extensions.Primitives/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tizSIOEsIgSNSSh+hKeUVPK7xmTIjR8s+mJWOu1KXV3htvNQiPMFRMO17OdI1y/4ZApdBVk49u/08QGC9yvLug==",
      "path": "microsoft.extensions.primitives/9.0.8",
      "hashPath": "microsoft.extensions.primitives.9.0.8.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Abstractions/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-iwbCpSjD3ehfTwBhtSNEtKPK0ICun6ov7Ibx6ISNA9bfwIyzI2Siwyi9eJFCJBwxowK9xcA1mj+jBWiigeqgcQ==",
      "path": "microsoft.identitymodel.abstractions/8.14.0",
      "hashPath": "microsoft.identitymodel.abstractions.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-4jOpiA4THdtpLyMdAb24dtj7+6GmvhOhxf5XHLYWmPKF8ApEnApal1UnJsKO4HxUWRXDA6C4WQVfYyqsRhpNpQ==",
      "path": "microsoft.identitymodel.jsonwebtokens/8.14.0",
      "hashPath": "microsoft.identitymodel.jsonwebtokens.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Logging/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eqqnemdW38CKZEHS6diA50BV94QICozDZEvSrsvN3SJXUFwVB9gy+/oz76gldP7nZliA16IglXjXTCTdmU/Ejg==",
      "path": "microsoft.identitymodel.logging/8.14.0",
      "hashPath": "microsoft.identitymodel.logging.8.14.0.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "hashPath": "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512"
    },
    "Microsoft.IdentityModel.Tokens/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-lKIZiBiGd36k02TCdMHp1KlNWisyIvQxcYJvIkz7P4gSQ9zi8dgh6S5Grj8NNG7HWYIPfQymGyoZ6JB5d1Lo1g==",
      "path": "microsoft.identitymodel.tokens/8.14.0",
      "hashPath": "microsoft.identitymodel.tokens.8.14.0.nupkg.sha512"
    },
    "Microsoft.NET.Test.Sdk/17.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HJKqKOE+vshXra2aEHpi2TlxYX7Z9VFYkr+E5rwEvHC8eIXiyO+K9kNm8vmNom3e2rA56WqxU+/N9NJlLGXsJQ==",
      "path": "microsoft.net.test.sdk/17.14.1",
      "hashPath": "microsoft.net.test.sdk.17.14.1.nupkg.sha512"
    },
    "Microsoft.OpenApi/1.6.14": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tTaBT8qjk3xINfESyOPE2rIellPvB7qpVqiWiyA/lACVvz+xOGiXhFUfohcx82NLbi5avzLW0lx+s6oAqQijfw==",
      "path": "microsoft.openapi/1.6.14",
      "hashPath": "microsoft.openapi.1.6.14.nupkg.sha512"
    },
    "Microsoft.TestPlatform.ObjectModel/17.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-xTP1W6Mi6SWmuxd3a+jj9G9UoC850WGwZUps1Wah9r1ZxgXhdJfj1QqDLJkFjHDCvN42qDL2Ps5KjQYWUU0zcQ==",
      "path": "microsoft.testplatform.objectmodel/17.14.1",
      "hashPath": "microsoft.testplatform.objectmodel.17.14.1.nupkg.sha512"
    },
    "Microsoft.TestPlatform.TestHost/17.14.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-d78LPzGKkJwsJXAQwsbJJ7LE7D1wB+rAyhHHAaODF+RDSQ0NgMjDFkSA1Djw18VrxO76GlKAjRUhl+H8NL8Z+Q==",
      "path": "microsoft.testplatform.testhost/17.14.1",
      "hashPath": "microsoft.testplatform.testhost.17.14.1.nupkg.sha512"
    },
    "Mono.TextTemplating/3.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "path": "mono.texttemplating/3.0.0",
      "hashPath": "mono.texttemplating.3.0.0.nupkg.sha512"
    },
    "Newtonsoft.Json/13.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "path": "newtonsoft.json/13.0.3",
      "hashPath": "newtonsoft.json.13.0.3.nupkg.sha512"
    },
    "Npgsql/9.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "path": "npgsql/9.0.3",
      "hashPath": "npgsql.9.0.3.nupkg.sha512"
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "hashPath": "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512"
    },
    "SharpZipLib/1.4.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yjj+3zgz8zgXpiiC3ZdF/iyTBbz2fFvMxZFEBPUcwZjIvXOf37Ylm+K58hqMfIBt5JgU/Z2uoUS67JmTLe973A==",
      "path": "sharpziplib/1.4.2",
      "hashPath": "sharpziplib.1.4.2.nupkg.sha512"
    },
    "Snapshooter/1.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Nwto0wB33ZMQ6AuqKLG+55e86fID1XYq/wwZ2zqJBCImy7SOv5AaykCHXCX7/O4faMIWpRkMU3b13If7OxJOJg==",
      "path": "snapshooter/1.0.1",
      "hashPath": "snapshooter.1.0.1.nupkg.sha512"
    },
    "Snapshooter.Xunit/1.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-x3X0GhM/9c718S7aDMpummHhLLS06mnowCjTdHZOcmCqgj1jedUR8HpV05pzXTpmS/nSxwZoiO7zF3xh+uyBOQ==",
      "path": "snapshooter.xunit/1.0.1",
      "hashPath": "snapshooter.xunit.1.0.1.nupkg.sha512"
    },
    "SSH.NET/2024.2.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-9r+4UF2P51lTztpd+H7SJywk7WgmlWB//Cm2o96c6uGVZU5r58ys2/cD9pCgTk0zCdSkfflWL1WtqQ9I4IVO9Q==",
      "path": "ssh.net/2024.2.0",
      "hashPath": "ssh.net.2024.2.0.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-+NB4UYVYN6AhDSjW0IJAd1AGD8V33gemFNLPaxKTtPkHB+HaKAKf9MGAEUPivEWvqeQfcKIw8lJaHq6LHljRuw==",
      "path": "swashbuckle.aspnetcore/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.Swagger/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ovgPTSYX83UrQUWiS5vzDcJ8TEX1MAxBgDFMK45rC24MorHEPQlZAHlaXj/yth4Zf6xcktpUgTEBvffRQVwDKA==",
      "path": "swashbuckle.aspnetcore.swagger/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swagger.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zv4ikn4AT1VYuOsDCpktLq4QDq08e7Utzbir86M5/ZkRaLXbCPF11E1/vTmOiDzRTl0zTZINQU2qLKwTcHgfrA==",
      "path": "swashbuckle.aspnetcore.swaggergen/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swaggergen.6.6.2.nupkg.sha512"
    },
    "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mBBb+/8Hm2Q3Wygag+hu2jj69tZW5psuv0vMRXY07Wy+Rrj40vRP8ZTbKBhs91r45/HXT4aY4z0iSBYx1h6JvA==",
      "path": "swashbuckle.aspnetcore.swaggerui/6.6.2",
      "hashPath": "swashbuckle.aspnetcore.swaggerui.6.6.2.nupkg.sha512"
    },
    "System.Buffers/4.5.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Rw7ijyl1qqRS0YQD/WycNst8hUUMgrMH4FCn1nNm27M4VxchZ1js3fVjQaANHO5f3sN4isvP4a+Met9Y4YomAg==",
      "path": "system.buffers/4.5.1",
      "hashPath": "system.buffers.4.5.1.nupkg.sha512"
    },
    "System.CodeDom/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "path": "system.codedom/6.0.0",
      "hashPath": "system.codedom.6.0.0.nupkg.sha512"
    },
    "System.Collections.Immutable/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-AurL6Y5BA1WotzlEvVaIDpqzpIPvYnnldxru8oXJU2yFxFUy3+pNXjXd1ymO+RA0rq0+590Q8gaz2l3Sr7fmqg==",
      "path": "system.collections.immutable/8.0.0",
      "hashPath": "system.collections.immutable.8.0.0.nupkg.sha512"
    },
    "System.Composition/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "path": "system.composition/7.0.0",
      "hashPath": "system.composition.7.0.0.nupkg.sha512"
    },
    "System.Composition.AttributedModel/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "path": "system.composition.attributedmodel/7.0.0",
      "hashPath": "system.composition.attributedmodel.7.0.0.nupkg.sha512"
    },
    "System.Composition.Convention/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "path": "system.composition.convention/7.0.0",
      "hashPath": "system.composition.convention.7.0.0.nupkg.sha512"
    },
    "System.Composition.Hosting/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "path": "system.composition.hosting/7.0.0",
      "hashPath": "system.composition.hosting.7.0.0.nupkg.sha512"
    },
    "System.Composition.Runtime/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "path": "system.composition.runtime/7.0.0",
      "hashPath": "system.composition.runtime.7.0.0.nupkg.sha512"
    },
    "System.Composition.TypedParts/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "path": "system.composition.typedparts/7.0.0",
      "hashPath": "system.composition.typedparts.7.0.0.nupkg.sha512"
    },
    "System.Diagnostics.DiagnosticSource/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Lj8/a1Hzli1z6jo8H9urc16GxkpVJtJM+W9fmivXMNu7nwzHziGkxn4vO0DFscMbudkEVKSezdDuHk5kgM0X/g==",
      "path": "system.diagnostics.diagnosticsource/9.0.8",
      "hashPath": "system.diagnostics.diagnosticsource.9.0.8.nupkg.sha512"
    },
    "System.Diagnostics.EventLog/8.0.1": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-n1ZP7NM2Gkn/MgD8+eOT5MulMj6wfeQMNS2Pizvq5GHCZfjlFMXV2irQlQmJhwA2VABC57M0auudO89Iu2uRLg==",
      "path": "system.diagnostics.eventlog/8.0.1",
      "hashPath": "system.diagnostics.eventlog.8.0.1.nupkg.sha512"
    },
    "System.IdentityModel.Tokens.Jwt/8.14.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-EYGgN/S+HK7S6F3GaaPLFAfK0UzMrkXFyWCvXpQWFYmZln3dqtbyIO7VuTM/iIIPMzkelg8ZLlBPvMhxj6nOAA==",
      "path": "system.identitymodel.tokens.jwt/8.14.0",
      "hashPath": "system.identitymodel.tokens.jwt.8.14.0.nupkg.sha512"
    },
    "System.IO.Hashing/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ne1843evDugl0md7Fjzy6QjJrzsjh46ZKbhf8GwBXb5f/gw97J4bxMs0NQKifDuThh/f0bZ0e62NPl1jzTuRqA==",
      "path": "system.io.hashing/8.0.0",
      "hashPath": "system.io.hashing.8.0.0.nupkg.sha512"
    },
    "System.IO.Pipelines/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-6vPmJt73mgUo1gzc/OcXlJvClz/2jxZ4TQPRfriVaLoGRH2mye530D9WHJYbFQRNMxF3PWCoeofsFdCyN7fLzA==",
      "path": "system.io.pipelines/9.0.8",
      "hashPath": "system.io.pipelines.9.0.8.nupkg.sha512"
    },
    "System.Reflection.Metadata/8.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-ptvgrFh7PvWI8bcVqG5rsA/weWM09EnthFHR5SCnS6IN+P4mj6rE1lBDC4U8HL9/57htKAqy4KQ3bBj84cfYyQ==",
      "path": "system.reflection.metadata/8.0.0",
      "hashPath": "system.reflection.metadata.8.0.0.nupkg.sha512"
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "hashPath": "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512"
    },
    "System.Text.Encodings.Web/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-W+LotQsM4wBJ4PG7uRkyul4wqL4Fz7R4ty6uXrCNZUhbaHYANgrPaYR2ZpMVpdCjQEJ17Jr1NMN8hv4SHaHY4A==",
      "path": "system.text.encodings.web/9.0.8",
      "hashPath": "system.text.encodings.web.9.0.8.nupkg.sha512"
    },
    "System.Text.Json/9.0.8": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-mIQir9jBqk0V7X0Nw5hzPJZC8DuGdf+2DS3jAVsr6rq5+/VyH5rza0XGcONJUWBrZ+G6BCwNyjWYd9lncBu48A==",
      "path": "system.text.json/9.0.8",
      "hashPath": "system.text.json.9.0.8.nupkg.sha512"
    },
    "System.Threading.Channels/7.0.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "path": "system.threading.channels/7.0.0",
      "hashPath": "system.threading.channels.7.0.0.nupkg.sha512"
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "path": "system.threading.tasks.extensions/4.5.4",
      "hashPath": "system.threading.tasks.extensions.4.5.4.nupkg.sha512"
    },
    "Testcontainers/4.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-Nx4HR4e7XcKV5BVIqYdCpF8PAYFpukZ8QpoBe+sY9FL5q0RDtsy81MElVXIJVO4Wg3Q6j2f39QaF7i+2jf6YjA==",
      "path": "testcontainers/4.7.0",
      "hashPath": "testcontainers.4.7.0.nupkg.sha512"
    },
    "Testcontainers.PostgreSql/4.7.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-RwR8cZIWaZLFYtXtIlwjMbGwUcbdQqcJj6zuUNN+RQooDmkbAlrp5WpPwVkMDSdNTi4BF3wiMnsw62j20OI6FA==",
      "path": "testcontainers.postgresql/4.7.0",
      "hashPath": "testcontainers.postgresql.4.7.0.nupkg.sha512"
    },
    "xunit/2.9.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-TlXQBinK35LpOPKHAqbLY4xlEen9TBafjs0V5KnA4wZsoQLQJiirCR4CbIXvOH8NzkW4YeJKP5P/Bnrodm0h9Q==",
      "path": "xunit/2.9.3",
      "hashPath": "xunit.2.9.3.nupkg.sha512"
    },
    "xunit.abstractions/2.0.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-pot1I4YOxlWjIb5jmwvvQNbTrZ3lJQ+jUGkGjWE3hEFM0l5gOnBWS+H3qsex68s5cO52g+44vpGzhAt+42vwKg==",
      "path": "xunit.abstractions/2.0.3",
      "hashPath": "xunit.abstractions.2.0.3.nupkg.sha512"
    },
    "xunit.analyzers/1.18.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-OtFMHN8yqIcYP9wcVIgJrq01AfTxijjAqVDy/WeQVSyrDC1RzBWeQPztL49DN2syXRah8TYnfvk035s7L95EZQ==",
      "path": "xunit.analyzers/1.18.0",
      "hashPath": "xunit.analyzers.1.18.0.nupkg.sha512"
    },
    "xunit.assert/2.9.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-/Kq28fCE7MjOV42YLVRAJzRF0WmEqsmflm0cfpMjGtzQ2lR5mYVj1/i0Y8uDAOLczkL3/jArrwehfMD0YogMAA==",
      "path": "xunit.assert/2.9.3",
      "hashPath": "xunit.assert.2.9.3.nupkg.sha512"
    },
    "xunit.core/2.9.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-BiAEvqGvyme19wE0wTKdADH+NloYqikiU0mcnmiNyXaF9HyHmE6sr/3DC5vnBkgsWaE6yPyWszKSPSApWdRVeQ==",
      "path": "xunit.core/2.9.3",
      "hashPath": "xunit.core.2.9.3.nupkg.sha512"
    },
    "xunit.extensibility.core/2.9.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-kf3si0YTn2a8J8eZNb+zFpwfoyvIrQ7ivNk5ZYA5yuYk1bEtMe4DxJ2CF/qsRgmEnDr7MnW1mxylBaHTZ4qErA==",
      "path": "xunit.extensibility.core/2.9.3",
      "hashPath": "xunit.extensibility.core.2.9.3.nupkg.sha512"
    },
    "xunit.extensibility.execution/2.9.3": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-yMb6vMESlSrE3Wfj7V6cjQ3S4TXdXpRqYeNEI3zsX31uTsGMJjEw6oD5F5u1cHnMptjhEECnmZSsPxB6ChZHDQ==",
      "path": "xunit.extensibility.execution/2.9.3",
      "hashPath": "xunit.extensibility.execution.2.9.3.nupkg.sha512"
    },
    "xunit.runner.visualstudio/3.1.4": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-5mj99LvCqrq3CNi06xYdyIAXOEh+5b33F2nErCzI5zWiDdLHXiPXEWFSUAF8zlIv0ZWqjZNCwHTQeAPYbF3pCg==",
      "path": "xunit.runner.visualstudio/3.1.4",
      "hashPath": "xunit.runner.visualstudio.3.1.4.nupkg.sha512"
    },
    "Yarp.ReverseProxy/2.3.0": {
      "type": "package",
      "serviceable": true,
      "sha512": "sha512-gxtkN3a+9biu9V9Zd5NaTO6VZWXAnS2mhQ0R/VXmSPoTuiQNZsakKikrKpDtKxrL5nUYzbRsHtl40WNq+ZBKKg==",
      "path": "yarp.reverseproxy/2.3.0",
      "hashPath": "yarp.reverseproxy.2.3.0.nupkg.sha512"
    },
    "ThoughtGarden.Api/1.0.0": {
      "type": "project",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Antiforgery/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authentication.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authentication.BearerToken/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authentication.Cookies/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authentication.Core/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authentication/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authentication.OAuth/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authorization/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Authorization.Policy/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Components.Authorization/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Components/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Components.Endpoints/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Components.Forms/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Components.Server/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Components.Web/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Connections.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.CookiePolicy/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Cors/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Cryptography.Internal/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Cryptography.KeyDerivation/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.DataProtection.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.DataProtection/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.DataProtection.Extensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Diagnostics.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Diagnostics/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Diagnostics.HealthChecks/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.HostFiltering/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Hosting.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Hosting/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Hosting.Server.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Html.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http.Connections.Common/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http.Connections/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http.Extensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http.Features/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Http.Results/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.HttpLogging/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.HttpOverrides/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.HttpsPolicy/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Identity/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Localization/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Localization.Routing/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Metadata/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.ApiExplorer/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Core/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Cors/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.DataAnnotations/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Formatters.Json/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Formatters.Xml/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Localization/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.Razor/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.RazorPages/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.TagHelpers/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Mvc.ViewFeatures/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.OutputCaching/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.RateLimiting/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Razor/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Razor.Runtime/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.RequestDecompression/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.ResponseCaching.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.ResponseCaching/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.ResponseCompression/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Rewrite/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Routing.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Routing/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.HttpSys/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.IIS/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.IISIntegration/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.Kestrel.Core/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.Kestrel/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.Kestrel.Transport.NamedPipes/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.Kestrel.Transport.Quic/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.Session/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.SignalR.Common/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.SignalR.Core/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.SignalR/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.SignalR.Protocols.Json/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.StaticFiles/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.WebSockets/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.AspNetCore.WebUtilities/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.CSharp/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.Binder.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.CommandLine.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.FileExtensions.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.Ini/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.Json.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.KeyPerFile/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.UserSecrets.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Configuration.Xml/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Diagnostics.Abstractions.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Diagnostics.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Diagnostics.HealthChecks.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Diagnostics.HealthChecks/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Features/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.FileProviders.Abstractions.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.FileProviders.Composite/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.FileProviders.Embedded/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.FileProviders.Physical.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.FileSystemGlobbing.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Hosting.Abstractions.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Hosting.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Http/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Identity.Core/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Identity.Stores/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Localization.Abstractions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Localization/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Logging.Configuration.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Logging.Console.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Logging.Debug.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Logging.EventLog.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Logging.EventSource.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Logging.TraceSource/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.ObjectPool.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.Options.DataAnnotations/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Extensions.WebEncoders/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.JSInterop/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Net.Http.Headers/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.VisualBasic.Core/13.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.VisualBasic/10.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Win32.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "Microsoft.Win32.Registry/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "mscorlib/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "netstandard/2.1.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.AppContext/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Buffers.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Collections.Concurrent/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Collections/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Collections.Immutable.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Collections.NonGeneric/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Collections.Specialized/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ComponentModel.Annotations/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ComponentModel.DataAnnotations/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ComponentModel/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ComponentModel.EventBasedAsync/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ComponentModel.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ComponentModel.TypeConverter/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Configuration/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Console/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Core/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Data.Common/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Data.DataSetExtensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Data/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.Contracts/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.Debug/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.EventLog.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.FileVersionInfo/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.Process/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.StackTrace/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.TextWriterTraceListener/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.Tools/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.TraceSource/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Diagnostics.Tracing/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Drawing/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Drawing.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Dynamic.Runtime/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Formats.Asn1/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Formats.Tar/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Globalization.Calendars/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Globalization/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Globalization.Extensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.Compression.Brotli/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.Compression/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.Compression.FileSystem/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.Compression.ZipFile/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.FileSystem.AccessControl/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.FileSystem/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.FileSystem.DriveInfo/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.FileSystem.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.FileSystem.Watcher/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.IsolatedStorage/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.MemoryMappedFiles/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.Pipes.AccessControl/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.Pipes/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.IO.UnmanagedMemoryStream/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Linq/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Linq.Expressions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Linq.Parallel/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Linq.Queryable/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Memory/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Http/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Http.Json/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.HttpListener/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Mail/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.NameResolution/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.NetworkInformation/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Ping/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Quic/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Requests/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Security/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.ServicePoint/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.Sockets/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.WebClient/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.WebHeaderCollection/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.WebProxy/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.WebSockets.Client/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Net.WebSockets/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Numerics/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Numerics.Vectors/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ObjectModel/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.DispatchProxy/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.Emit/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.Emit.ILGeneration/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.Emit.Lightweight/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.Extensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.Metadata.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Reflection.TypeExtensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Resources.Reader/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Resources.ResourceManager/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Resources.Writer/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.CompilerServices.Unsafe.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.CompilerServices.VisualC/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Extensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Handles/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.InteropServices/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.InteropServices.JavaScript/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.InteropServices.RuntimeInformation/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Intrinsics/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Loader/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Numerics/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Serialization/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Serialization.Formatters/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Serialization.Json/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Serialization.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Runtime.Serialization.Xml/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.AccessControl/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Claims/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.Algorithms/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.Cng/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.Csp/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.Encoding/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.OpenSsl/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.Primitives/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.X509Certificates/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Cryptography.Xml/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Principal/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.Principal.Windows/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Security.SecureString/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ServiceModel.Web/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ServiceProcess/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Text.Encoding.CodePages/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Text.Encoding/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Text.Encoding.Extensions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Text.RegularExpressions/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Channels.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Overlapped/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.RateLimiting/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Tasks.Dataflow/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Tasks/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Tasks.Extensions.Reference/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Tasks.Parallel/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Thread/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.ThreadPool/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Threading.Timer/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Transactions/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Transactions.Local/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.ValueTuple/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Web/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Web.HttpUtility/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Windows/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.Linq/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.ReaderWriter/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.Serialization/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.XDocument/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.XmlDocument/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.XmlSerializer/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.XPath/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "System.Xml.XPath.XDocument/8.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    },
    "WindowsBase/4.0.0.0": {
      "type": "referenceassembly",
      "serviceable": false,
      "sha512": ""
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.Tests.deps.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.Tests.runtimeconfig.json =====
{
  "runtimeOptions": {
    "tfm": "net8.0",
    "frameworks": [
      {
        "name": "Microsoft.NETCore.App",
        "version": "8.0.0"
      },
      {
        "name": "Microsoft.AspNetCore.App",
        "version": "8.0.0"
      }
    ],
    "configProperties": {
      "MSTest.EnableParentProcessQuery": true,
      "System.Reflection.NullabilityInfoContext.IsSupported": true,
      "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": false
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\bin\Debug\net8.0\ThoughtGarden.Api.Tests.runtimeconfig.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\Config\SecretsBootstrap.cs =====
using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Hosting;
using System.IO;

namespace ThoughtGarden.Api.Config;

public static class SecretsBootstrap
{
    public static void Apply(WebApplicationBuilder builder)
    {
        // Tests should be hermetic: skip both .env and Doppler when Testing.
        var isTesting = string.Equals(builder.Environment.EnvironmentName, "Testing", StringComparison.OrdinalIgnoreCase);
        if (isTesting) return;

        // 1) Load .env for Development only
        if (builder.Environment.IsDevelopment())
        {
            var envPath = FindUp(builder.Environment.ContentRootPath, ".env");
            if (envPath is not null)
            {
                DotEnv.Load(envPath); // loads into process env vars
            }
        }

        // 2) Layer Doppler on top (dev/prod), if present
        var dopplerToken = Environment.GetEnvironmentVariable("DOPPLER_TOKEN");
        if (!string.IsNullOrWhiteSpace(dopplerToken))
        {
            builder.Configuration.AddDopplerSecrets(); // merges, case-insensitive keys
        }
    }

    private static string? FindUp(string startDir, string file)
    {
        var dir = new DirectoryInfo(startDir);
        while (dir is not null)
        {
            var candidate = System.IO.Path.Combine(dir.FullName, file);
            if (File.Exists(candidate)) return candidate;
            dir = dir.Parent!;
        }
        return null;
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\Config\SecretsBootstrap.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\Factories\ApiFactory.cs =====
using System.Security.Cryptography;
using Microsoft.AspNetCore.Hosting;
using Microsoft.AspNetCore.Mvc.Testing;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Npgsql.EntityFrameworkCore.PostgreSQL; // <-- needed for UseSnakeCaseNamingConvention
using ThoughtGarden.Api.Data;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.Tests.Factories
{
    public class ApiFactory : WebApplicationFactory<Program>
    {
        private readonly string _connectionString;

        // Strong 256-bit key for HMAC-SHA256
        public string JwtKey { get; } = Convert.ToBase64String(RandomNumberGenerator.GetBytes(32));
        public string JwtIssuer { get; } = "TestIssuer";
        public string JwtAudience { get; } = "TestAudience";

        public ApiFactory(string connectionString)
        {
            _connectionString = connectionString;
        }

        protected override void ConfigureWebHost(IWebHostBuilder builder)
        {
            // Force the app into "Testing" so Program.cs skips Doppler/.env and default DbContext.
            builder.UseEnvironment("Testing");

            builder.ConfigureAppConfiguration((context, config) =>
            {
                var primaryId = "test-primary";
                var recoveryId = "test-recovery";
                var primaryB64 = Convert.ToBase64String(RandomNumberGenerator.GetBytes(32));
                var recoveryB64 = Convert.ToBase64String(RandomNumberGenerator.GetBytes(32));

                var dict = new Dictionary<string, string?>
                {
                    // JWT used by tests
                    ["Jwt:Key"] = JwtKey,
                    ["Jwt:Issuer"] = JwtIssuer,
                    ["Jwt:Audience"] = JwtAudience,

                    // DB (factory re-wires DbContext to this Testcontainers connection)
                    ["ConnectionStrings:DefaultConnection"] = _connectionString,

                    // ✅ EXACT shape EnvelopeCrypto expects
                    ["Encryption:ActivePrimaryKeyId"] = primaryId,
                    ["Encryption:ActiveRecoveryKeyId"] = recoveryId,
                    // children under Encryption:Keys with a *value* (no :Key)
                    [$"Encryption:Keys:{primaryId}"] = primaryB64,
                    [$"Encryption:Keys:{recoveryId}"] = recoveryB64,

                    // optional legacy key (safe to keep)
                    ["Encryption:JournalEncryptionKey"] = Convert.ToBase64String(RandomNumberGenerator.GetBytes(32)),
                };

                config.AddInMemoryCollection(dict);
            });

            builder.ConfigureServices(services =>
            {
                // Remove app’s default DbContext registration (if any slipped in).
                var descriptor = services.SingleOrDefault(
                    d => d.ServiceType == typeof(DbContextOptions<ThoughtGardenDbContext>));
                if (descriptor is not null)
                {
                    services.Remove(descriptor);
                }

                // IMPORTANT: mirror production EF options, including snake_case
                services.AddDbContext<ThoughtGardenDbContext>(options =>
                    options
                        .UseNpgsql(_connectionString, npgsql =>
                            npgsql.MigrationsAssembly(typeof(ThoughtGardenDbContext).Assembly.FullName))
                        .UseSnakeCaseNamingConvention()
                );

                // Apply migrations and seed baseline data
                var sp = services.BuildServiceProvider();
                using var scope = sp.CreateScope();
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

                db.Database.Migrate();

                // Seed subscription plan (needed by user)
                if (!db.SubscriptionPlans.Any())
                {
                    db.SubscriptionPlans.Add(new SubscriptionPlan { Name = "Default", Price = 0 });
                    db.SaveChanges();
                }

                // Seed a deterministic user used by some tests
                if (!db.Users.Any(u => u.UserName == "seeduser"))
                {
                    var planId = db.SubscriptionPlans.Select(p => p.Id).First();
                    db.Users.Add(new User
                    {
                        UserName = "seeduser",
                        Email = "seed@test.com",
                        PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                        Role = UserRole.User,
                        SubscriptionPlanId = planId
                    });
                    db.SaveChanges();
                }
            });
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\Factories\ApiFactory.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\EmotionTagGraphQLTests .cs =====
using System.Net.Http.Headers;
using System.Net.Http.Json;
using System.Text.Json;
using Microsoft.Extensions.DependencyInjection;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class EmotionTagGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly HttpClient _client;
        private readonly ApiFactory _factory;

        public EmotionTagGraphQLTests(PostgresFixture fixture)
        {
            _factory = new ApiFactory(fixture.ConnectionString);
            _client = _factory.CreateClient();
        }

        // ---------------------------
        // Helpers
        // ---------------------------
        private (int Id, string UserName, string Email) EnsureUser(string userName, string email, UserRole role = UserRole.User)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var u = db.Users.FirstOrDefault(x => x.UserName == userName);
            if (u == null)
            {
                var planId = db.SubscriptionPlans.First().Id;
                u = new User
                {
                    UserName = userName,
                    Email = email,
                    PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                    Role = role,
                    SubscriptionPlanId = planId
                };
                db.Users.Add(u);
                db.SaveChanges();
            }

            return (u.Id, u.UserName, u.Email);
        }

        private void Authenticate((int Id, string UserName, string Email) user, string role)
        {
            var token = JwtTokenGenerator.GenerateToken(
                _factory.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role);
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        }

        private int GetAnyEmotionTagId()
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            return db.EmotionTags.Select(e => e.Id).First();
        }

        // ---------------------------
        // Query Tests
        // ---------------------------

        [Fact]
        public async Task GetEmotions_Returns_SeededTags()
        {
            var user = EnsureUser("query_emotions", "query_emotions@test.com");
            Authenticate(user, "User");

            var query = new { query = "{ emotions { id name color } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("id", json);
            Assert.Contains("name", json);
        }

        [Fact]
        public async Task GetEmotionById_Returns_One()
        {
            var user = EnsureUser("query_emotion_byid", "query_emotion_byid@test.com");
            Authenticate(user, "User");
            var etid = GetAnyEmotionTagId();

            var query = new { query = $"{{ emotionById(id:{etid}) {{ id name }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("id", json);
            Assert.Contains("name", json);
        }

        [Fact]
        public async Task GetEmotionById_Returns_Empty_For_InvalidId()
        {
            var user = EnsureUser("query_invalid", "query_invalid@test.com");
            Authenticate(user, "User");

            var query = new { query = "{ emotionById(id:9999) { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("\"emotionById\":[]", json);
        }

        // ---------------------------
        // Mutation Tests
        // ---------------------------

        [Fact]
        public async Task AddEmotionTag_Allows_Admin()
        {
            var admin = EnsureUser("admin_addtag", "admin_addtag@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");

            var mutation = new { query = "mutation { addEmotionTag(name:\"Joy\", color:\"#ff0\", icon:\"smile\") { id name color icon } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Joy", json);
        }

        [Fact]
        public async Task AddEmotionTag_Fails_For_User()
        {
            var user = EnsureUser("user_addtag", "user_addtag@test.com", UserRole.User);
            Authenticate(user, "User");

            var mutation = new { query = "mutation { addEmotionTag(name:\"Blocked\", color:\"#000\", icon:\"ban\") { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task AddEmotionTag_Denies_Anonymous()
        {
            var mutation = new { query = "mutation { addEmotionTag(name:\"Anon\", color:\"#123\", icon:\"ghost\") { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdateEmotionTag_Allows_Admin()
        {
            var admin = EnsureUser("admin_updatetag", "admin_updatetag@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");
            var etid = GetAnyEmotionTagId();

            var mutation = new { query = $"mutation {{ updateEmotionTag(id:{etid}, name:\"Updated\", color:\"#abc\", icon:\"edit\") {{ id name color icon }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Updated", json);
        }

        [Fact]
        public async Task UpdateEmotionTag_Returns_Null_When_NotFound()
        {
            var admin = EnsureUser("admin_updatenull", "admin_updatenull@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");

            var mutation = new { query = "mutation { updateEmotionTag(id:9999, name:\"Ghost\") { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdateEmotionTag_Fails_For_User()
        {
            var user = EnsureUser("user_updatetag", "user_updatetag@test.com", UserRole.User);
            Authenticate(user, "User");
            var etid = GetAnyEmotionTagId();

            var mutation = new { query = $"mutation {{ updateEmotionTag(id:{etid}, name:\"Hacker\") {{ id name }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdateEmotionTag_Denies_Anonymous()
        {
            var mutation = new { query = "mutation { updateEmotionTag(id:1, name:\"AnonUpdate\") { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteEmotionTag_Allows_Admin()
        {
            var admin = EnsureUser("admin_deletetag", "admin_deletetag@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");

            var add = new { query = "mutation { addEmotionTag(name:\"TempDel\", color:\"#ccc\", icon:\"trash\") { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            addResp.EnsureSuccessStatusCode();
            var id = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addEmotionTag").GetProperty("id").GetInt32();

            var del = new { query = $"mutation {{ deleteEmotionTag(id:{id}) }}" };
            var delResp = await _client.PostAsJsonAsync("/graphql", del);
            delResp.EnsureSuccessStatusCode();
            var json = await delResp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeleteEmotionTag_Returns_False_When_NotFound()
        {
            var admin = EnsureUser("admin_deletefail", "admin_deletefail@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");

            var mutation = new { query = "mutation { deleteEmotionTag(id:9999) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteEmotionTag_Fails_For_User()
        {
            var user = EnsureUser("user_deletefail", "user_deletefail@test.com", UserRole.User);
            Authenticate(user, "User");
            var etid = GetAnyEmotionTagId();

            var mutation = new { query = $"mutation {{ deleteEmotionTag(id:{etid}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteEmotionTag_Denies_Anonymous()
        {
            var mutation = new { query = "mutation { deleteEmotionTag(id:1) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\EmotionTagGraphQLTests .cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\GardenPlantGraphQLTests.cs =====
using Microsoft.Extensions.DependencyInjection;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;
using Xunit;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class GardenPlantGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly HttpClient _client;
        private readonly ApiFactory _factory;

        public GardenPlantGraphQLTests(PostgresFixture fixture)
        {
            _factory = new ApiFactory(fixture.ConnectionString);
            _client = _factory.CreateClient();
        }

        #region Helpers
        private (int Id, string UserName, string Email) EnsureUser(string userName, string email, UserRole role = UserRole.User)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var u = db.Users.FirstOrDefault(x => x.UserName == userName);
            if (u == null)
            {
                var planId = db.SubscriptionPlans.Select(p => p.Id).First();
                u = new User
                {
                    UserName = userName,
                    Email = email,
                    PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                    Role = role,
                    SubscriptionPlanId = planId
                };
                db.Users.Add(u);
                db.SaveChanges();
            }
            return (u.Id, u.UserName, u.Email);
        }

        private void Authenticate((int Id, string UserName, string Email) user, string role)
        {
            var token = JwtTokenGenerator.GenerateToken(
                _factory.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role);
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        }

        private int CreateEmotionTag(string name = "Happy", string color = "#00FF00")
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var tag = new EmotionTag { Name = name, Color = color };
            db.EmotionTags.Add(tag);
            db.SaveChanges();
            return tag.Id;
        }

        private PlantType CreatePlantType(string name = "Rose")
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var etid = CreateEmotionTag("Joy");
            var pt = new PlantType { Name = name, EmotionTagId = etid };
            db.PlantTypes.Add(pt);
            db.SaveChanges();
            return pt;
        }

        private GardenState CreateGardenState(int userId)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var gs = new GardenState { UserId = userId, SnapshotAt = DateTime.UtcNow, Size = 5 };
            db.GardenStates.Add(gs);
            db.SaveChanges();
            return gs;
        }

        private GardenPlant CreateGardenPlant(int userId, string plantName = "Tulip")
        {
            var gs = CreateGardenState(userId);
            var pt = CreatePlantType(plantName);

            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var gp = new GardenPlant
            {
                GardenStateId = gs.Id,
                PlantTypeId = pt.Id,
                CreatedAt = DateTime.UtcNow,
                UpdatedAt = DateTime.UtcNow,
                IsStored = true
            };
            db.GardenPlants.Add(gp);
            db.SaveChanges();
            return gp;
        }
        #endregion

        #region Queries

        [Fact]
        public async Task GetStoredPlants_Allows_Self()
        {
            var user = EnsureUser("gp_self", "gp_self@test.com");
            Authenticate(user, "User");
            CreateGardenPlant(user.Id);

            var payload = new { query = $"{{ storedPlants(userId:{user.Id}) {{ id gardenStateId plantTypeId isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task GetStoredPlants_Allows_Admin()
        {
            var admin = EnsureUser("gp_admin", "gp_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_user", "gp_user@test.com");
            Authenticate(admin, "Admin");
            var plant = CreateGardenPlant(user.Id);

            var payload = new { query = $"{{ storedPlants(userId:{user.Id}) {{ id gardenStateId plantTypeId isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{plant.Id}", json);
            Assert.Contains("true", json);
        }

        [Fact]
        public async Task GetStoredPlants_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_u1", "gp_u1@test.com");
            var u2 = EnsureUser("gp_u2", "gp_u2@test.com");
            Authenticate(u1, "User");
            CreateGardenPlant(u2.Id);

            var payload = new { query = $"{{ storedPlants(userId:{u2.Id}) {{ id }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetActivePlants_Allows_Self()
        {
            var user = EnsureUser("gp_active_self", "gp_active_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                gp.IsStored = false;
                gp.Order = 1;
                db.GardenPlants.Update(gp);
                db.SaveChanges();
            }

            var payload = new { query = $"{{ activePlants(gardenStateId:{gp.GardenStateId}) {{ id order isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("false", json);
        }

        [Fact]
        public async Task GetActivePlants_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_act_u1", "gp_act_u1@test.com");
            var u2 = EnsureUser("gp_act_u2", "gp_act_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            var payload = new { query = $"{{ activePlants(gardenStateId:{gp.GardenStateId}) {{ id order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json);
        }

        [Fact]
        public async Task GetActivePlants_Returns_Empty_When_None()
        {
            var user = EnsureUser("gp_empty", "gp_empty@test.com");
            Authenticate(user, "User");
            var gs = CreateGardenState(user.Id);

            var payload = new { query = $"{{ activePlants(gardenStateId:{gs.Id}) {{ id order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("[]", json);
        }

        #endregion

        #region Mutations

        #region Create

        [Fact]
        public async Task AddGardenPlant_Allows_Self()
        {
            var user = EnsureUser("gp_add_self", "gp_add_self@test.com");
            Authenticate(user, "User");
            var gs = CreateGardenState(user.Id);
            var pt = CreatePlantType("Lily");

            var payload = new { query = $"mutation {{ addGardenPlant(gardenStateId:{gs.Id}, plantTypeId:{pt.Id}) {{ id gardenStateId plantTypeId }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("gardenStateId", json);
        }

        [Fact]
        public async Task AddGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_add_admin", "gp_add_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_add_target", "gp_add_target@test.com");
            Authenticate(admin, "Admin");
            var gs = CreateGardenState(user.Id);
            var pt = CreatePlantType("AdminPlant");

            var payload = new { query = $"mutation {{ addGardenPlant(gardenStateId:{gs.Id}, plantTypeId:{pt.Id}) {{ id gardenStateId plantTypeId }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{gs.Id}", json);
            Assert.Contains($"{pt.Id}", json);
        }

        [Fact]
        public async Task AddGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_add_u1", "gp_add_u1@test.com");
            var u2 = EnsureUser("gp_add_u2", "gp_add_u2@test.com");
            Authenticate(u1, "User");
            var gs = CreateGardenState(u2.Id);
            var pt = CreatePlantType("Blocked");

            var payload = new { query = $"mutation {{ addGardenPlant(gardenStateId:{gs.Id}, plantTypeId:{pt.Id}) {{ id }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }
        #endregion

        #region Growth

        [Fact]
        public async Task GrowGardenPlant_Allows_Self()
        {
            var user = EnsureUser("gp_grow_self", "gp_grow_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ growGardenPlant(plantId:{gp.Id}) {{ id growthProgress }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("growthProgress", json);
        }

        [Fact]
        public async Task GrowGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_grow_admin", "gp_grow_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_grow_target", "gp_grow_target@test.com");
            Authenticate(admin, "Admin");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ growGardenPlant(plantId:{gp.Id}, growthMultiplier:2) {{ id growthProgress }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("growthProgress", json);
        }

        [Fact]
        public async Task GrowGardenPlant_Returns_Null_When_Not_Found()
        {
            var user = EnsureUser("gp_grow_nf", "gp_grow_nf@test.com");
            Authenticate(user, "User");

            var payload = new { query = "mutation { growGardenPlant(plantId:99999) { id growthProgress } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("\"errors\"", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GrowGardenPlant_Resets_And_Advances_Stage_When_Reaching_100()
        {
            var user = EnsureUser("gp_grow_stage", "gp_grow_stage@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            // Pre-set growth close to 100
            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                gp.GrowthProgress = 95.0;
                gp.Stage = GardenPlant.GrowthStage.Seed;
                db.GardenPlants.Update(gp);
                db.SaveChanges();
            }

            var payload = new { query = $"mutation {{ growGardenPlant(plantId:{gp.Id}) {{ id growthProgress stage }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            // Expect rollover
            Assert.Contains("\"growthProgress\":0", json);
            Assert.Contains("Sprout", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GrowGardenPlant_Applies_GrowthMultiplier()
        {
            var user = EnsureUser("gp_grow_mult", "gp_grow_mult@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ growGardenPlant(plantId:{gp.Id}, growthMultiplier:2) {{ id growthProgress }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            // 5% * 2 = 10
            Assert.Contains("10", json); // JSON serializes doubles as decimals
        }

        [Fact]
        public async Task GrowGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_grow_u1", "gp_grow_u1@test.com");
            var u2 = EnsureUser("gp_grow_u2", "gp_grow_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            var payload = new { query = $"mutation {{ growGardenPlant(plantId:{gp.Id}) {{ id growthProgress }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GrowGardenPlant_Denies_Anonymous()
        {
            var user = EnsureUser("gp_grow_anon", "gp_grow_anon@test.com");
            var gp = CreateGardenPlant(user.Id);

            // Do NOT call Authenticate()

            var payload = new { query = $"mutation {{ growGardenPlant(plantId:{gp.Id}) {{ id growthProgress }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        #endregion

        #region Mature

        [Fact]
        public async Task MatureGardenPlant_Allows_Self_When_Blooming()
        {
            var user = EnsureUser("gp_mature_self", "gp_mature_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            // Pre-set to Bloom
            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                gp.Stage = GardenPlant.GrowthStage.Bloom;
                db.GardenPlants.Update(gp);
                db.SaveChanges();
            }

            var payload = new { query = $"mutation {{ matureGardenPlant(plantId:{gp.Id}) {{ id stage }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Mature", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task MatureGardenPlant_Fails_When_Not_Bloom()
        {
            var user = EnsureUser("gp_mature_fail", "gp_mature_fail@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id); // Starts at Seed

            var payload = new { query = $"mutation {{ matureGardenPlant(plantId:{gp.Id}) {{ id stage }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Only blooming plants can mature", json);
        }

        [Fact]
        public async Task MatureGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_mature_admin", "gp_mature_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_mature_target", "gp_mature_target@test.com");
            Authenticate(admin, "Admin");
            var gp = CreateGardenPlant(user.Id);

            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                gp.Stage = GardenPlant.GrowthStage.Bloom;
                db.GardenPlants.Update(gp);
                db.SaveChanges();
            }

            var payload = new { query = $"mutation {{ matureGardenPlant(plantId:{gp.Id}) {{ id stage }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Mature", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task MatureGardenPlant_Returns_Error_When_Not_Found()
        {
            var user = EnsureUser("gp_mature_nf", "gp_mature_nf@test.com");
            Authenticate(user, "User");

            var payload = new
            {
                query = "mutation { matureGardenPlant(plantId:99999) { id stage } }"
            };

            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode(); // now returns 200 with top-level errors
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("\"errors\"", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }


        [Fact]
        public async Task MatureGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_mature_u1", "gp_mature_u1@test.com");
            var u2 = EnsureUser("gp_mature_u2", "gp_mature_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                gp.Stage = GardenPlant.GrowthStage.Bloom;
                db.GardenPlants.Update(gp);
                db.SaveChanges();
            }

            var payload = new { query = $"mutation {{ matureGardenPlant(plantId:{gp.Id}) {{ id stage }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task MatureGardenPlant_Denies_Anonymous()
        {
            var user = EnsureUser("gp_mature_anon", "gp_mature_anon@test.com");
            var gp = CreateGardenPlant(user.Id);

            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                gp.Stage = GardenPlant.GrowthStage.Bloom;
                db.GardenPlants.Update(gp);
                db.SaveChanges();
            }

            // Do NOT call Authenticate()

            var payload = new { query = $"mutation {{ matureGardenPlant(plantId:{gp.Id}) {{ id stage }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        #endregion

        #region Move

        [Fact]
        public async Task MoveGardenPlant_Allows_Self()
        {
            var user = EnsureUser("gp_move_self", "gp_move_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ moveGardenPlant(plantId:{gp.Id}, newOrder:5) {{ id order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("5", json);
        }

        [Fact]
        public async Task MoveGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_move_admin", "gp_move_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_move_target", "gp_move_target@test.com");
            Authenticate(admin, "Admin");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ moveGardenPlant(plantId:{gp.Id}, newOrder:3) {{ id order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("3", json);
        }

        [Fact]
        public async Task MoveGardenPlant_Returns_Null_When_Not_Found()
        {
            var user = EnsureUser("gp_move_nf", "gp_move_nf@test.com");
            Authenticate(user, "User");

            var payload = new { query = "mutation { moveGardenPlant(plantId:99999, newOrder:1) { id order } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("\"errors\"", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task MoveGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_move_u1", "gp_move_u1@test.com");
            var u2 = EnsureUser("gp_move_u2", "gp_move_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            var payload = new { query = $"mutation {{ moveGardenPlant(plantId:{gp.Id}, newOrder:5) {{ id order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        #endregion

        #region Store

        [Fact]
        public async Task StoreGardenPlant_Allows_Self()
        {
            var user = EnsureUser("gp_store_self", "gp_store_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ storeGardenPlant(plantId:{gp.Id}) {{ id isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task StoreGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_store_admin", "gp_store_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_store_target", "gp_store_target@test.com");
            Authenticate(admin, "Admin");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ storeGardenPlant(plantId:{gp.Id}) {{ id isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task StoreGardenPlant_Returns_Null_When_Not_Found()
        {
            var user = EnsureUser("gp_store_nf", "gp_store_nf@test.com");
            Authenticate(user, "User");

            var payload = new { query = "mutation { storeGardenPlant(plantId:99999) { id isStored } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("\"errors\"", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task StoreGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_store_u1", "gp_store_u1@test.com");
            var u2 = EnsureUser("gp_store_u2", "gp_store_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            var payload = new { query = $"mutation {{ storeGardenPlant(plantId:{gp.Id}) {{ id isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task RestoreGardenPlant_Allows_Self()
        {
            var user = EnsureUser("gp_restore_self", "gp_restore_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ restoreGardenPlant(plantId:{gp.Id}, newOrder:2) {{ id isStored order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("false", json); // not stored anymore
            Assert.Contains("2", json);     // moved to order 2
        }

        [Fact]
        public async Task RestoreGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_restore_admin", "gp_restore_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_restore_target", "gp_restore_target@test.com");
            Authenticate(admin, "Admin");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ restoreGardenPlant(plantId:{gp.Id}, newOrder:4) {{ id isStored order }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("false", json);
            Assert.Contains("4", json);
        }

        [Fact]
        public async Task RestoreGardenPlant_Returns_Null_When_Not_Found()
        {
            var user = EnsureUser("gp_restore_nf", "gp_restore_nf@test.com");
            Authenticate(user, "User");

            var payload = new { query = "mutation { restoreGardenPlant(plantId:99999, newOrder:1) { id isStored } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("\"errors\"", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task RestoreGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_restore_u1", "gp_restore_u1@test.com");
            var u2 = EnsureUser("gp_restore_u2", "gp_restore_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            var payload = new { query = $"mutation {{ restoreGardenPlant(plantId:{gp.Id}, newOrder:2) {{ id isStored }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        #endregion

        #region Delete
        
        [Fact]
        public async Task DeleteGardenPlant_Allows_Self()
        {
            var user = EnsureUser("gp_delete_self", "gp_delete_self@test.com");
            Authenticate(user, "User");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ deleteGardenPlant(id:{gp.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeleteGardenPlant_Allows_Admin()
        {
            var admin = EnsureUser("gp_delete_admin", "gp_delete_admin@test.com", UserRole.Admin);
            var user = EnsureUser("gp_delete_target", "gp_delete_target@test.com");
            Authenticate(admin, "Admin");
            var gp = CreateGardenPlant(user.Id);

            var payload = new { query = $"mutation {{ deleteGardenPlant(id:{gp.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeleteGardenPlant_Returns_False_When_Not_Found()
        {
            var user = EnsureUser("gp_delete_nf", "gp_delete_nf@test.com");
            Authenticate(user, "User");

            var payload = new { query = "mutation { deleteGardenPlant(id:99999) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("\"errors\"", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteGardenPlant_Denies_Other_User()
        {
            var u1 = EnsureUser("gp_delete_u1", "gp_delete_u1@test.com");
            var u2 = EnsureUser("gp_delete_u2", "gp_delete_u2@test.com");
            Authenticate(u1, "User");
            var gp = CreateGardenPlant(u2.Id);

            var payload = new { query = $"mutation {{ deleteGardenPlant(id:{gp.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        #endregion

        #endregion
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\GardenPlantGraphQLTests.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\GradenStateGraphQLTests.cs =====
using Microsoft.Extensions.DependencyInjection;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;
using Xunit;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class GardenStateGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly HttpClient _client;
        private readonly ApiFactory _factory;

        public GardenStateGraphQLTests(PostgresFixture fixture)
        {
            _factory = new ApiFactory(fixture.ConnectionString);
            _client = _factory.CreateClient();
        }

        // ---------------------------
        // Helpers
        // ---------------------------
        private (int Id, string UserName, string Email) EnsureUser(
            string userName = "seeduser",
            string email = "seed@test.com",
            UserRole role = UserRole.User)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var u = db.Users.FirstOrDefault(x => x.UserName == userName);
            if (u == null)
            {
                var planId = db.SubscriptionPlans.Select(p => p.Id).First();
                u = new User
                {
                    UserName = userName,
                    Email = email,
                    PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                    Role = role,
                    SubscriptionPlanId = planId
                };
                db.Users.Add(u);
                db.SaveChanges();
            }
            return (u.Id, u.UserName, u.Email);
        }

        private void Authenticate((int Id, string UserName, string Email) user, string role)
        {
            var token = JwtTokenGenerator.GenerateToken(
                _factory.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role);
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        }

        private GardenState CreateGardenState(int userId, int size = 5)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var gs = new GardenState
            {
                UserId = userId,
                SnapshotAt = DateTime.UtcNow,
                Size = size
            };
            db.GardenStates.Add(gs);
            db.SaveChanges();
            return gs;
        }

        // ---------------------------
        // Query Tests
        // ---------------------------
        [Fact]
        public async Task GetGardens_Allows_Self()
        {
            var user = EnsureUser("garden_self", "garden_self@test.com");
            Authenticate(user, "User");
            CreateGardenState(user.Id);

            var payload = new { query = $"{{ gardens(userId:{user.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{user.Id}", json);
        }

        [Fact]
        public async Task GetGardens_Allows_Admin()
        {
            var admin = EnsureUser("garden_admin", "garden_admin@test.com", UserRole.Admin);
            var other = EnsureUser("garden_other", "garden_other@test.com");
            Authenticate(admin, "Admin");
            CreateGardenState(other.Id);

            var payload = new { query = $"{{ gardens(userId:{other.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{other.Id}", json);
        }

        [Fact]
        public async Task GetGardens_Denies_Other_User()
        {
            var u1 = EnsureUser("garden_u1", "garden_u1@test.com");
            var u2 = EnsureUser("garden_u2", "garden_u2@test.com");
            Authenticate(u1, "User");
            CreateGardenState(u2.Id);

            var payload = new { query = $"{{ gardens(userId:{u2.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetGardens_Returns_Empty_When_None()
        {
            var user = EnsureUser("garden_none", "garden_none@test.com");
            Authenticate(user, "User");

            var payload = new { query = $"{{ gardens(userId:{user.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("[]", json);
        }

        [Fact]
        public async Task GetGardenById_Allows_Self()
        {
            var user = EnsureUser("garden_byid_self", "garden_byid_self@test.com");
            Authenticate(user, "User");
            var gs = CreateGardenState(user.Id);

            var payload = new { query = $"{{ gardenById(id:{gs.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{gs.Id}", json);
        }

        [Fact]
        public async Task GetGardenById_Allows_Admin()
        {
            var admin = EnsureUser("garden_byid_admin", "garden_byid_admin@test.com", UserRole.Admin);
            var other = EnsureUser("garden_byid_other", "garden_byid_other@test.com");
            Authenticate(admin, "Admin");
            var gs = CreateGardenState(other.Id);

            var payload = new { query = $"{{ gardenById(id:{gs.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{gs.Id}", json);
        }

        [Fact]
        public async Task GetGardenById_Denies_Other_User()
        {
            var u1 = EnsureUser("garden_byid_u1", "garden_byid_u1@test.com");
            var u2 = EnsureUser("garden_byid_u2", "garden_byid_u2@test.com");
            Authenticate(u1, "User");
            var gs = CreateGardenState(u2.Id);

            var payload = new { query = $"{{ gardenById(id:{gs.Id}) {{ id userId size }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            // Expect an authorization error in the response
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetGardenById_Returns_Empty_When_Not_Found()
        {
            var admin = EnsureUser("garden_byid_nf", "garden_byid_nf@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");

            var payload = new { query = "{ gardenById(id:99999) { id userId size } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            // GraphQL now returns null instead of []
            Assert.Contains("\"gardenById\":null", json);
        }


        // ---------------------------
        // Mutation Tests
        // ---------------------------
        [Fact]
        public async Task CreateGardenState_Allows_Self()
        {
            var user = EnsureUser("garden_create", "garden_create@test.com");
            Authenticate(user, "User");

            var payload = new { query = "mutation { createGardenState { id userId size } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{user.Id}", json);
        }

        [Fact]
        public async Task CreateGardenState_Allows_Admin()
        {
            var admin = EnsureUser("garden_create_admin", "garden_create_admin@test.com", UserRole.Admin);
            Authenticate(admin, "Admin");

            var payload = new { query = "mutation { createGardenState { id userId size } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains($"{admin.Id}", json);
        }

        [Fact]
        public async Task CreateGardenState_Denies_Anonymous()
        {
            var payload = new { query = "mutation { createGardenState { id userId size } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\GradenStateGraphQLTests.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\JournalEntryGraphQLTests.cs =====
using System.Net.Http.Headers;
using System.Net.Http.Json;
using System.Text.Json;
using Microsoft.Extensions.DependencyInjection;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;
using Xunit;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class JournalEntryGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly HttpClient _client;
        private readonly ApiFactory _factory;

        public JournalEntryGraphQLTests(PostgresFixture fixture)
        {
            _factory = new ApiFactory(fixture.ConnectionString);
            _client = _factory.CreateClient();
        }

        // ---------------------------
        // Helpers
        // ---------------------------
        private (int Id, string UserName, string Email) CreateAndAuthenticateUser(string userName, string email, string role = "User")
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var planId = db.SubscriptionPlans.First().Id;
            var user = new User
            {
                UserName = userName,
                Email = email,
                PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                Role = role == "Admin" ? UserRole.Admin : UserRole.User,
                SubscriptionPlanId = planId
            };
            db.Users.Add(user);
            db.SaveChanges();

            var token = JwtTokenGenerator.GenerateToken(
                _factory.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role);
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            return (user.Id, user.UserName, user.Email);
        }

        private static string? GetTextForId(string json, int id)
        {
            using var doc = JsonDocument.Parse(json);
            if (!doc.RootElement.TryGetProperty("data", out var data)) return null;
            if (!data.TryGetProperty("journalEntries", out var arr)) return null;

            foreach (var it in arr.EnumerateArray())
            {
                if (it.TryGetProperty("id", out var idProp) && idProp.GetInt32() == id)
                {
                    return it.TryGetProperty("text", out var textProp) ? textProp.GetString() : null;
                }
            }
            return null;
        }

        // ---------------------------
        // Query Tests
        // ---------------------------
        [Fact]
        public async Task GetJournalEntries_Returns_EmptyList_For_NewUser()
        {
            CreateAndAuthenticateUser("nouser_entries", "nouser_entries@test.com");

            var query = new { query = "{ journalEntries { id text moodId } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("journalEntries", json);
            // empty list -> no plaintext content
            Assert.DoesNotContain("text\":\"", json);
        }

        [Fact]
        public async Task GetJournalEntries_Shows_Only_OwnEntries()
        {
            var userA = CreateAndAuthenticateUser("owner_entries", "owner_entries@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"Mine\", moodId:1, secondaryEmotions:[]) { id } }" };
            await _client.PostAsJsonAsync("/graphql", add);

            CreateAndAuthenticateUser("other_entries", "other_entries@test.com");
            var query = new { query = "{ journalEntries { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.DoesNotContain("Mine", json);
        }

        [Fact]
        public async Task GetJournalEntries_Admin_Sees_AllEntries()
        {
            // Admin can list all entries but text must be "[encrypted]" for others.
            CreateAndAuthenticateUser("user_entries", "user_entries@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"UserEntry\", moodId:1, secondaryEmotions:[]) { id } }" };
            await _client.PostAsJsonAsync("/graphql", add);

            CreateAndAuthenticateUser("admin_entries", "admin_entries@test.com", role: "Admin");
            var query = new { query = "{ journalEntries { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.DoesNotContain("UserEntry", json); // no plaintext of others
            Assert.Contains("\"text\":\"[encrypted]\"", json);
            Assert.DoesNotContain("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetJournalEntries_Admin_Sees_Own_Decrypted_In_List()
        {
            // Seed OTHER user's entry
            CreateAndAuthenticateUser("list_other_u", "list_other_u@test.com");
            var addOther = new { query = "mutation { addJournalEntry(text:\"OtherListText\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addOtherResp = await _client.PostAsJsonAsync("/graphql", addOther);
            var otherId = JsonDocument.Parse(await addOtherResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            // Switch to Admin and add Admin-owned entry
            CreateAndAuthenticateUser("list_admin_u", "list_admin_u@test.com", role: "Admin");
            var addAdmin = new { query = "mutation { addJournalEntry(text:\"AdminOwnListText\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addAdminResp = await _client.PostAsJsonAsync("/graphql", addAdmin);
            var adminOwnId = JsonDocument.Parse(await addAdminResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            // Admin queries list
            var query = new { query = "{ journalEntries { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            // Admin sees own decrypted
            Assert.Equal("AdminOwnListText", GetTextForId(json, adminOwnId));
            // And no plaintext of others
            Assert.DoesNotContain("OtherListText", json);
        }

        [Fact]
        public async Task GetJournalEntries_Admin_Sees_Others_Masked_In_List()
        {
            // OTHER user's entry
            CreateAndAuthenticateUser("mask_other_u", "mask_other_u@test.com");
            var addOther = new { query = "mutation { addJournalEntry(text:\"OtherMaskedText\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addOtherResp = await _client.PostAsJsonAsync("/graphql", addOther);
            var otherId = JsonDocument.Parse(await addOtherResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            // Switch to Admin and list
            CreateAndAuthenticateUser("mask_admin_u", "mask_admin_u@test.com", role: "Admin");
            var list = new { query = "{ journalEntries { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", list);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Equal("[encrypted]", GetTextForId(json, otherId));
            Assert.DoesNotContain("OtherMaskedText", json);
        }

        [Fact]
        public async Task GetJournalEntryById_Allows_Self()
        {
            var user = CreateAndAuthenticateUser("entry_self", "entry_self@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"SelfCanSee\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            var query = new { query = $"{{ journalEntryById(id:{entryId}) {{ id text }}}}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("SelfCanSee", json);
        }

        [Fact]
        public async Task GetJournalEntryById_Fails_For_NonOwner()
        {
            CreateAndAuthenticateUser("entry_owner", "entry_owner@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"Private\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            CreateAndAuthenticateUser("other_user", "other_user@test.com");
            var query = new { query = $"{{ journalEntryById(id:{entryId}) {{ id text }}}}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("not authorized", json, StringComparison.OrdinalIgnoreCase);
            Assert.DoesNotContain("Private", json);
        }

        [Fact]
        public async Task GetJournalEntryById_Admin_CanAccess()
        {
            // Admin can fetch by id but must receive "[encrypted]" for others' text.
            CreateAndAuthenticateUser("entry_user", "entry_user@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"AdminCanSee\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            CreateAndAuthenticateUser("admin", "admin@test.com", role: "Admin");
            var query = new { query = $"{{ journalEntryById(id:{entryId}) {{ id text }}}}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.DoesNotContain("AdminCanSee", json); // no plaintext of other's entry
            Assert.Contains("\"text\":\"[encrypted]\"", json);
            Assert.DoesNotContain("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Anonymous access tests
        // ---------------------------
        [Fact]
        public async Task GetJournalEntries_Denies_Anonymous()
        {
            _client.DefaultRequestHeaders.Authorization = null;

            var payload = new { query = "{ journalEntries { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetJournalEntryById_Denies_Anonymous()
        {
            // Seed an entry as any user
            CreateAndAuthenticateUser("anon_seed_u", "anon_seed_u@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"SeedAnon\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            _client.DefaultRequestHeaders.Authorization = null;

            var query = new { query = $"{{ journalEntryById(id:{entryId}) {{ id text }}}}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Mutation Tests
        // ---------------------------
        [Fact]
        public async Task AddJournalEntry_With_SecondaryEmotions()
        {
            CreateAndAuthenticateUser("sec_emotions", "sec_emotions@test.com");
            var mutation = new
            {
                query = @"
            mutation AddEntry($text:String!, $moodId:Int!, $secs:[SecondaryEmotionInput!]) {
              addJournalEntry(text:$text, moodId:$moodId, secondaryEmotions:$secs) {
                id text
              }
            }",
                variables = new
                {
                    text = "Mood check",
                    moodId = 1,
                    secs = new[] { new { emotionId = 1, intensity = 3 } }
                }
            };

            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            // Expect plaintext in GraphQL response
            Assert.Contains("Mood check", json);
        }

        [Fact]
        public async Task AddJournalEntry_Denies_Anonymous()
        {
            var payload = new { query = "mutation { addJournalEntry(text:\"Anon\", moodId:1, secondaryEmotions:[]) { id } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdateJournalEntry_Updates_SecondaryEmotions()
        {
            CreateAndAuthenticateUser("update_sec", "update_sec@test.com");
            var add = new
            {
                query = @"
                    mutation AddEntry($text:String!, $moodId:Int!, $secs:[SecondaryEmotionInput!]) {
                      addJournalEntry(text:$text, moodId:$moodId, secondaryEmotions:$secs) { id }
                    }",
                variables = new
                {
                    text = "Temp",
                    moodId = 1,
                    secs = new[] { new { emotionId = 1, intensity = 2 } }
                }
            };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            var update = new
            {
                query = @"
                    mutation UpdateEntry($id:Int!, $text:String!, $moodId:Int!, $secs:[SecondaryEmotionInput!]) {
                      updateJournalEntry(id:$id, text:$text, moodId:$moodId, secondaryEmotions:$secs) { id text }
                    }",
                variables = new
                {
                    id = entryId,
                    text = "Changed",
                    moodId = 2,
                    secs = new[] { new { emotionId = 2, intensity = 4 } }
                }
            };

            var updateResp = await _client.PostAsJsonAsync("/graphql", update);
            updateResp.EnsureSuccessStatusCode();
            var updateJson = await updateResp.Content.ReadAsStringAsync();

            Assert.Contains("Changed", updateJson);
        }

        [Fact]
        public async Task UpdateJournalEntry_Fails_If_NotFound()
        {
            CreateAndAuthenticateUser("noentry_user", "noentry_user@test.com");

            var update = new { query = "mutation { updateJournalEntry(id:9999, text:\"nope\", secondaryEmotions:[]) { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", update);
            var json = await resp.Content.ReadAsStringAsync();

            // Resolver returns: "Entry not found"
            Assert.Contains("Entry not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdateJournalEntry_Denies_Anonymous()
        {
            var payload = new { query = "mutation { updateJournalEntry(id:1, text:\"AnonUpdate\") { id text } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteJournalEntry_Allows_Owner()
        {
            var user = CreateAndAuthenticateUser("owner_delete", "owner_delete@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"DeleteMe\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            var del = new { query = $"mutation {{ deleteJournalEntry(id:{entryId}) }}" };
            var delResp = await _client.PostAsJsonAsync("/graphql", del);
            delResp.EnsureSuccessStatusCode();
            var json = await delResp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeleteJournalEntry_Fails_For_NonOwner()
        {
            CreateAndAuthenticateUser("owner_del", "owner_del@test.com");
            var add = new { query = "mutation { addJournalEntry(text:\"Delete target\", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            var entryId = JsonDocument.Parse(await addResp.Content.ReadAsStringAsync())
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            CreateAndAuthenticateUser("intruder_del", "intruder_del@test.com");
            var del = new { query = $"mutation {{ deleteJournalEntry(id:{entryId}) }}" };
            var delResp = await _client.PostAsJsonAsync("/graphql", del);
            var json = await delResp.Content.ReadAsStringAsync();

            Assert.Contains("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteJournalEntry_Fails_If_NotFound()
        {
            CreateAndAuthenticateUser("delete_fail", "delete_fail@test.com");

            var mutation = new { query = "mutation { deleteJournalEntry(id:9999) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", mutation);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Entry not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteJournalEntry_Denies_Anonymous()
        {
            var payload = new { query = "mutation { deleteJournalEntry(id:1) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Encryption Tests
        // ---------------------------
        [Fact]
        public async Task JournalEntry_IsEncryptedInDatabase_ButDecryptedInGraphQL()
        {
            var user = CreateAndAuthenticateUser("enc_test", "enc_test@test.com");

            // Add entry
            var add = new { query = "mutation { addJournalEntry(text:\"SensitiveNote\", moodId:1, secondaryEmotions:[]) { id text } }" };
            var addResp = await _client.PostAsJsonAsync("/graphql", add);
            addResp.EnsureSuccessStatusCode();
            var addJson = await addResp.Content.ReadAsStringAsync();

            // GraphQL shows plaintext
            Assert.Contains("SensitiveNote", addJson);

            var entryId = JsonDocument.Parse(addJson)
                .RootElement.GetProperty("data").GetProperty("addJournalEntry").GetProperty("id").GetInt32();

            // DB contains ciphertext & envelope fields
            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                var dbEntry = db.JournalEntries.First(e => e.Id == entryId);

                Assert.NotEqual("SensitiveNote", dbEntry.Text);
                Assert.DoesNotContain("SensitiveNote", dbEntry.Text);
                Assert.False(string.IsNullOrWhiteSpace(dbEntry.DataNonce));
                Assert.False(string.IsNullOrWhiteSpace(dbEntry.DataTag));
                Assert.False(string.IsNullOrWhiteSpace(dbEntry.WrappedKeys));
            }

            // GraphQL decrypts again
            var query = new { query = $"{{ journalEntryById(id:{entryId}) {{ id text }}}}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            resp.EnsureSuccessStatusCode();
            var queryJson = await resp.Content.ReadAsStringAsync();

            Assert.Contains("SensitiveNote", queryJson);
        }

        [Fact]
        public async Task JournalEntry_WithoutEnvelope_FailsGracefully()
        {
            // Trigger DecryptionFailedException by providing an empty WrappedKeys map.
            var user = CreateAndAuthenticateUser("bad_env_user", "bad_env_user@test.com");
            int badEntryId;

            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                var entry = new JournalEntry
                {
                    UserId = user.Id,
                    Text = "CorruptedCiphertext",
                    DataNonce = "AAA=",
                    DataTag = "AAA=",
                    WrappedKeys = "{}",   // <- forces DecryptionFailedException in env.Decrypt
                    MoodId = 1,
                    CreatedAt = DateTime.UtcNow,
                    UpdatedAt = DateTime.UtcNow,
                    IsDeleted = false
                };
                db.JournalEntries.Add(entry);
                db.SaveChanges();
                badEntryId = entry.Id;
            }

            var query = new { query = $"{{ journalEntryById(id:{badEntryId}) {{ id text }}}}" };
            var resp = await _client.PostAsJsonAsync("/graphql", query);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("errors", json, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("Unable to decrypt journal entry.", json);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\JournalEntryGraphQLTests.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\MaintenanceMutationsGraphQLTests .cs =====
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.FileProviders;
using Microsoft.Extensions.Hosting;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using System.Text.Json;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.GraphQL.Mutations;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class MaintenanceMutationsGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly ApiFactory _factoryDev;
        private readonly HttpClient _clientDev;

        public MaintenanceMutationsGraphQLTests(PostgresFixture fixture)
        {
            _factoryDev = new ApiFactory(fixture.ConnectionString);
            _clientDev = _factoryDev.CreateClient();
        }

        // ---------------------------
        // Helpers
        // ---------------------------
        private (int Id, string UserName, string Email) CreateAndAuthenticateUser(string userName, string email, string role = "Admin")
        {
            using var scope = _factoryDev.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var planId = db.SubscriptionPlans.First().Id;

            var user = new User
            {
                UserName = userName,
                Email = email,
                PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                Role = role == "Admin" ? UserRole.Admin : UserRole.User,
                SubscriptionPlanId = planId
            };
            db.Users.Add(user);
            db.SaveChanges();

            var token = JwtTokenGenerator.GenerateToken(_factoryDev.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role);

            _clientDev.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
            return (user.Id, user.UserName, user.Email);
        }

        private int SeedUser()
        {
            using var scope = _factoryDev.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var planId = db.SubscriptionPlans.First().Id;
            var user = new User
            {
                UserName = "seed_" + Guid.NewGuid().ToString("N").Substring(0, 6),
                Email = "seed@test.com",
                PasswordHash = PasswordHelper.HashPassword("P@ssw0rd!"),
                Role = UserRole.User,
                SubscriptionPlanId = planId
            };
            db.Users.Add(user);
            db.SaveChanges();
            return user.Id;
        }

        private void InsertRow(int userId, string wrappedKeysJson, string nonce = "AAA=", string tag = "AAA=")
        {
            using var scope = _factoryDev.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            db.JournalEntries.Add(new JournalEntry
            {
                UserId = userId,
                Text = "cipher",
                DataNonce = nonce,
                DataTag = tag,
                WrappedKeys = wrappedKeysJson,
                AlgVersion = "gcm.v1",
                CreatedAt = DateTime.UtcNow,
                UpdatedAt = DateTime.UtcNow,
                IsDeleted = false,
                MoodId = 1
            });
            db.SaveChanges();
        }

        // ---------------------------
        // Authorization (HTTP)
        // ---------------------------

        [Fact]
        public async Task RewrapAndPrunePrimary_Denies_Anonymous()
        {
            _clientDev.DefaultRequestHeaders.Authorization = null;
            var payload = new
            {
                query = @"mutation {
                  rewrapAndPrunePrimary(oldPrimaryId:""k_old"", newPrimaryId:""k_new"") {
                    updatedRows
                  }
                }"
            };
            var resp = await _clientDev.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task ReencryptAfterCompromise_Denies_Anonymous()
        {
            _clientDev.DefaultRequestHeaders.Authorization = null;
            var payload = new { query = @"mutation { reencryptAfterCompromise(compromisedKeyId:""k_old"") }" };
            var resp = await _clientDev.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Env guard (resolver-level; no second server needed)
        // ---------------------------

        [Fact]
        public async Task RewrapAndPrunePrimary_Throws_NotAuthorized_When_NotDev()
        {
            using var scope = _factoryDev.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var env = scope.ServiceProvider.GetRequiredService<EnvelopeCrypto>();

            var resolver = new MaintenanceMutations();
            var prodHost = new TestHostEnv(Environments.Production);

            var ex = await Assert.ThrowsAsync<GraphQLException>(() =>
                resolver.RewrapAndPrunePrimary(env.PrimaryKeyId, "k_new", db, env, prodHost, CancellationToken.None));

            Assert.Contains("not authorized", ex.Message, StringComparison.OrdinalIgnoreCase);
        }


        [Fact]
        public async Task ReencryptAfterCompromise_Throws_NotAuthorized_When_NotDev()
        {
            // Use live services from the dev test server
            using var scope = _factoryDev.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var env = scope.ServiceProvider.GetRequiredService<EnvelopeCrypto>();

            var resolver = new MaintenanceMutations();
            var prodHost = new TestHostEnv(Environments.Production); // pretend non-Dev

            var ex = await Assert.ThrowsAsync<GraphQLException>(() =>
                resolver.ReencryptAfterCompromise(env.PrimaryKeyId, db, env, prodHost, CancellationToken.None));

            Assert.Contains("not authorized", ex.Message, StringComparison.OrdinalIgnoreCase);
        }


        // ---------------------------
        // Happy paths (HTTP)
        // ---------------------------

        [Fact]
        public async Task RewrapAndPrunePrimary_HappyPath_Updates_And_Prunes()
        {
            // Admin auth
            CreateAndAuthenticateUser("admin_dev", "admin_dev@test.com", role: "Admin");

            // Get ids from live crypto
            string oldPrimaryId, recoveryId;
            using (var scope = _factoryDev.Services.CreateScope())
            {
                var env = scope.ServiceProvider.GetRequiredService<EnvelopeCrypto>();
                oldPrimaryId = env.PrimaryKeyId;
                recoveryId = env.RecoveryKeyId;
            }

            // Seed a REAL entry (envelope produced by the API so WrappedKeys is valid)
            var add = new { query = @"mutation { addJournalEntry(text:""RotateMe"", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _clientDev.PostAsJsonAsync("/graphql", add);
            var addBody = await addResp.Content.ReadAsStringAsync();
            Assert.True(addResp.IsSuccessStatusCode, $"addJournalEntry failed: {addBody}");
            Assert.Contains("\"id\":", addBody);

            // Run rewrap: move from current primary to recovery (acts as our “new” id)
            var payload = new
            {
                query = $@"mutation {{
          rewrapAndPrunePrimary(oldPrimaryId:""{oldPrimaryId}"", newPrimaryId:""{recoveryId}"") {{
            updatedRows addedNewPrimary addedRecovery prunedOldPrimary skippedUnwrapFailed skippedInvalidJson alreadyUpToDate
          }}
        }}"
            };
            var resp = await _clientDev.PostAsJsonAsync("/graphql", payload);
            var body = await resp.Content.ReadAsStringAsync();
            Assert.True(resp.IsSuccessStatusCode, $"rewrapAndPrunePrimary failed: {body}");
            Assert.DoesNotContain(@"""errors""", body, StringComparison.OrdinalIgnoreCase);
            Assert.Contains(@"""updatedRows"":", body);
            Assert.Contains(@"""prunedOldPrimary"":", body);
        }

        [Fact]
        public async Task ReencryptAfterCompromise_HappyPath_Reencrypts()
        {
            CreateAndAuthenticateUser("admin_dev2", "admin_dev2@test.com", role: "Admin");

            string primaryId, recoveryId;
            using (var scope = _factoryDev.Services.CreateScope())
            {
                var env = scope.ServiceProvider.GetRequiredService<EnvelopeCrypto>();
                primaryId = env.PrimaryKeyId;
                recoveryId = env.RecoveryKeyId;
            }

            var add = new { query = @"mutation { addJournalEntry(text:""RotateMe"", moodId:1, secondaryEmotions:[]) { id } }" };
            var addResp = await _clientDev.PostAsJsonAsync("/graphql", add);
            var addBody = await addResp.Content.ReadAsStringAsync();
            Assert.True(addResp.IsSuccessStatusCode, $"addJournalEntry failed: {addBody}");

            // use active primary as compromised key (safe with the cursor patch)
            var run = new { query = $@"mutation {{ reencryptAfterCompromise(compromisedKeyId:""{primaryId}"") }}" };
            var runResp = await _clientDev.PostAsJsonAsync("/graphql", run);
            var runBody = await runResp.Content.ReadAsStringAsync();
            Assert.True(runResp.IsSuccessStatusCode, $"reencryptAfterCompromise failed: {runBody}");
            Assert.DoesNotContain(@"""errors""", runBody, StringComparison.OrdinalIgnoreCase);
            Assert.Contains("true", runBody);

            using var scope2 = _factoryDev.Services.CreateScope();
            var db2 = scope2.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var row = await db2.JournalEntries.AsNoTracking().OrderByDescending(x => x.Id).FirstAsync();

            using var doc = System.Text.Json.JsonDocument.Parse(row.WrappedKeys!);
            var root = doc.RootElement;
            Assert.True(root.TryGetProperty(primaryId, out _));   // wrapped to active primary
            Assert.True(root.TryGetProperty(recoveryId, out _));  // and recovery
        }



        // ---------------------------
        // Negative cases on resolver (counters)
        // ---------------------------

        [Fact]
        public async Task RewrapAndPrunePrimary_Skips_InvalidJson_UnwrapFailed_AlreadyUpToDate()
        {
            using var scope = _factoryDev.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
            var env = scope.ServiceProvider.GetRequiredService<EnvelopeCrypto>();
            var devHost = new TestHostEnv(Environments.Development);

            // Clean a small playground (optional if tests isolate DB)
            db.JournalEntries.RemoveRange(db.JournalEntries);
            await db.SaveChangesAsync();

            var oldId = env.PrimaryKeyId;
            var newId = env.RecoveryKeyId; // guaranteed to exist in KEK ring

            // 1) invalid JSON
            db.JournalEntries.Add(new JournalEntry { UserId = 1, Text = "c", DataNonce = "AAA=", DataTag = "AAA=", WrappedKeys = "not-json" });
            // 2) unwrap fail: only an unknown key
            db.JournalEntries.Add(new JournalEntry { UserId = 1, Text = "c", DataNonce = "AAA=", DataTag = "AAA=", WrappedKeys = "{\"unknown\":\"x\"}" });
            // 3) already up to date: has new, not old
            db.JournalEntries.Add(new JournalEntry { UserId = 1, Text = "c", DataNonce = "AAA=", DataTag = "AAA=", WrappedKeys = $"{{\"{newId}\":\"z\"}}" });
            await db.SaveChangesAsync();

            var result = await new MaintenanceMutations().RewrapAndPrunePrimary(oldId, newId, db, env, devHost, CancellationToken.None);

            Assert.Equal(0, result.UpdatedRows);
            Assert.Equal(1, result.SkippedInvalidJson);
            Assert.Equal(1, result.SkippedUnwrapFailed);
            Assert.Equal(1, result.AlreadyUpToDate);
        }


        // ---------------------------
        // Test helpers
        // ---------------------------

        private sealed class TestHostEnv : IHostEnvironment
        {
            public TestHostEnv(string name)
            {
                EnvironmentName = name;
                ApplicationName = "Tests";
                ContentRootPath = AppContext.BaseDirectory;
                ContentRootFileProvider = new PhysicalFileProvider(ContentRootPath); // or new NullFileProvider()
            }

            public string EnvironmentName { get; set; }
            public string ApplicationName { get; set; }
            public string ContentRootPath { get; set; }
            public IFileProvider ContentRootFileProvider { get; set; }
        }

    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\MaintenanceMutationsGraphQLTests .cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\PlantTypeGraphQLTests.cs =====
using Microsoft.Extensions.DependencyInjection;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;
using Xunit;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class PlantTypeGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly HttpClient _client;
        private readonly ApiFactory _factory;

        public PlantTypeGraphQLTests(PostgresFixture fixture)
        {
            _factory = new ApiFactory(fixture.ConnectionString);
            _client = _factory.CreateClient();
        }

        // ---------------------------
        // Helpers
        // ---------------------------
        private (int Id, string UserName, string Email) EnsureSeedUser(UserRole role, string userName, string email)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var u = db.Users.SingleOrDefault(x => x.UserName == userName);
            if (u == null)
            {
                var planId = db.SubscriptionPlans.Select(p => p.Id).FirstOrDefault();
                if (planId == 0) throw new InvalidOperationException("No subscription plan found.");

                u = new User
                {
                    UserName = userName,
                    Email = email,
                    PasswordHash = "x",
                    Role = role,
                    SubscriptionPlanId = planId
                };
                db.Users.Add(u);
                db.SaveChanges();
            }

            return (u.Id, u.UserName, u.Email);
        }

        private void AuthenticateAs((int Id, string UserName, string Email) user, string role)
        {
            var token = JwtTokenGenerator.GenerateToken(
                _factory.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role: role);
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        }

        private int CreateEmotionTag(string name = "Happy", string color = "#FF0000", string? icon = null)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var tag = new EmotionTag { Name = name, Color = color, Icon = icon };
            db.EmotionTags.Add(tag);
            db.SaveChanges();
            return tag.Id;
        }

        private PlantType CreateSeedPlantType(string name = "Rose")
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var etid = CreateEmotionTag("Joy", "#00FF00");
            var pt = new PlantType { Name = name, EmotionTagId = etid };
            db.PlantTypes.Add(pt);
            db.SaveChanges();
            return pt;
        }

        // ---------------------------
        // Query Tests
        // ---------------------------
        [Fact]
        public async Task GetPlantTypes_Allows_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_admin", "pt_admin@test.com");
            AuthenticateAs(admin, "Admin");
            CreateSeedPlantType("Tulip");

            var payload = new { query = "{ plantTypes { id name emotionTagId } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Tulip", json);
        }

        [Fact]
        public async Task GetPlantTypes_Denies_User()
        {
            var user = EnsureSeedUser(UserRole.User, "pt_user", "pt_user@test.com");
            AuthenticateAs(user, "User");

            var payload = new { query = "{ plantTypes { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetPlantTypes_Returns_Empty_When_No_Records()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_empty_admin", "pt_empty_admin@test.com");
            AuthenticateAs(admin, "Admin");

            using (var scope = _factory.Services.CreateScope())
            {
                var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();
                db.PlantTypes.RemoveRange(db.PlantTypes);
                db.SaveChanges();
            }

            var payload = new { query = "{ plantTypes { id name emotionTagId } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("[]", json);
        }

        [Fact]
        public async Task GetPlantTypeById_Allows_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_byid_admin", "pt_byid_admin@test.com");
            AuthenticateAs(admin, "Admin");
            var pt = CreateSeedPlantType("Sunflower");

            var payload = new { query = $"{{ plantTypeById(id:{pt.Id}) {{ id name emotionTagId }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Sunflower", json);
        }

        [Fact]
        public async Task GetPlantTypeById_Denies_User()
        {
            var user = EnsureSeedUser(UserRole.User, "pt_byid_user", "pt_byid_user@test.com");
            AuthenticateAs(user, "User");
            var pt = CreateSeedPlantType("Daisy");

            var payload = new { query = $"{{ plantTypeById(id:{pt.Id}) {{ id name }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetPlantTypeById_Returns_Empty_When_Id_Not_Found()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_nf_admin", "pt_nf_admin@test.com");
            AuthenticateAs(admin, "Admin");

            var payload = new { query = "{ plantTypeById(id:99999) { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("[]", json);
        }

        // ---------------------------
        // Mutation Tests
        // ---------------------------
        [Fact]
        public async Task AddPlantType_Allows_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_add_admin", "pt_add_admin@test.com");
            AuthenticateAs(admin, "Admin");
            var etid = CreateEmotionTag("Excited", "#00FF00");

            var payload = new { query = $"mutation {{ addPlantType(name:\"Lily\", emotionTagId:{etid}) {{ id name emotionTagId }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Lily", json);
        }

        [Fact]
        public async Task AddPlantType_Denies_User()
        {
            var user = EnsureSeedUser(UserRole.User, "pt_add_user", "pt_add_user@test.com");
            AuthenticateAs(user, "User");
            var etid = CreateEmotionTag("Blocked", "#0000FF");

            var payload = new { query = $"mutation {{ addPlantType(name:\"Forbidden\", emotionTagId:{etid}) {{ id name }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task AddPlantType_Returns_Error_When_EmotionTag_Invalid()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_add_invalid", "pt_add_invalid@test.com");
            AuthenticateAs(admin, "Admin");

            var payload = new { query = "mutation { addPlantType(name:\"BadPlant\", emotionTagId:99999) { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("error", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdatePlantType_Allows_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_update_admin", "pt_update_admin@test.com");
            AuthenticateAs(admin, "Admin");
            var pt = CreateSeedPlantType("Orchid");

            var payload = new { query = $"mutation {{ updatePlantType(id:{pt.Id}, name:\"UpdatedFlower\") {{ id name }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("UpdatedFlower", json);
        }

        [Fact]
        public async Task UpdatePlantType_Denies_User()
        {
            var user = EnsureSeedUser(UserRole.User, "pt_update_user", "pt_update_user@test.com");
            AuthenticateAs(user, "User");
            var pt = CreateSeedPlantType("Peony");

            var payload = new { query = $"mutation {{ updatePlantType(id:{pt.Id}, name:\"Hacked\") {{ id name }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdatePlantType_Returns_Null_When_Id_Not_Found()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_update_nf", "pt_update_nf@test.com");
            AuthenticateAs(admin, "Admin");

            var payload = new { query = "mutation { updatePlantType(id:99999, name:\"Ghost\") { id name } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeletePlantType_Allows_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_delete_admin", "pt_delete_admin@test.com");
            AuthenticateAs(admin, "Admin");
            var pt = CreateSeedPlantType("ToDelete");

            var payload = new { query = $"mutation {{ deletePlantType(id:{pt.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeletePlantType_Denies_User()
        {
            var user = EnsureSeedUser(UserRole.User, "pt_delete_user", "pt_delete_user@test.com");
            AuthenticateAs(user, "User");
            var pt = CreateSeedPlantType("CantDelete");

            var payload = new { query = $"mutation {{ deletePlantType(id:{pt.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeletePlantType_Returns_False_When_Id_Not_Found()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "pt_delete_nf", "pt_delete_nf@test.com");
            AuthenticateAs(admin, "Admin");

            var payload = new { query = "mutation { deletePlantType(id:99999) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("not found", json, StringComparison.OrdinalIgnoreCase);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\PlantTypeGraphQLTests.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\UserGraphQLTests.cs =====
using Microsoft.Extensions.DependencyInjection;
using System.Net.Http.Headers;
using System.Net.Http.Json;
using System.Text.Json;
using ThoughtGarden.Api.Data;
using ThoughtGarden.Api.Tests.Factories;
using ThoughtGarden.Api.Tests.Utils;
using ThoughtGarden.Models;
using Xunit;

namespace ThoughtGarden.Api.Tests.GraphQL
{
    public class UserGraphQLTests : IClassFixture<PostgresFixture>
    {
        private readonly HttpClient _client;
        private readonly ApiFactory _factory;

        public UserGraphQLTests(PostgresFixture fixture)
        {
            _factory = new ApiFactory(fixture.ConnectionString);
            _client = _factory.CreateClient();
        }

        // ---------------------------
        // Helpers
        // ---------------------------
        private (int Id, string UserName, string Email) EnsureSeedUser(
            UserRole role = UserRole.User,
            string userName = "seeduser",
            string email = "seed@test.com")
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var u = db.Users.SingleOrDefault(x => x.UserName == userName);
            if (u == null)
            {
                var planId = db.SubscriptionPlans.Select(p => p.Id).FirstOrDefault();
                if (planId == 0) throw new InvalidOperationException("No subscription plan found.");

                u = new User
                {
                    UserName = userName,
                    Email = email,
                    PasswordHash = "x",
                    Role = role,
                    SubscriptionPlanId = planId
                };
                db.Users.Add(u);
                db.SaveChanges();
            }

            return (u.Id, u.UserName, u.Email);
        }

        private void AuthenticateAs((int Id, string UserName, string Email) user, string role)
        {
            var token = JwtTokenGenerator.GenerateToken(
                _factory.JwtKey, "TestIssuer", "TestAudience",
                user.Id, user.UserName, user.Email, role: role);
            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        }

        private (int Id, string UserName, string Email) CreateTempUser(string userName, string email, string? plainPassword = null)
        {
            using var scope = _factory.Services.CreateScope();
            var db = scope.ServiceProvider.GetRequiredService<ThoughtGardenDbContext>();

            var planId = db.SubscriptionPlans.Select(p => p.Id).FirstOrDefault();
            if (planId == 0) throw new InvalidOperationException("No subscription plan found for temp user.");

            var user = new User
            {
                UserName = userName,
                Email = email,
                PasswordHash = plainPassword is null ? "x" : PasswordHelper.HashPassword(plainPassword),
                Role = UserRole.User,
                SubscriptionPlanId = planId
            };

            db.Users.Add(user);
            db.SaveChanges();

            return (user.Id, user.UserName, user.Email);
        }

        // ---------------------------
        // Query Tests
        // ---------------------------
        [Fact]
        public async Task GetProfile_Returns_SeededUser_As_User()
        {
            var user = EnsureSeedUser();
            AuthenticateAs(user, "User");

            var payload = new { query = "{ profile { userName email } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("seeduser", json);
            Assert.Contains("seed@test.com", json);
        }

        [Fact]
        public async Task GetProfile_Fails_When_Not_Authenticated()
        {
            var payload = new { query = "{ profile { userName email } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetUsers_Returns_SeededUser_As_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "admin_users", "admin_users@test.com");
            AuthenticateAs(admin, "Admin");

            var payload = new { query = "{ users { userName email } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("seeduser", json);
            Assert.Contains("seed@test.com", json);
        }

        [Fact]
        public async Task GetUsers_Fails_For_Normal_User()
        {
            var temp = CreateTempUser("normal_for_getusers", "normal_for_getusers@test.com");
            AuthenticateAs(temp, "User");

            var payload = new { query = "{ users { userName email } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetUsers_Denies_Anonymous()
        {
            var payload = new { query = "{ users { userName email } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetUserById_Returns_SeededUser_As_Admin()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "admin_userbyid", "admin_userbyid@test.com");
            AuthenticateAs(admin, "Admin");

            var seed = EnsureSeedUser();
            var payload = new { query = $"{{ userById(id: {seed.Id}) {{ userName email }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("seeduser", json);
            Assert.Contains("seed@test.com", json);
        }

        [Fact]
        public async Task GetUserById_Fails_For_Normal_User()
        {
            var normal = CreateTempUser("normal_for_getuserbyid", "normal_for_getuserbyid@test.com");
            AuthenticateAs(normal, "User");

            var victim = CreateTempUser("victim_for_getuserbyid", "victim_for_getuserbyid@test.com");
            var payload = new { query = $"{{ userById(id: {victim.Id}) {{ userName email }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task GetUserById_Denies_Anonymous()
        {
            var payload = new { query = "{ userById(id: 1) { userName email } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Mutation Tests - Update
        // ---------------------------
        [Fact]
        public async Task UpdateUser_Allows_Self_Update()
        {
            var user = EnsureSeedUser();
            AuthenticateAs(user, "User");

            var payload = new { query = $"mutation {{ updateUser(id: {user.Id}, userName: \"updatedName\") {{ userName email }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("updatedName", json);
        }

        [Fact]
        public async Task UpdateUser_Allows_Admin_Update_Other_User()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "admin_update", "admin_update@test.com");
            AuthenticateAs(admin, "Admin");

            var other = CreateTempUser("otheruser_update", "other_update@test.com");
            var payload = new { query = $"mutation {{ updateUser(id: {other.Id}, userName: \"adminUpdated\") {{ userName email }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("adminUpdated", json);
        }

        [Fact]
        public async Task UpdateUser_Fails_For_Normal_User_Updating_Other()
        {
            var user = EnsureSeedUser(UserRole.User, "user_updatefail", "user_updatefail@test.com");
            AuthenticateAs(user, "User");

            var other = CreateTempUser("otheruser_block", "other_block@test.com");
            var payload = new { query = $"mutation {{ updateUser(id: {other.Id}, userName: \"hacker\") {{ userName email }} }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdateUser_Denies_Anonymous()
        {
            var payload = new { query = "mutation { updateUser(id:1, userName:\"Anon\") { id userName } }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Mutation Tests - Delete
        // ---------------------------
        [Fact]
        public async Task DeleteUser_Allows_Self_Delete()
        {
            var temp = CreateTempUser("selfdelete", "selfdelete@test.com");
            AuthenticateAs(temp, "User");

            var payload = new { query = $"mutation {{ deleteUser(id: {temp.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeleteUser_Allows_Admin_Delete_Other()
        {
            var admin = EnsureSeedUser(UserRole.Admin, "admin_delete", "admin_delete@test.com");
            AuthenticateAs(admin, "Admin");

            var other = CreateTempUser("admindelete", "admindelete@test.com");
            var payload = new { query = $"mutation {{ deleteUser(id: {other.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("true", json);
        }

        [Fact]
        public async Task DeleteUser_Fails_For_Normal_User_Deleting_Other()
        {
            var normal = CreateTempUser("normal_for_delete", "normal_for_delete@test.com");
            AuthenticateAs(normal, "User");

            var victim = CreateTempUser("victim_delete", "victim_delete@test.com");
            var payload = new { query = $"mutation {{ deleteUser(id: {victim.Id}) }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task DeleteUser_Denies_Anonymous()
        {
            var payload = new { query = "mutation { deleteUser(id:1) }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Mutation Tests - Password
        // ---------------------------
        [Fact]
        public async Task UpdatePassword_Succeeds_For_Self_With_Correct_Current()
        {
            var temp = CreateTempUser("pw_ok", "pw_ok@test.com", plainPassword: "OldPass123!");
            AuthenticateAs(temp, "User");

            var payload = new { query = "mutation { updatePassword(currentPassword:\"OldPass123!\", newPassword:\"NewPass456!\") }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("true", json);
        }

        [Fact]
        public async Task UpdatePassword_Fails_With_Wrong_Current()
        {
            var temp = CreateTempUser("pw_bad", "pw_bad@test.com", plainPassword: "OldPass123!");
            AuthenticateAs(temp, "User");

            var payload = new { query = "mutation { updatePassword(currentPassword:\"WRONG!\", newPassword:\"NewPass456!\") }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Current password is incorrect", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task UpdatePassword_Denies_Anonymous()
        {
            var payload = new { query = "mutation { updatePassword(currentPassword:\"x\", newPassword:\"y\") }" };
            var resp = await _client.PostAsJsonAsync("/graphql", payload);
            var json = await resp.Content.ReadAsStringAsync();

            Assert.Contains("Not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        // ---------------------------
        // Mutation Tests - Auth
        // ---------------------------
        [Fact]
        public async Task RegisterUser_Succeeds_And_Can_Login()
        {
            var userName = $"reg_{Guid.NewGuid():N}".Substring(0, 8);
            var email = $"{userName}@test.com";

            var register = new
            {
                query = $"mutation {{ registerUser(username:\"{userName}\", email:\"{email}\", password:\"P@ssw0rd!\") {{ id userName email }} }}"
            };

            var regResp = await _client.PostAsJsonAsync("/graphql", register);
            regResp.EnsureSuccessStatusCode();
            var regJson = await regResp.Content.ReadAsStringAsync();
            Assert.Contains(userName, regJson);
            Assert.Contains(email, regJson);

            var login = new
            {
                query = $"mutation {{ loginUser(email:\"{email}\", password:\"P@ssw0rd!\") {{ accessToken refreshToken }} }}"
            };

            var loginResp = await _client.PostAsJsonAsync("/graphql", login);
            loginResp.EnsureSuccessStatusCode();
            var loginJson = await loginResp.Content.ReadAsStringAsync();
            Assert.Contains("accessToken", loginJson);
            Assert.Contains("refreshToken", loginJson);
        }

        [Fact]
        public async Task LoginUser_Fails_With_Wrong_Password()
        {
            var u = CreateTempUser("login_bad", "login_bad@test.com", plainPassword: "RightPass1!");

            var login = new
            {
                query = $"mutation {{ loginUser(email:\"{u.Email}\", password:\"WrongPass!\") {{ accessToken refreshToken }} }}"
            };

            var resp = await _client.PostAsJsonAsync("/graphql", login);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("Invalid password", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task RefreshToken_Succeeds_With_Valid_Refresh_And_Auth()
        {
            var u = CreateTempUser("refresh_me", "refresh_me@test.com", plainPassword: "P@ssw0rd!");

            var login = new
            {
                query = $"mutation {{ loginUser(email:\"{u.Email}\", password:\"P@ssw0rd!\") {{ accessToken refreshToken }} }}"
            };

            var loginResp = await _client.PostAsJsonAsync("/graphql", login);
            loginResp.EnsureSuccessStatusCode();
            var loginJson = await loginResp.Content.ReadAsStringAsync();

            using var doc = JsonDocument.Parse(loginJson);
            var data = doc.RootElement.GetProperty("data").GetProperty("loginUser");
            var accessToken = data.GetProperty("accessToken").GetString();
            var refreshToken = data.GetProperty("refreshToken").GetString();

            Assert.False(string.IsNullOrWhiteSpace(accessToken));
            Assert.False(string.IsNullOrWhiteSpace(refreshToken));

            _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);

            var refresh = new
            {
                query = $"mutation {{ refreshToken(refreshToken:\"{refreshToken}\") {{ accessToken refreshToken }} }}"
            };

            var refreshResp = await _client.PostAsJsonAsync("/graphql", refresh);
            refreshResp.EnsureSuccessStatusCode();
            var refreshJson = await refreshResp.Content.ReadAsStringAsync();

            Assert.Contains("accessToken", refreshJson);
            Assert.Contains("refreshToken", refreshJson);
        }

        [Fact]
        public async Task RefreshToken_Fails_When_Not_Authenticated()
        {
            var refresh = new
            {
                query = $"mutation {{ refreshToken(refreshToken:\"bogus\") {{ accessToken refreshToken }} }}"
            };

            var resp = await _client.PostAsJsonAsync("/graphql", refresh);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("not authorized", json, StringComparison.OrdinalIgnoreCase);
        }

        [Fact]
        public async Task LogoutUser_Succeeds_With_Active_RefreshToken()
        {
            var u = CreateTempUser("logout_me", "logout_me@test.com", plainPassword: "P@ssw0rd!");

            var login = new
            {
                query = $"mutation {{ loginUser(email:\"{u.Email}\", password:\"P@ssw0rd!\") {{ accessToken refreshToken }} }}"
            };

            var loginResp = await _client.PostAsJsonAsync("/graphql", login);
            loginResp.EnsureSuccessStatusCode();
            var loginJson = await loginResp.Content.ReadAsStringAsync();

            using var doc = JsonDocument.Parse(loginJson);
            var data = doc.RootElement.GetProperty("data").GetProperty("loginUser");
            var refreshToken = data.GetProperty("refreshToken").GetString();

            Assert.False(string.IsNullOrWhiteSpace(refreshToken));

            var logout = new { query = $"mutation {{ logoutUser(refreshToken:\"{refreshToken}\") }}" };
            var resp = await _client.PostAsJsonAsync("/graphql", logout);
            resp.EnsureSuccessStatusCode();

            var json = await resp.Content.ReadAsStringAsync();
            Assert.Contains("true", json);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\GraphQL\UserGraphQLTests.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs =====
// <autogenerated />
using System;
using System.Reflection;
[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v8.0", FrameworkDisplayName = ".NET 8.0")]
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\.NETCoreApp,Version=v8.0.AssemblyAttributes.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\AppSettingsSchema.json =====
{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "webOptimizer": {
      "title": "web optimizer",
      "type": "object",
      "description": "Settings for WebOptimizer.Core",
      "properties": {
        "enableCaching": {
          "description": "Determines if the \u0022cache-control\u0022 HTTP headers should be set and if conditional GET (304) requests should be supported. This could be helpful to disable while in development mode.",
          "type": "boolean"
        },
        "enableTagHelperBundling": {
          "description": "Determines if \u0060\u003Cscript\u003E\u0060 and \u0060\u003Clink\u003E\u0060 elements should point to the bundled path or a reference per source file should be created. This is helpful to disable when in development mode.",
          "type": "boolean",
          "default": true
        }
      }
    },
    "cdn": {
      "title": "CDN",
      "type": "object",
      "description": "Definitions for WebEssentials.AspNetCore.CdnTagHelpers",
      "properties": {
        "url": {
          "description": "An absolute URL used as a prefix for static resources",
          "type": "string",
          "pattern": "^((//|https?://).\u002B|)$"
        },
        "prefetch": {
          "description": "If true, injects a \u003Clink rel=\u0027dns-prefetch\u0027\u003E tag that speeds up DNS resolution to the CDN.",
          "type": "boolean",
          "default": true
        }
      }
    },
    "pwa": {
      "properties": {
        "cacheId": {
          "description": "The cache identifier of the service worker (can be any string). Change this property to force the service worker to reload in browsers.",
          "type": "string",
          "default": "v1.0"
        },
        "offlineRoute": {
          "description": "The route to the page to show when offline.",
          "type": "string",
          "default": "/offline.html"
        },
        "registerServiceWorker": {
          "description": "Determines if a script that registers the service worker should be injected into the bottom of the HTML page.",
          "type": "boolean",
          "default": true
        },
        "registerWebmanifest": {
          "description": "Determines if a meta tag that points to the web manifest should be inserted at the end of the head element.",
          "type": "boolean",
          "default": true
        },
        "routesToPreCache": {
          "description": "A comma separated list of routes to pre-cache when service worker installs in the browser.",
          "type": "string",
          "default": ""
        },
        "strategy": {
          "description": "Selects one of the predefined service worker types.",
          "enum": [
            "cacheFirst",
            "cacheFirstSafe",
            "minimal",
            "networkFirst"
          ],
          "default": "cacheFirstSafe"
        }
      }
    },
    "ElmahIo": {
      "properties": {
        "ApiKey": {
          "description": "An elmah.io API key with the Messages | Write permission.",
          "type": "string",
          "pattern": "^([0-9a-f]{32})|(#\\{.*\\}#?)$"
        },
        "LogId": {
          "description": "The Id of the elmah.io log to store messages in.",
          "type": "string",
          "pattern": "^([0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})|(#\\{.*\\}#?)$"
        },
        "Application": {
          "description": "An application name to put on all error messages.",
          "type": "string"
        },
        "HandledStatusCodesToLog": {
          "description": "A list of HTTP status codes (besides 404) to log even though no exception is thrown.",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "TreatLoggingAsBreadcrumbs": {
          "description": "Include log messages from Microsoft.Extensions.Logging as breadcrumbs.",
          "type": "boolean"
        },
        "HeartbeatId": {
          "description": "The Id of the elmah.io heartbeat to notify.",
          "type": "string",
          "pattern": "^([0-9a-f]{32})|(#\\{.*\\}#?)$"
        }
      },
      "required": [
        "ApiKey",
        "LogId"
      ]
    },
    "protocols": {
      "description": "The protocols enabled on the endpoint.",
      "type": "string",
      "enum": [
        "None",
        "Http1",
        "Http2",
        "Http1AndHttp2",
        "Http3",
        "Http1AndHttp2AndHttp3"
      ]
    },
    "certificate": {
      "title": "certificate",
      "description": "Certificate configuration.",
      "type": "object",
      "properties": {
        "Path": {
          "description": "The certificate file path. If a file path is specified then the certificate will be loaded from the file system.",
          "type": "string"
        },
        "KeyPath": {
          "description": "The certificate key file path. Available in .NET 5 and later.",
          "type": "string"
        },
        "Password": {
          "description": "The certificate password used to access the private key.",
          "type": "string"
        },
        "Subject": {
          "description": "The certificate subject. If a subject is specified then the certificate will be loaded from the certificate store.",
          "type": "string"
        },
        "Store": {
          "description": "The certificate store name. Defaults to \u0027My\u0027.",
          "type": "string",
          "default": "My"
        },
        "Location": {
          "description": "The certificate store location. Defaults to \u0027CurrentUser\u0027.",
          "type": "string",
          "enum": [
            "LocalMachine",
            "CurrentUser"
          ],
          "default": "CurrentUser"
        },
        "AllowInvalid": {
          "description": "A value indicating whether or not to load certificates that are considered invalid. Defaults to false.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "sslProtocols": {
      "description": "Specifies allowable SSL protocols. Defaults to \u0027None\u0027 which allows the operating system to choose the best protocol to use, and to block protocols that are not secure. Unless your app has a specific reason not to, you should use this default. Available in .NET 5 and later.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "None",
          "Tls",
          "Tls11",
          "Tls12",
          "Tls13"
        ],
        "default": "None"
      }
    },
    "clientCertificateMode": {
      "description": "Specifies the client certificate requirements for a HTTPS connection. Defaults to \u0027NoCertificate\u0027. Available in .NET 5 and later.",
      "type": "string",
      "enum": [
        "NoCertificate",
        "AllowCertificate",
        "RequireCertificate"
      ],
      "default": "NoCertificate"
    },
    "kestrel": {
      "title": "kestrel",
      "type": "object",
      "description": "ASP.NET Core Kestrel server configuration.",
      "properties": {
        "Endpoints": {
          "title": "endpoints",
          "description": "Endpoints that Kestrel listens to for network requests. Each endpoint has a name specified by its JSON property name.",
          "type": "object",
          "additionalProperties": {
            "title": "endpoint options",
            "description": "Kestrel endpoint configuration.",
            "type": "object",
            "properties": {
              "Url": {
                "description": "The scheme, host name, and port the endpoint will listen on. A Url is required.",
                "type": "string",
                "format": "uri"
              },
              "Protocols": {
                "$ref": "#/definitions/protocols"
              },
              "SslProtocols": {
                "$ref": "#/definitions/sslProtocols"
              },
              "Certificate": {
                "$ref": "#/definitions/certificate"
              },
              "ClientCertificateMode": {
                "$ref": "#/definitions/clientCertificateMode"
              },
              "Sni": {
                "title": "SNI",
                "description": "Server Name Indication (SNI) configuration. This enables the mapping of client requested host names to certificates and other TLS settings. Wildcard names prefixed with \u0027*.\u0027, as well as a top level \u0027*\u0027 are supported. Available in .NET 5 and later.",
                "type": "object",
                "additionalProperties": {
                  "title": "SNI options",
                  "description": "Endpoint SNI configuration.",
                  "type": "object",
                  "properties": {
                    "Protocols": {
                      "$ref": "#/definitions/protocols"
                    },
                    "SslProtocols": {
                      "$ref": "#/definitions/sslProtocols"
                    },
                    "Certificate": {
                      "$ref": "#/definitions/certificate"
                    },
                    "ClientCertificateMode": {
                      "$ref": "#/definitions/clientCertificateMode"
                    }
                  }
                }
              }
            },
            "required": [
              "Url"
            ]
          }
        },
        "EndpointDefaults": {
          "title": "endpoint defaults",
          "description": "Default configuration applied to all endpoints. Named endpoint specific configuration overrides defaults.",
          "type": "object",
          "properties": {
            "Protocols": {
              "$ref": "#/definitions/protocols"
            },
            "SslProtocols": {
              "$ref": "#/definitions/sslProtocols"
            },
            "ClientCertificateMode": {
              "$ref": "#/definitions/clientCertificateMode"
            }
          }
        },
        "Certificates": {
          "title": "certificates",
          "description": "Certificates that Kestrel uses with HTTPS endpoints. Each certificate has a name specified by its JSON property name. The \u0027Default\u0027 certificate is used by HTTPS endpoints that haven\u0027t specified a certificate.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/certificate"
          }
        }
      }
    },
    "logLevelThreshold": {
      "description": "Log level threshold.",
      "type": "string",
      "enum": [
        "Trace",
        "Debug",
        "Information",
        "Warning",
        "Error",
        "Critical",
        "None"
      ]
    },
    "logLevel": {
      "title": "logging level options",
      "description": "Log level configurations used when creating logs. Only logs that exceeds its matching log level will be enabled. Each log level configuration has a category specified by its JSON property name. For more information about configuring log levels, see https://docs.microsoft.com/aspnet/core/fundamentals/logging/#configure-logging.",
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/logLevelThreshold"
      }
    },
    "logging": {
      "title": "logging options",
      "type": "object",
      "description": "Configuration for Microsoft.Extensions.Logging.",
      "properties": {
        "LogLevel": {
          "$ref": "#/definitions/logLevel"
        },
        "Console": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            },
            "FormatterName": {
              "description": "Name of the log message formatter to use. Defaults to \u0027simple\u0027.",
              "type": "string",
              "default": "simple"
            },
            "FormatterOptions": {
              "title": "formatter options",
              "description": "Log message formatter options. Additional properties are available on the options depending on the configured formatter. The formatter is specified by FormatterName.",
              "type": "object",
              "properties": {
                "IncludeScopes": {
                  "description": "Include scopes when true. Defaults to false.",
                  "type": "boolean",
                  "default": false
                },
                "TimestampFormat": {
                  "description": "Format string used to format timestamp in logging messages. Defaults to null.",
                  "type": "string"
                },
                "UseUtcTimestamp": {
                  "description": "Indication whether or not UTC timezone should be used to for timestamps in logging messages. Defaults to false.",
                  "type": "boolean",
                  "default": false
                }
              }
            },
            "LogToStandardErrorThreshold": {
              "$ref": "#/definitions/logLevelThreshold",
              "description": "The minimum level of messages are written to Console.Error."
            }
          }
        },
        "EventSource": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "Debug": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "EventLog": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "ElmahIo": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        },
        "ElmahIoBreadcrumbs": {
          "properties": {
            "LogLevel": {
              "$ref": "#/definitions/logLevel"
            }
          }
        }
      },
      "additionalProperties": {
        "title": "provider logging settings",
        "type": "object",
        "description": "Logging configuration for a provider. The provider name must match the configuration\u0027s JSON property property name.",
        "properties": {
          "LogLevel": {
            "$ref": "#/definitions/logLevel"
          }
        }
      }
    },
    "allowedHosts": {
      "description": "ASP.NET Core host filtering middleware configuration. Allowed hosts is a semicolon-delimited list of host names without port numbers. Requests without a matching host name will be refused. Host names may be prefixed with a \u0027*.\u0027 wildcard, or use \u0027*\u0027 to allow all hosts.",
      "type": "string"
    },
    "connectionStrings": {
      "title": "connection string options",
      "description": "Connection string configuration. Get connection strings with the IConfiguration.GetConnectionString(string) extension method.",
      "type": "object",
      "additionalProperties": {
        "description": "Connection string configuration. Each connection string has a name specified by its JSON property name.",
        "type": "string"
      }
    },
    "NLog": {
      "title": "NLog options",
      "type": "object",
      "description": "NLog configuration",
      "default": {},
      "properties": {
        "autoReload": {
          "type": "boolean",
          "description": "Automatically reload the NLog configuration when notified that appsettings.json file has changed.",
          "default": false
        },
        "throwConfigExceptions": {
          "type": [
            "boolean",
            "null"
          ],
          "description": "Throws an exception when there is a config error? If not set, then throwExceptions will be used for this setting.",
          "default": false
        },
        "throwExceptions": {
          "type": "boolean",
          "description": "Throws an exception when there is an error. For unit testing only and advanced troubleshooting.",
          "default": false
        },
        "internalLogLevel": {
          "type": "string",
          "description": "The minimal log level for the internal logger.",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal",
            "Off"
          ],
          "default": "Off"
        },
        "internalLogFile": {
          "type": "string",
          "description": "Write internal log to the specified filepath"
        },
        "internalLogToConsole": {
          "type": "boolean",
          "description": "Write internal log to a console",
          "default": "false"
        },
        "internalLogToConsoleError": {
          "type": "boolean",
          "description": "Write internal log to a console with error stream",
          "default": "false"
        },
        "globalThreshold": {
          "type": "string",
          "description": "Log events below this threshold are not logged.",
          "enum": [
            "Trace",
            "Debug",
            "Info",
            "Warn",
            "Error",
            "Fatal",
            "Off"
          ],
          "default": "Off"
        },
        "autoShutdown": {
          "type": "boolean",
          "description": "Automatically call \u0060LogFactory.Shutdown\u0060 on AppDomain.Unload or AppDomain.ProcessExit",
          "default": "true"
        },
        "extensions": {
          "type": "array",
          "description": "Load NLog extension packages for additional targets and layouts",
          "default": [],
          "items": {
            "title": "extension",
            "type": "object",
            "description": "",
            "default": {},
            "properties": {
              "assembly": {
                "type": "string",
                "description": "Assembly Name of the NLog extension package."
              },
              "prefix": {
                "type": "string",
                "description": "Appends prefix to all type-names loaded from the assembly",
                "default": ""
              },
              "assemblyFile": {
                "type": "string",
                "description": "Absolute filepath to the Assembly-file of the NLog extension package.",
                "default": ""
              }
            }
          }
        },
        "variables": {
          "title": "variables",
          "type": "object",
          "description": "Key-value pair of variables",
          "propertyNames": {
            "pattern": "^[A-Za-z0-9_.-]\u002B$"
          },
          "patternProperties": {
            ".*": {
              "type": [
                "number",
                "string",
                "boolean"
              ]
            }
          }
        },
        "targetDefaultWrapper": {
          "title": "default wrapper",
          "type": "object",
          "description": "Wrap all defined targets with this custom target wrapper.",
          "default": {},
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "description": ""
            }
          }
        },
        "targets": {
          "title": "targets",
          "type": "object",
          "description": "",
          "default": {},
          "properties": {
            "async": {
              "type": "boolean",
              "description": "Wrap all defined targets using AsyncWrapper with OverflowAction=Discard for better performance."
            }
          }
        },
        "rules": {
          "oneOf": [
            {
              "type": "array",
              "description": "",
              "default": [],
              "items": {
                "$ref": "#/definitions/NLogRulesItem"
              }
            },
            {
              "title": "rules",
              "type": "object",
              "propertyNames": {
                "pattern": "^[0-9]\u002B$"
              },
              "patternProperties": {
                ".*": {
                  "$ref": "#/definitions/NLogRulesItem"
                }
              }
            }
          ]
        }
      }
    },
    "NLogRulesItem": {
      "title": "NLog rule item",
      "type": "object",
      "description": "Redirect LogEvents from matching Logger objects to specified targets",
      "default": {},
      "required": [
        "logger"
      ],
      "properties": {
        "logger": {
          "type": "string",
          "description": "Match Logger objects based on their Logger-name. Can use wildcard characters (\u0027*\u0027 or \u0027?\u0027)."
        },
        "ruleName": {
          "type": "string",
          "description": "Rule identifier to allow rule lookup with Configuration.FindRuleByName and Configuration.RemoveRuleByName."
        },
        "level": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "levels": {
          "type": "string",
          "description": "Comma separated list of levels that this rule matches."
        },
        "minLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "maxLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "finalMinLevel": {
          "anyOf": [
            {
              "type": "string",
              "description": "",
              "enum": [
                "Trace",
                "Debug",
                "Info",
                "Warn",
                "Error",
                "Fatal"
              ]
            },
            {
              "type": "string"
            }
          ]
        },
        "writeTo": {
          "type": "string",
          "description": "Name or names of a target - separated by comma. Remove this property for sending events to the blackhole."
        },
        "final": {
          "type": "boolean",
          "description": "Ignore further rules if this one matches.",
          "default": false
        },
        "enabled": {
          "type": "boolean",
          "description": "",
          "default": true
        },
        "filters": {
          "oneOf": [
            {
              "type": "array",
              "description": "",
              "default": [],
              "items": {
                "title": "filter",
                "type": "object",
                "description": "",
                "default": {},
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "description": ""
                  },
                  "action": {
                    "type": "string",
                    "description": "Result action when filter matches logevent.",
                    "enum": [
                      "Neutral",
                      "Log",
                      "Ignore",
                      "LogFinal",
                      "IgnoreFinal"
                    ],
                    "default": "Neutral"
                  }
                }
              }
            },
            {
              "title": "filter",
              "type": "object",
              "description": "",
              "default": {}
            }
          ]
        },
        "filterDefaultAction": {
          "type": "string",
          "description": "Default action if none of the filters match.",
          "enum": [
            "Neutral",
            "Log",
            "Ignore",
            "LogFinal",
            "IgnoreFinal"
          ],
          "default": "Ignore"
        }
      }
    },
    "Serilog": {
      "type": "object",
      "title": "Serilog appSettings",
      "description": "Serilog appSettings Configuration",
      "properties": {
        "$schema": {
          "type": "string",
          "title": "Schema",
          "description": "Pointer to the schema against which this document should be validated."
        },
        "Using": {
          "type": "array",
          "title": "List of Auto-discovery of configuration assemblies",
          "description": "Using section contains list of assemblies in which configuration methods. Can be required depending of the project type: See: https://github.com/serilog/serilog-settings-configuration#using-section-and-auto-discovery-of-configuration-assemblies",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Serilog/definitions/AssemblyReference"
          }
        },
        "LevelSwitches": {
          "type": "object",
          "patternProperties": {
            "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$": {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            }
          },
          "additionalProperties": false
        },
        "FilterSwitches": {
          "type": "object",
          "patternProperties": {
            "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "MinimumLevel": {
          "type": [
            "string",
            "object"
          ],
          "title": "Minimum LogLevel Threshold",
          "description": "Minimum LogLevel Threshold. (Support dynamic reload if the underlying IConfigurationProvider supports it)",
          "oneOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/DetailedMinimumLevel"
            }
          ]
        },
        "Properties": {
          "type": "object",
          "title": "Log events Properties",
          "description": "This section defines a static list of key-value pairs that will enrich log events.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Enrich": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events Enriches",
          "description": "This section defines Enriches that will be applied to log events."
        },
        "Destructure": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events Destructure",
          "description": "This section defines Destructure."
        },
        "Filter": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Log events filters",
          "description": "This section defines filters that will be applied to log events."
        },
        "WriteTo": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Configuration for log destination",
          "description": "This section configures the sinks that log events will be emitted to."
        },
        "AuditTo": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReference"
            }
          ],
          "title": "Configuration for log destination for auditing",
          "description": "This section configures sinks for auditing, instead of regular (safe) logging. Obs: When auditing is used, exceptions from sinks and any intermediate filters propagate back to the caller."
        }
      },
      "patternProperties": {
        "^Enrich:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events Enriches",
          "description": "This section defines Enriches that will be applied to log events."
        },
        "^Destructure:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events Destructure",
          "description": "This section defines Destructure."
        },
        "^Filter:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Log events filters",
          "description": "This section defines filters that will be applied to log events."
        },
        "^WriteTo:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Configuration for log destination",
          "description": "This section configures the sinks that log events will be emitted to."
        },
        "^AuditTo:((?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)|(?\u003CArrayIndex\u003E\\d*))$": {
          "allOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
            }
          ],
          "title": "Configuration for log destination for auditing",
          "description": "This section configures sinks for auditing, instead of regular (safe) logging. Obs: When auditing is used, exceptions from sinks and any intermediate filters propagate back to the caller."
        }
      },
      "additionalProperties": false,
      "definitions": {
        "SerilogLogEventLevel": {
          "type": "string",
          "title": "Log level",
          "description": "Log level threshold.",
          "enum": [
            "Verbose",
            "Debug",
            "Information",
            "Warning",
            "Error",
            "Fatal"
          ]
        },
        "LoggingLevelSwitch": {
          "type": "string",
          "title": "LevelSwitches name",
          "description": "Log Level Switch string reference.",
          "pattern": "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$"
        },
        "SerilogLogLevelThreshold": {
          "type": "string",
          "title": "Log Level or LevelSwitches name",
          "description": "A Serilog Log Level or a reference to a Log Level Switch name on \u0060LevelSwitches\u0060 configuration.",
          "anyOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogEventLevel"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/LoggingLevelSwitch"
            }
          ]
        },
        "DetailedMinimumLevel": {
          "type": "object",
          "title": "Detailed Log level.",
          "description": "Detailed Log level threshold object. Allowing set log levels be overridden per logging source.",
          "properties": {
            "Default": {
              "$ref": "#/definitions/Serilog/definitions/SerilogLogLevelThreshold"
            },
            "ControlledBy": {
              "$ref": "#/definitions/Serilog/definitions/LoggingLevelSwitch"
            },
            "Override": {
              "type": "object",
              "title": "Logging Source Log level object.",
              "description": "Set the Log level threshold or LevelSwitcher reference per Logging Source.",
              "additionalProperties": {
                "$ref": "#/definitions/Serilog/definitions/SerilogLogLevelThreshold"
              }
            }
          },
          "additionalProperties": false
        },
        "AssemblyReference": {
          "type": "string",
          "title": "Assembly Name",
          "description": ".NET Assembly Name, without the file extension",
          "minLength": 1,
          "pattern": "^(?\u003CAssemblyName\u003E\\S\u002B)$"
        },
        "ComplexMethodCallReference": {
          "type": "object",
          "properties": {
            "Name": {
              "$ref": "#/definitions/Serilog/definitions/CSharpMethodName"
            },
            "Args": {
              "type": "object",
              "patternProperties": {
                "^(?\u003CCSharpMethodArgumentName\u003E[a-zA-Z_]\\w*)$": {}
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "required": [
            "Name"
          ]
        },
        "MethodCallReferenceItem": {
          "type": [
            "string",
            "object",
            "null"
          ],
          "oneOf": [
            {
              "$ref": "#/definitions/Serilog/definitions/CSharpMethodName"
            },
            {
              "$ref": "#/definitions/Serilog/definitions/ComplexMethodCallReference"
            }
          ]
        },
        "MethodCallReference": {
          "type": [
            "array",
            "string",
            "object"
          ],
          "minLength": 1,
          "pattern": "^(?\u003CCSharpMethodName\u003E[a-zA-Z_]\\w*)$",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
          },
          "additionalProperties": {
            "$ref": "#/definitions/Serilog/definitions/MethodCallReferenceItem"
          }
        },
        "CSharpMethodName": {
          "type": "string",
          "title": "Method Name",
          "description": "A name referring to a C# Class method",
          "minLength": 1,
          "pattern": "^(?\u003CCSharpMethodName\u003E[a-zA-Z_]\\w*)$"
        },
        "CSharpMethodArgumentName": {
          "type": "string",
          "title": "Argument Name",
          "description": "A name referring to a C# Class method argument",
          "minLength": 1,
          "pattern": "^(?\u003CCSharpMethodArgumentName\u003E[a-zA-Z_]\\w*)$"
        },
        "EnvironmentVariableName": {
          "type": "string",
          "title": "Environment Variable Name",
          "description": "A name referring to a OS Environment Variable",
          "minLength": 1,
          "pattern": "^(?\u003CEnvironmentVariableName\u003E[a-zA-Z_]\\w*)$"
        },
        "SerilogLevelSwitcherName": {
          "type": "string",
          "title": "A Level Switcher Name",
          "description": "A name referring to a Serilog Settings Configuration Level Switcher",
          "minLength": 1,
          "pattern": "^(?\u003CSerilogLevelSwitcherName\u003E\\${0,1}[A-Za-z]\u002B[A-Za-z0-9]*)$"
        }
      }
    }
  },
  "id": "https://json.schemastore.org/appsettings.json",
  "patternProperties": {
    "^WebOptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^webOptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^weboptimizer$": {
      "$ref": "#/definitions/webOptimizer"
    },
    "^(cdn|Cdn)$": {
      "$ref": "#/definitions/cdn"
    },
    "^(pwa|PWA|Pwa)$": {
      "$ref": "#/definitions/pwa"
    },
    "^(ElmahIo|Elmahio|elmahIo|elmahio)$": {
      "$ref": "#/definitions/ElmahIo"
    },
    "^(nlog|Nlog|NLog)$": {
      "$ref": "#/definitions/NLog"
    },
    "^(Serilog|serilog)$": {
      "$ref": "#/definitions/Serilog"
    }
  },
  "properties": {
    "Kestrel": {
      "$ref": "#/definitions/kestrel"
    },
    "Logging": {
      "$ref": "#/definitions/logging"
    },
    "AllowedHosts": {
      "$ref": "#/definitions/allowedHosts"
    },
    "ConnectionStrings": {
      "$ref": "#/definitions/connectionStrings"
    },
    "ReverseProxy": {
      "type": "object",
      "description": "Reverse proxy configuration for routes and clusters.",
      "properties": {
        "Routes": {
          "type": "object",
          "description": "Named routes that direct incoming requests to clusters.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "ClusterId": {
                  "type": "string",
                  "description": "Name of the cluster this route points to."
                },
                "Order": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "Order value for this route. Routes with lower numbers take precedence over higher numbers."
                },
                "MaxRequestBodySize": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "An optional override for how large request bodies can be in bytes."
                },
                "AuthorizationPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which authorization policy applies, e.g. \u0027Default\u0027 or \u0027Anonymous\u0027."
                },
                "RateLimiterPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the RateLimiterPolicy to apply to this route."
                },
                "OutputCachePolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the OutputCachePolicy to apply to this route."
                },
                "Timeout": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                  "description": "The Timeout to apply to this route. This overrides any system defaults. Setting both Timeout and TimeoutPolicy is an error. Format: \u0027hh:mm:ss\u0027."
                },
                "TimeoutPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which timeout policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027. Setting both Timeout and TimeoutPolicy is an error."
                },
                "CorsPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which CORS policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027."
                },
                "Match": {
                  "type": "object",
                  "properties": {
                    "Path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path pattern using ASP.NET route template syntax, e.g. \u0027/something/{**remainder}\u0027."
                    },
                    "Hosts": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "Only match requests with the given Host header. Supports wildcards and ports. For unicode host names, do not use punycode.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Methods": {
                      "description": "Allowed HTTP methods.",
                      "items": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "DELETE",
                              "GET",
                              "HEAD",
                              "OPTIONS",
                              "PATCH",
                              "POST",
                              "PUT",
                              "TRACE"
                            ]
                          },
                          {
                            "type": [
                              "array",
                              "null"
                            ]
                          }
                        ]
                      }
                    },
                    "Headers": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of header match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Header name."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the header values should be matched.",
                            "enum": [
                              "ExactHeader",
                              "HeaderPrefix",
                              "Contains",
                              "NotContains",
                              "Exists",
                              "NotExists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "QueryParameters": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of query string match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Name of the query parameter."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the query parameter values should be matched.",
                            "enum": [
                              "Exact",
                              "Contains",
                              "NotContains",
                              "Prefix",
                              "Exists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false,
                  "anyOf": [
                    {
                      "required": [
                        "Path"
                      ]
                    },
                    {
                      "required": [
                        "Hosts"
                      ]
                    }
                  ]
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom route logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "Transforms": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "description": "List of transform objects for request customization.",
                  "items": {
                    "description": "A single transform definition.",
                    "anyOf": [
                      {
                        "type": [
                          "object",
                          "null"
                        ],
                        "$comment": "Fallback that matches any custom user-defined transforms.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "not": {}
                          },
                          "RequestHeaderOriginalHost": {
                            "not": {}
                          },
                          "RequestHeader": {
                            "not": {}
                          },
                          "PathRemovePrefix": {
                            "not": {}
                          },
                          "PathSet": {
                            "not": {}
                          },
                          "PathPrefix": {
                            "not": {}
                          },
                          "QueryRouteParameter": {
                            "not": {}
                          },
                          "PathPattern": {
                            "not": {}
                          },
                          "QueryValueParameter": {
                            "not": {}
                          },
                          "QueryRemoveParameter": {
                            "not": {}
                          },
                          "HttpMethodChange": {
                            "not": {}
                          },
                          "RequestHeaderRouteValue": {
                            "not": {}
                          },
                          "RequestHeaderRemove": {
                            "not": {}
                          },
                          "RequestHeadersAllowed": {
                            "not": {}
                          },
                          "X-Forwarded": {
                            "not": {}
                          },
                          "Forwarded": {
                            "not": {}
                          },
                          "ClientCert": {
                            "not": {}
                          },
                          "ResponseHeadersCopy": {
                            "not": {}
                          },
                          "ResponseHeader": {
                            "not": {}
                          },
                          "ResponseHeaderRemove": {
                            "not": {}
                          },
                          "ResponseHeadersAllowed": {
                            "not": {}
                          },
                          "ResponseTrailersCopy": {
                            "not": {}
                          },
                          "ResponseTrailer": {
                            "not": {}
                          },
                          "ResponseTrailerRemove": {
                            "not": {}
                          },
                          "ResponseTrailersAllowed": {
                            "not": {}
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Sets whether incoming request headers are copied to the outbound request.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all request headers to outbound request."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Specifies if the incoming request Host header should be copied to the proxy request.",
                        "properties": {
                          "RequestHeaderOriginalHost": {
                            "type": "boolean",
                            "description": "If true, preserve the original Host header; otherwise the destination\u0027s host is used."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderOriginalHost"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a request header.",
                        "properties": {
                          "RequestHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given request header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given request header."
                          },
                          "Remove": {
                            "type": "boolean",
                            "description": "Removes the header if true."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Append"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Remove"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that removes a specified prefix from the request path.",
                        "properties": {
                          "PathRemovePrefix": {
                            "type": "string",
                            "description": "Prefix to remove from the existing request path."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathRemovePrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path with the provided value.",
                        "properties": {
                          "PathSet": {
                            "type": "string",
                            "description": "Sets the request path to this value."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathSet"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds the specified prefix to the request path.",
                        "properties": {
                          "PathPrefix": {
                            "type": "string",
                            "description": "Path prefix to add."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds or replaces a query string parameter with a value from the route configuration.",
                        "properties": {
                          "QueryRouteParameter": {
                            "type": "string",
                            "description": "Specifies the query parameter name to add or replace."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Name of the route paramter to set the query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Name of the route paramter to append to the query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path using a pattern template, replacing {} segments with the route value.",
                        "properties": {
                          "PathPattern": {
                            "type": "string",
                            "description": "A path template starting with a \u0027/\u0027, e.g. \u0027/my/{plugin}/api/{**remainder}\u0027."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPattern"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces parameters in the request query string.",
                        "properties": {
                          "QueryValueParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryValueParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryValueParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified parameter from the request query string.",
                        "properties": {
                          "QueryRemoveParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "QueryRemoveParameter"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Changes the http method used in the request.",
                        "properties": {
                          "HttpMethodChange": {
                            "description": "The HTTP method to replace.",
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "DELETE",
                                  "GET",
                                  "HEAD",
                                  "OPTIONS",
                                  "PATCH",
                                  "POST",
                                  "PUT",
                                  "TRACE"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "Set": {
                            "type": "string",
                            "description": "The new HTTP method."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "HttpMethodChange",
                          "Set"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces a header with a value from the route configuration.",
                        "properties": {
                          "RequestHeaderRouteValue": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Route value to set the given header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Route value to append to the given header."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the request.",
                        "properties": {
                          "RequestHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most request headers to the proxy request by default, this transform disables RequestHeadersCopy and only copies the given headers.",
                        "properties": {
                          "RequestHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds headers with information about the original client request.",
                        "properties": {
                          "X-Forwarded": {
                            "type": "string",
                            "description": "Default action to apply to all X-Forwarded-* headers.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "For": {
                            "type": "string",
                            "description": "Action to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Proto": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Proto\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Host": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Host\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Prefix": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Prefix\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "HeaderPrefix": {
                            "type": "string",
                            "description": "The header name prefix.",
                            "default": "X-Forwarded-"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "X-Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds a header with information about the original client request.",
                        "properties": {
                          "Forwarded": {
                            "type": "string",
                            "pattern": "^(?:(?:for|by|proto|host),?)\u002B$",
                            "description": "A comma separated list containing any of these values: \u0027for,by,proto,host\u0027."
                          },
                          "ForFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "ByFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "Action": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Forwarded\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Forwards the client cert used on the inbound connection as a header to the destination.",
                        "properties": {
                          "ClientCert": {
                            "type": "string",
                            "description": "The header name to use for the forwarded client cert."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ClientCert"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether response headers are copied from the original response.",
                        "properties": {
                          "ResponseHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response header.",
                        "properties": {
                          "ResponseHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response header."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseHeader",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the response.",
                        "properties": {
                          "ResponseHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response headers to the proxy response by default, this transform disables ResponseHeadersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether trailing response headers are copied from the original response.",
                        "properties": {
                          "ResponseTrailersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all trailing response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response trailer.",
                        "properties": {
                          "ResponseTrailer": {
                            "type": "string",
                            "description": "The trailer name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response trailer to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response trailer."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseTrailer",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseTrailer",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified trailer from the response.",
                        "properties": {
                          "ResponseTrailerRemove": {
                            "type": "string",
                            "description": "The trailer name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be removed for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailerRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response trailers to the proxy response by default, this transform disables ResponseTrailersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseTrailersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed trailer names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersAllowed"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "ClusterId",
                "Match"
              ],
              "additionalProperties": false
            }
          }
        },
        "Clusters": {
          "type": "object",
          "description": "Named clusters describing destinations.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "Destinations": {
                  "type": "object",
                  "description": "Named destinations where traffic is forwarded.",
                  "patternProperties": {
                    ".": {
                      "type": "object",
                      "properties": {
                        "Address": {
                          "type": "string",
                          "description": "Destination address (must include scheme)."
                        },
                        "Health": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional override URL accepting active health check probes."
                        },
                        "Host": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional fallback host header value used if a host is not already specified by request transforms."
                        },
                        "Metadata": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Arbitrary key-value pairs for custom destination logic.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "Address"
                      ]
                    }
                  }
                },
                "LoadBalancingPolicy": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "PowerOfTwoChoices",
                        "FirstAlphabetical",
                        "Random",
                        "RoundRobin",
                        "LeastRequests"
                      ]
                    },
                    {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  ],
                  "description": "Determines traffic distribution among destinations."
                },
                "SessionAffinity": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Session affinity is a mechanism to bind (affinitize) a causally related request sequence to the destination that handled the first request when the load is balanced among several destinations.",
                  "properties": {
                    "Enabled": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "Policy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HashCookie",
                            "ArrCookie",
                            "Cookie",
                            "CustomHeader"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Determines how the session will be stored and retrieved."
                    },
                    "FailurePolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Redistribute",
                            "Return503Error"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Strategy for handling a missing destination for an affinitized request."
                    },
                    "AffinityKeyName": {
                      "type": "string",
                      "description": "Identifies the name of the field where the affinity value is stored (cookie or header name)."
                    },
                    "Cookie": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "Domain": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the domain of the cookie."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the path of the cookie."
                        },
                        "Expiration": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the expiration of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "MaxAge": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the maximum age of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "SecurePolicy": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Always",
                            "None",
                            "SameAsRequest"
                          ],
                          "description": "Specifies the Secure attribute of the cookie."
                        },
                        "HttpOnly": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is accessible by client-side script."
                        },
                        "SameSite": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Lax",
                            "None",
                            "Strict",
                            "Unspecified"
                          ],
                          "description": "Specifies the SameSite attribute of the cookie."
                        },
                        "IsEssential": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is essential for the application to function correctly. If true then consent policy checks may be bypassed."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "AffinityKeyName"
                  ]
                },
                "HealthCheck": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Health check configuration for destinations.",
                  "properties": {
                    "Active": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Active health checks are based on sending health probing requests.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if active health checks are enabled.",
                          "default": false
                        },
                        "Interval": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of sending health probing requests. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:15"
                        },
                        "Timeout": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of waiting for a health check response. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:10"
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "ConsecutiveFailures"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "HTTP health check endpoint path.",
                          "default": "/"
                        },
                        "Query": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Query string to append to the probe, including the leading \u0027?\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "Passive": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Passive health checks are based on observing the health of the responses from the destination.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if passive health checks are enabled.",
                          "default": false
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "TransportFailureRate"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "ReactivationPeriod": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period after which an unhealthy destination reverts back to an Unknown health state. Format: \u0027hh:mm:ss\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "AvailableDestinationsPolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HealthyAndUnknown",
                            "HealthyOrPanic"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "HttpClient": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Configuration for outbound HTTP connections.",
                  "properties": {
                    "SslProtocols": {
                      "type": "array",
                      "description": "Specifies the SSL protocols to use.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "DangerousAcceptAnyServerCertificate": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines whether the server\u0027s SSL certificate validity is checked by the client. Setting it to true completely disables validation.",
                      "default": false
                    },
                    "MaxConnectionsPerServer": {
                      "type": [
                        "number",
                        "null"
                      ],
                      "description": "Specifies the maximum number of connections per server."
                    },
                    "EnableMultipleHttp2Connections": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if multiple HTTP/2 connections are enabled.",
                      "default": true
                    },
                    "RequestHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of request headers, e.g. \u0027utf-8\u0027."
                    },
                    "ResponseHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of response headers, e.g. \u0027utf-8\u0027."
                    },
                    "WebProxy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Config used to construct a System.Net.WebProxy instance used for outgoing requests.",
                      "properties": {
                        "Address": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The URI of the proxy server."
                        },
                        "BypassOnLocal": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, bypasses the proxy for local addresses.",
                          "default": false
                        },
                        "UseDefaultCredentials": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, sends CredentialCache.DefaultCredentials with requests.",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "HttpRequest": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Options controlling requests sent to destinations.",
                  "properties": {
                    "ActivityTimeout": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                      "description": "Specifies how long a request is allowed to remain idle between any operation completing, after which it will be canceled. Format: \u0027hh:mm:ss\u0027.",
                      "default": "00:01:40"
                    },
                    "Version": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Preferred version of the outgoing request.",
                      "default": "2.0"
                    },
                    "VersionPolicy": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The policy applied to version selection, e.g. whether to prefer downgrades, upgrades or request an exact version.",
                      "default": "RequestVersionOrLower",
                      "enum": [
                        "RequestVersionExact",
                        "RequestVersionOrLower",
                        "RequestVersionOrHigher"
                      ]
                    },
                    "AllowResponseBuffering": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if response buffering is allowed."
                    }
                  },
                  "additionalProperties": false
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom cluster logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "title": "JSON schema ASP.NET Core\u0027s appsettings.json file",
  "type": "object"
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\AppSettingsSchema.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\CombinedComponentSchema.json =====
{
  "properties": {
    "ReverseProxy": {
      "type": "object",
      "description": "Reverse proxy configuration for routes and clusters.",
      "properties": {
        "Routes": {
          "type": "object",
          "description": "Named routes that direct incoming requests to clusters.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "ClusterId": {
                  "type": "string",
                  "description": "Name of the cluster this route points to."
                },
                "Order": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "Order value for this route. Routes with lower numbers take precedence over higher numbers."
                },
                "MaxRequestBodySize": {
                  "type": [
                    "number",
                    "null"
                  ],
                  "description": "An optional override for how large request bodies can be in bytes."
                },
                "AuthorizationPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which authorization policy applies, e.g. \u0027Default\u0027 or \u0027Anonymous\u0027."
                },
                "RateLimiterPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the RateLimiterPolicy to apply to this route."
                },
                "OutputCachePolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "The name of the OutputCachePolicy to apply to this route."
                },
                "Timeout": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                  "description": "The Timeout to apply to this route. This overrides any system defaults. Setting both Timeout and TimeoutPolicy is an error. Format: \u0027hh:mm:ss\u0027."
                },
                "TimeoutPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which timeout policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027. Setting both Timeout and TimeoutPolicy is an error."
                },
                "CorsPolicy": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Specifies which CORS policy applies, e.g. \u0027Default\u0027 or \u0027Disable\u0027."
                },
                "Match": {
                  "type": "object",
                  "properties": {
                    "Path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path pattern using ASP.NET route template syntax, e.g. \u0027/something/{**remainder}\u0027."
                    },
                    "Hosts": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "Only match requests with the given Host header. Supports wildcards and ports. For unicode host names, do not use punycode.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "Methods": {
                      "description": "Allowed HTTP methods.",
                      "items": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "DELETE",
                              "GET",
                              "HEAD",
                              "OPTIONS",
                              "PATCH",
                              "POST",
                              "PUT",
                              "TRACE"
                            ]
                          },
                          {
                            "type": [
                              "array",
                              "null"
                            ]
                          }
                        ]
                      }
                    },
                    "Headers": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of header match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Header name."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the header values should be matched.",
                            "enum": [
                              "ExactHeader",
                              "HeaderPrefix",
                              "Contains",
                              "NotContains",
                              "Exists",
                              "NotExists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "QueryParameters": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "List of query string match conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Name": {
                            "type": "string",
                            "description": "Name of the query parameter."
                          },
                          "Values": {
                            "type": "array",
                            "description": "Matches against any of these values.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Mode": {
                            "type": "string",
                            "description": "How the query parameter values should be matched.",
                            "enum": [
                              "Exact",
                              "Contains",
                              "NotContains",
                              "Prefix",
                              "Exists"
                            ]
                          },
                          "IsCaseSensitive": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "Name"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false,
                  "anyOf": [
                    {
                      "required": [
                        "Path"
                      ]
                    },
                    {
                      "required": [
                        "Hosts"
                      ]
                    }
                  ]
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom route logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "Transforms": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "description": "List of transform objects for request customization.",
                  "items": {
                    "description": "A single transform definition.",
                    "anyOf": [
                      {
                        "type": [
                          "object",
                          "null"
                        ],
                        "$comment": "Fallback that matches any custom user-defined transforms.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "not": {}
                          },
                          "RequestHeaderOriginalHost": {
                            "not": {}
                          },
                          "RequestHeader": {
                            "not": {}
                          },
                          "PathRemovePrefix": {
                            "not": {}
                          },
                          "PathSet": {
                            "not": {}
                          },
                          "PathPrefix": {
                            "not": {}
                          },
                          "QueryRouteParameter": {
                            "not": {}
                          },
                          "PathPattern": {
                            "not": {}
                          },
                          "QueryValueParameter": {
                            "not": {}
                          },
                          "QueryRemoveParameter": {
                            "not": {}
                          },
                          "HttpMethodChange": {
                            "not": {}
                          },
                          "RequestHeaderRouteValue": {
                            "not": {}
                          },
                          "RequestHeaderRemove": {
                            "not": {}
                          },
                          "RequestHeadersAllowed": {
                            "not": {}
                          },
                          "X-Forwarded": {
                            "not": {}
                          },
                          "Forwarded": {
                            "not": {}
                          },
                          "ClientCert": {
                            "not": {}
                          },
                          "ResponseHeadersCopy": {
                            "not": {}
                          },
                          "ResponseHeader": {
                            "not": {}
                          },
                          "ResponseHeaderRemove": {
                            "not": {}
                          },
                          "ResponseHeadersAllowed": {
                            "not": {}
                          },
                          "ResponseTrailersCopy": {
                            "not": {}
                          },
                          "ResponseTrailer": {
                            "not": {}
                          },
                          "ResponseTrailerRemove": {
                            "not": {}
                          },
                          "ResponseTrailersAllowed": {
                            "not": {}
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Sets whether incoming request headers are copied to the outbound request.",
                        "properties": {
                          "RequestHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all request headers to outbound request."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Specifies if the incoming request Host header should be copied to the proxy request.",
                        "properties": {
                          "RequestHeaderOriginalHost": {
                            "type": "boolean",
                            "description": "If true, preserve the original Host header; otherwise the destination\u0027s host is used."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderOriginalHost"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a request header.",
                        "properties": {
                          "RequestHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given request header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given request header."
                          },
                          "Remove": {
                            "type": "boolean",
                            "description": "Removes the header if true."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Append"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeader",
                              "Remove"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that removes a specified prefix from the request path.",
                        "properties": {
                          "PathRemovePrefix": {
                            "type": "string",
                            "description": "Prefix to remove from the existing request path."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathRemovePrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path with the provided value.",
                        "properties": {
                          "PathSet": {
                            "type": "string",
                            "description": "Sets the request path to this value."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathSet"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds the specified prefix to the request path.",
                        "properties": {
                          "PathPrefix": {
                            "type": "string",
                            "description": "Path prefix to add."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPrefix"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that adds or replaces a query string parameter with a value from the route configuration.",
                        "properties": {
                          "QueryRouteParameter": {
                            "type": "string",
                            "description": "Specifies the query parameter name to add or replace."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Name of the route paramter to set the query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Name of the route paramter to append to the query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryRouteParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform that replaces the entire request path using a pattern template, replacing {} segments with the route value.",
                        "properties": {
                          "PathPattern": {
                            "type": "string",
                            "description": "A path template starting with a \u0027/\u0027, e.g. \u0027/my/{plugin}/api/{**remainder}\u0027."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "PathPattern"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces parameters in the request query string.",
                        "properties": {
                          "QueryValueParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given query parameter to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given query parameter."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "QueryValueParameter",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "QueryValueParameter",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified parameter from the request query string.",
                        "properties": {
                          "QueryRemoveParameter": {
                            "type": "string",
                            "description": "Name of a query string parameter."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "QueryRemoveParameter"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Changes the http method used in the request.",
                        "properties": {
                          "HttpMethodChange": {
                            "description": "The HTTP method to replace.",
                            "anyOf": [
                              {
                                "type": "string",
                                "enum": [
                                  "DELETE",
                                  "GET",
                                  "HEAD",
                                  "OPTIONS",
                                  "PATCH",
                                  "POST",
                                  "PUT",
                                  "TRACE"
                                ]
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "Set": {
                            "type": "string",
                            "description": "The new HTTP method."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "HttpMethodChange",
                          "Set"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds or replaces a header with a value from the route configuration.",
                        "properties": {
                          "RequestHeaderRouteValue": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Route value to set the given header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Route value to append to the given header."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "RequestHeaderRouteValue",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the request.",
                        "properties": {
                          "RequestHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most request headers to the proxy request by default, this transform disables RequestHeadersCopy and only copies the given headers.",
                        "properties": {
                          "RequestHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "RequestHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds headers with information about the original client request.",
                        "properties": {
                          "X-Forwarded": {
                            "type": "string",
                            "description": "Default action to apply to all X-Forwarded-* headers.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "For": {
                            "type": "string",
                            "description": "Action to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Proto": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Proto\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Host": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Host\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "Prefix": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Prefix\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          },
                          "HeaderPrefix": {
                            "type": "string",
                            "description": "The header name prefix.",
                            "default": "X-Forwarded-"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "X-Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Adds a header with information about the original client request.",
                        "properties": {
                          "Forwarded": {
                            "type": "string",
                            "pattern": "^(?:(?:for|by|proto|host),?)\u002B$",
                            "description": "A comma separated list containing any of these values: \u0027for,by,proto,host\u0027."
                          },
                          "ForFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "ByFormat": {
                            "type": "string",
                            "description": "Format to apply to the \u0027For\u0027 header.",
                            "enum": [
                              "Random",
                              "RandomAndPort",
                              "RandomAndRandomPort",
                              "Unknown",
                              "UnknownAndPort",
                              "UnknownAndRandomPort",
                              "Ip",
                              "IpAndPort",
                              "IpAndRandomPort"
                            ]
                          },
                          "Action": {
                            "type": "string",
                            "description": "Action to apply to the \u0027Forwarded\u0027 header.",
                            "enum": [
                              "Set",
                              "Append",
                              "Remove",
                              "Off"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "Forwarded"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Forwards the client cert used on the inbound connection as a header to the destination.",
                        "properties": {
                          "ClientCert": {
                            "type": "string",
                            "description": "The header name to use for the forwarded client cert."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ClientCert"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether response headers are copied from the original response.",
                        "properties": {
                          "ResponseHeadersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response header.",
                        "properties": {
                          "ResponseHeader": {
                            "type": "string",
                            "description": "The header name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response header to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response header."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseHeader",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseHeader",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified header from the response.",
                        "properties": {
                          "ResponseHeaderRemove": {
                            "type": "string",
                            "description": "The header name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response header should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeaderRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response headers to the proxy response by default, this transform disables ResponseHeadersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseHeadersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed header names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseHeadersAllowed"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform controlling whether trailing response headers are copied from the original response.",
                        "properties": {
                          "ResponseTrailersCopy": {
                            "type": "boolean",
                            "description": "If true, copies all trailing response headers from the destination back to the client."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersCopy"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Transform for setting, appending, or removing a response trailer.",
                        "properties": {
                          "ResponseTrailer": {
                            "type": "string",
                            "description": "The trailer name to operate on."
                          },
                          "Set": {
                            "type": "string",
                            "description": "Value to set the given response trailer to."
                          },
                          "Append": {
                            "type": "string",
                            "description": "Value to append to the given response trailer."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be included for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "anyOf": [
                          {
                            "required": [
                              "ResponseTrailer",
                              "Set"
                            ]
                          },
                          {
                            "required": [
                              "ResponseTrailer",
                              "Append"
                            ]
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "description": "Removes the specified trailer from the response.",
                        "properties": {
                          "ResponseTrailerRemove": {
                            "type": "string",
                            "description": "The trailer name."
                          },
                          "When": {
                            "type": "string",
                            "enum": [
                              "Success",
                              "Always",
                              "Failure"
                            ],
                            "description": "Specifies if the response trailer should be removed for all, successful, or failure responses. Any response with a status code less than 400 is considered a success."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailerRemove"
                        ]
                      },
                      {
                        "type": "object",
                        "description": "YARP copies most response trailers to the proxy response by default, this transform disables ResponseTrailersCopy and only copies the given headers.",
                        "properties": {
                          "ResponseTrailersAllowed": {
                            "type": "string",
                            "pattern": "^[a-zA-Z0-9!#$%\u0026\u0027*\u002B-.^_\u0060|~;]\u002B$",
                            "description": "A semicolon separated list of allowed trailer names."
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "ResponseTrailersAllowed"
                        ]
                      }
                    ]
                  }
                }
              },
              "required": [
                "ClusterId",
                "Match"
              ],
              "additionalProperties": false
            }
          }
        },
        "Clusters": {
          "type": "object",
          "description": "Named clusters describing destinations.",
          "patternProperties": {
            ".": {
              "type": "object",
              "properties": {
                "Destinations": {
                  "type": "object",
                  "description": "Named destinations where traffic is forwarded.",
                  "patternProperties": {
                    ".": {
                      "type": "object",
                      "properties": {
                        "Address": {
                          "type": "string",
                          "description": "Destination address (must include scheme)."
                        },
                        "Health": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional override URL accepting active health check probes."
                        },
                        "Host": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Optional fallback host header value used if a host is not already specified by request transforms."
                        },
                        "Metadata": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Arbitrary key-value pairs for custom destination logic.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "Address"
                      ]
                    }
                  }
                },
                "LoadBalancingPolicy": {
                  "anyOf": [
                    {
                      "type": "string",
                      "enum": [
                        "PowerOfTwoChoices",
                        "FirstAlphabetical",
                        "Random",
                        "RoundRobin",
                        "LeastRequests"
                      ]
                    },
                    {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  ],
                  "description": "Determines traffic distribution among destinations."
                },
                "SessionAffinity": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Session affinity is a mechanism to bind (affinitize) a causally related request sequence to the destination that handled the first request when the load is balanced among several destinations.",
                  "properties": {
                    "Enabled": {
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "Policy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HashCookie",
                            "ArrCookie",
                            "Cookie",
                            "CustomHeader"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Determines how the session will be stored and retrieved."
                    },
                    "FailurePolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "Redistribute",
                            "Return503Error"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "description": "Strategy for handling a missing destination for an affinitized request."
                    },
                    "AffinityKeyName": {
                      "type": "string",
                      "description": "Identifies the name of the field where the affinity value is stored (cookie or header name)."
                    },
                    "Cookie": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "Domain": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the domain of the cookie."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Specifies the path of the cookie."
                        },
                        "Expiration": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the expiration of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "MaxAge": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Specifies the maximum age of the cookie. Format: \u0027hh:mm:ss\u0027."
                        },
                        "SecurePolicy": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Always",
                            "None",
                            "SameAsRequest"
                          ],
                          "description": "Specifies the Secure attribute of the cookie."
                        },
                        "HttpOnly": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is accessible by client-side script."
                        },
                        "SameSite": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Lax",
                            "None",
                            "Strict",
                            "Unspecified"
                          ],
                          "description": "Specifies the SameSite attribute of the cookie."
                        },
                        "IsEssential": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Specifies whether a cookie is essential for the application to function correctly. If true then consent policy checks may be bypassed."
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "AffinityKeyName"
                  ]
                },
                "HealthCheck": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Health check configuration for destinations.",
                  "properties": {
                    "Active": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Active health checks are based on sending health probing requests.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if active health checks are enabled.",
                          "default": false
                        },
                        "Interval": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of sending health probing requests. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:15"
                        },
                        "Timeout": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period of waiting for a health check response. Format: \u0027hh:mm:ss\u0027.",
                          "default": "00:00:10"
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "ConsecutiveFailures"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "Path": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "HTTP health check endpoint path.",
                          "default": "/"
                        },
                        "Query": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Query string to append to the probe, including the leading \u0027?\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "Passive": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Passive health checks are based on observing the health of the responses from the destination.",
                      "properties": {
                        "Enabled": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "Determines if passive health checks are enabled.",
                          "default": false
                        },
                        "Policy": {
                          "anyOf": [
                            {
                              "type": "string",
                              "enum": [
                                "TransportFailureRate"
                              ]
                            },
                            {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          ],
                          "description": "Determines the health check policy."
                        },
                        "ReactivationPeriod": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                          "description": "Period after which an unhealthy destination reverts back to an Unknown health state. Format: \u0027hh:mm:ss\u0027."
                        }
                      },
                      "additionalProperties": false
                    },
                    "AvailableDestinationsPolicy": {
                      "anyOf": [
                        {
                          "type": "string",
                          "enum": [
                            "HealthyAndUnknown",
                            "HealthyOrPanic"
                          ]
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "HttpClient": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Configuration for outbound HTTP connections.",
                  "properties": {
                    "SslProtocols": {
                      "type": "array",
                      "description": "Specifies the SSL protocols to use.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "DangerousAcceptAnyServerCertificate": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines whether the server\u0027s SSL certificate validity is checked by the client. Setting it to true completely disables validation.",
                      "default": false
                    },
                    "MaxConnectionsPerServer": {
                      "type": [
                        "number",
                        "null"
                      ],
                      "description": "Specifies the maximum number of connections per server."
                    },
                    "EnableMultipleHttp2Connections": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if multiple HTTP/2 connections are enabled.",
                      "default": true
                    },
                    "RequestHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of request headers, e.g. \u0027utf-8\u0027."
                    },
                    "ResponseHeaderEncoding": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Specifies the encoding of response headers, e.g. \u0027utf-8\u0027."
                    },
                    "WebProxy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "description": "Config used to construct a System.Net.WebProxy instance used for outgoing requests.",
                      "properties": {
                        "Address": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "The URI of the proxy server."
                        },
                        "BypassOnLocal": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, bypasses the proxy for local addresses.",
                          "default": false
                        },
                        "UseDefaultCredentials": {
                          "type": [
                            "boolean",
                            "null"
                          ],
                          "description": "If true, sends CredentialCache.DefaultCredentials with requests.",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "HttpRequest": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Options controlling requests sent to destinations.",
                  "properties": {
                    "ActivityTimeout": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "pattern": "^\\d*?\\.?\\d\\d:\\d\\d:\\d\\d\\.?\\d{0,7}$",
                      "description": "Specifies how long a request is allowed to remain idle between any operation completing, after which it will be canceled. Format: \u0027hh:mm:ss\u0027.",
                      "default": "00:01:40"
                    },
                    "Version": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Preferred version of the outgoing request.",
                      "default": "2.0"
                    },
                    "VersionPolicy": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "The policy applied to version selection, e.g. whether to prefer downgrades, upgrades or request an exact version.",
                      "default": "RequestVersionOrLower",
                      "enum": [
                        "RequestVersionExact",
                        "RequestVersionOrLower",
                        "RequestVersionOrHigher"
                      ]
                    },
                    "AllowResponseBuffering": {
                      "type": [
                        "boolean",
                        "null"
                      ],
                      "description": "Determines if response buffering is allowed."
                    }
                  },
                  "additionalProperties": false
                },
                "Metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Arbitrary key-value pairs for custom cluster logic.",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "type": "object",
  "SourceSegments": "C:\\Users\\mcrae\\.nuget\\packages\\yarp.reverseproxy\\2.3.0\\ConfigurationSchema.json"
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\CombinedComponentSchema.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\MvcTestingAppManifest.json =====
{
  "ThoughtGarden.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api"
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\MvcTestingAppManifest.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\ThoughtGarden.Api.Tests.AssemblyInfo.cs =====
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Reflection;

[assembly: System.Reflection.AssemblyCompanyAttribute("ThoughtGarden.Api.Tests")]
[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+ef38f4ebe8c0ef0684968a36864bc828733da418")]
[assembly: System.Reflection.AssemblyProductAttribute("ThoughtGarden.Api.Tests")]
[assembly: System.Reflection.AssemblyTitleAttribute("ThoughtGarden.Api.Tests")]
[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]

// Generated by the MSBuild WriteCodeFragment class.

===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\ThoughtGarden.Api.Tests.AssemblyInfo.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\ThoughtGarden.Api.Tests.GlobalUsings.g.cs =====
// <auto-generated/>
global using global::GreenDonut;
global using global::HotChocolate;
global using global::HotChocolate.Types;
global using global::HotChocolate.Types.Relay;
global using global::System;
global using global::System.Collections.Generic;
global using global::System.IO;
global using global::System.Linq;
global using global::System.Net.Http;
global using global::System.Threading;
global using global::System.Threading.Tasks;
global using global::Xunit;
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\ThoughtGarden.Api.Tests.GlobalUsings.g.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\ThoughtGarden.Api.Tests.sourcelink.json =====
{"documents":{"C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\*":"https://raw.githubusercontent.com/mcrae89/thought_garden_backend/ef38f4ebe8c0ef0684968a36864bc828733da418/*"}}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\Debug\net8.0\ThoughtGarden.Api.Tests.sourcelink.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\project.assets.json =====
{
  "version": 3,
  "targets": {
    "net8.0": {
      "BCrypt.Net-Next/4.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/BCrypt.Net-Next.dll": {
            "related": ".xml"
          }
        }
      },
      "BouncyCastle.Cryptography/2.4.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/BouncyCastle.Cryptography.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/BouncyCastle.Cryptography.dll": {
            "related": ".xml"
          }
        }
      },
      "ChilliCream.Nitro.App/28.0.7": {
        "type": "package",
        "dependencies": {
          "Yarp.ReverseProxy": "2.3.0"
        },
        "compile": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {}
        },
        "runtime": {
          "lib/net8.0/ChilliCream.Nitro.App.dll": {}
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "coverlet.collector/6.0.0": {
        "type": "package",
        "build": {
          "build/netstandard1.0/coverlet.collector.targets": {}
        }
      },
      "Docker.DotNet/3.125.5": {
        "type": "package",
        "dependencies": {
          "Newtonsoft.Json": "12.0.3",
          "System.Buffers": "4.5.1",
          "System.Threading.Tasks.Extensions": "4.5.4"
        },
        "compile": {
          "lib/netstandard2.0/Docker.DotNet.dll": {
            "related": ".pdb"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Docker.DotNet.dll": {
            "related": ".pdb"
          }
        }
      },
      "Docker.DotNet.Enhanced/3.128.5": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.3",
          "System.IO.Pipelines": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Docker.DotNet.dll": {}
        },
        "runtime": {
          "lib/net8.0/Docker.DotNet.dll": {}
        }
      },
      "Docker.DotNet.Enhanced.X509/3.128.5": {
        "type": "package",
        "dependencies": {
          "Docker.DotNet.Enhanced": "3.128.5"
        },
        "compile": {
          "lib/net8.0/Docker.DotNet.X509.dll": {}
        },
        "runtime": {
          "lib/net8.0/Docker.DotNet.X509.dll": {}
        }
      },
      "DotNet.Testcontainers/1.6.0": {
        "type": "package",
        "dependencies": {
          "Docker.DotNet": "3.125.5",
          "Microsoft.Bcl.AsyncInterfaces": "1.1.1",
          "Microsoft.Extensions.Logging.Abstractions": "3.1.23",
          "SharpZipLib": "1.3.3",
          "System.Text.Json": "4.7.2"
        },
        "compile": {
          "lib/netstandard2.1/DotNet.Testcontainers.dll": {}
        },
        "runtime": {
          "lib/netstandard2.1/DotNet.Testcontainers.dll": {}
        }
      },
      "EFCore.NamingConventions/9.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "[9.0.0, 10.0.0)",
          "Microsoft.EntityFrameworkCore.Relational": "[9.0.0, 10.0.0)",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.0"
        },
        "compile": {
          "lib/net8.0/EFCore.NamingConventions.dll": {}
        },
        "runtime": {
          "lib/net8.0/EFCore.NamingConventions.dll": {}
        }
      },
      "GreenDonut/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "compile": {
          "lib/net8.0/GreenDonut.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Abstractions/15.1.9": {
        "type": "package",
        "compile": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9"
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data.Abstractions/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9"
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data.EntityFramework/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "8.0.0"
        },
        "compile": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        }
      },
      "GreenDonut.Data.Primitives/15.1.9": {
        "type": "package",
        "compile": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/GreenDonut.Data.Primitives.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Authorization": "15.1.9",
          "HotChocolate.CostAnalysis": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9",
          "HotChocolate.Types.CursorPagination.Extensions": "15.1.9",
          "HotChocolate.Types.Mutations": "15.1.9",
          "HotChocolate.Types.Queries": "15.1.9",
          "HotChocolate.Validation": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Abstractions/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Primitives": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.AspNetCore/15.1.9": {
        "type": "package",
        "dependencies": {
          "ChilliCream.Nitro.App": "28.0.7",
          "HotChocolate": "15.1.9",
          "HotChocolate.Subscriptions.InMemory": "15.1.9",
          "HotChocolate.Transport.Sockets": "15.1.9",
          "HotChocolate.Types.Scalars.Upload": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ],
        "build": {
          "build/HotChocolate.AspNetCore.props": {},
          "build/HotChocolate.AspNetCore.targets": {}
        }
      },
      "HotChocolate.AspNetCore.Authorization/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "HotChocolate.Authorization/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Authorization.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.CostAnalysis/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.CostAnalysis.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Data/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Execution.Projections": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/_._": {}
        }
      },
      "HotChocolate.Data.EntityFramework/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.EntityFramework": "15.1.9",
          "HotChocolate": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "Microsoft.EntityFrameworkCore": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Data.EntityFramework.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/_._": {}
        }
      },
      "HotChocolate.Execution/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Fetching": "15.1.9",
          "HotChocolate.Types": "15.1.9",
          "HotChocolate.Utilities.DependencyInjection": "15.1.9",
          "HotChocolate.Validation": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "System.IO.Pipelines": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Execution.Abstractions/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Execution.Projections/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "GreenDonut.Data.Abstractions": "15.1.9",
          "GreenDonut.Data.Primitives": "15.1.9",
          "HotChocolate.Execution": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Execution.Projections.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Features/15.1.9": {
        "type": "package",
        "compile": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Features.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Fetching/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Fetching.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9",
          "HotChocolate.Language.Utf8": "15.1.9",
          "HotChocolate.Language.Visitors": "15.1.9",
          "HotChocolate.Language.Web": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.SyntaxTree/15.1.9": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.SyntaxTree.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.Utf8/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Utf8.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.Visitors/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Visitors.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Language.Web/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.Utf8": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Language.Web.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Primitives/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Primitives.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Subscriptions/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Utilities": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Subscriptions.InMemory/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Subscriptions": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Transport.Sockets/15.1.9": {
        "type": "package",
        "dependencies": {
          "System.IO.Pipelines": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Transport.Sockets.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut": "15.1.9",
          "HotChocolate.Abstractions": "15.1.9",
          "HotChocolate.Features": "15.1.9",
          "HotChocolate.Types.Shared": "15.1.9",
          "HotChocolate.Utilities": "15.1.9",
          "Microsoft.Extensions.DependencyInjection": "8.0.0",
          "Microsoft.Extensions.ObjectPool": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.CursorPagination/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution.Abstractions": "15.1.9",
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
        "type": "package",
        "dependencies": {
          "GreenDonut.Data": "15.1.9",
          "HotChocolate.Types.CursorPagination": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Errors/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Errors.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Mutations/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Mutations.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Queries/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Execution": "15.1.9",
          "HotChocolate.Types.Errors": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Queries.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Scalars.Upload/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Types": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Types.Shared/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Language.SyntaxTree": "15.1.9"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Types.Shared.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Utilities/15.1.9": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Utilities.DependencyInjection/15.1.9": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll": {
            "related": ".xml"
          }
        }
      },
      "HotChocolate.Validation/15.1.9": {
        "type": "package",
        "dependencies": {
          "HotChocolate.Types": "15.1.9",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0"
        },
        "compile": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/HotChocolate.Validation.dll": {
            "related": ".xml"
          }
        }
      },
      "Humanizer.Core/2.14.1": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Humanizer.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols.OpenIdConnect": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Microsoft.AspNetCore.Mvc.Testing/8.0.19": {
        "type": "package",
        "dependencies": {
          "Microsoft.AspNetCore.TestHost": "8.0.19",
          "Microsoft.Extensions.DependencyModel": "8.0.2",
          "Microsoft.Extensions.Hosting": "8.0.1"
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.Mvc.Testing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.Mvc.Testing.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ],
        "build": {
          "buildTransitive/net8.0/Microsoft.AspNetCore.Mvc.Testing.targets": {}
        }
      },
      "Microsoft.AspNetCore.TestHost/8.0.19": {
        "type": "package",
        "dependencies": {
          "System.IO.Pipelines": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.AspNetCore.TestHost.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.AspNetCore.TestHost.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
        "type": "package",
        "compile": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Build.Framework/17.8.3": {
        "type": "package",
        "compile": {
          "ref/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/_._": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Microsoft.Build.Locator/1.7.8": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/Microsoft.Build.Locator.dll": {}
        },
        "build": {
          "build/_._": {}
        }
      },
      "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
        "type": "package",
        "build": {
          "buildTransitive/Microsoft.CodeAnalysis.Analyzers.props": {},
          "buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets": {}
        }
      },
      "Microsoft.CodeAnalysis.Common/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeAnalysis.Analyzers": "3.3.4",
          "System.Collections.Immutable": "7.0.0",
          "System.Reflection.Metadata": "7.0.0",
          "System.Runtime.CompilerServices.Unsafe": "6.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeAnalysis.Common": "[4.8.0]"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.CodeAnalysis.CSharp": "[4.8.0]",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "Microsoft.CodeAnalysis.Workspaces.Common": "[4.8.0]"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Bcl.AsyncInterfaces": "7.0.0",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "System.Composition": "7.0.0",
          "System.IO.Pipelines": "7.0.0",
          "System.Threading.Channels": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll": {
            "related": ".pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Build.Framework": "16.10.0",
          "Microsoft.CodeAnalysis.Common": "[4.8.0]",
          "Microsoft.CodeAnalysis.Workspaces.Common": "[4.8.0]",
          "System.Text.Json": "7.0.3"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".pdb;.runtimeconfig.json;.xml"
          }
        },
        "runtime": {
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll": {
            "related": ".pdb;.runtimeconfig.json;.xml"
          },
          "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll": {
            "related": ".BuildHost.pdb;.BuildHost.runtimeconfig.json;.BuildHost.xml;.pdb;.xml"
          }
        },
        "resource": {
          "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "cs"
          },
          "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "de"
          },
          "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "es"
          },
          "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "fr"
          },
          "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "it"
          },
          "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ja"
          },
          "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ko"
          },
          "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pl"
          },
          "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "ru"
          },
          "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "tr"
          },
          "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.CodeCoverage/17.14.1": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {}
        },
        "runtime": {
          "lib/net8.0/Microsoft.VisualStudio.CodeCoverage.Shim.dll": {}
        },
        "build": {
          "build/netstandard2.0/Microsoft.CodeCoverage.props": {},
          "build/netstandard2.0/Microsoft.CodeCoverage.targets": {}
        }
      },
      "Microsoft.EntityFrameworkCore/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Abstractions": "9.0.8",
          "Microsoft.EntityFrameworkCore.Analyzers": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
        "type": "package"
      },
      "Microsoft.EntityFrameworkCore.Design/9.0.8": {
        "type": "package",
        "dependencies": {
          "Humanizer.Core": "2.14.1",
          "Microsoft.Build.Framework": "17.8.3",
          "Microsoft.Build.Locator": "1.7.8",
          "Microsoft.CodeAnalysis.CSharp": "4.8.0",
          "Microsoft.CodeAnalysis.CSharp.Workspaces": "4.8.0",
          "Microsoft.CodeAnalysis.Workspaces.MSBuild": "4.8.0",
          "Microsoft.EntityFrameworkCore.Relational": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyModel": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8",
          "Mono.TextTemplating": "3.0.0",
          "System.Text.Json": "9.0.8"
        },
        "compile": {
          "lib/net8.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "build/net8.0/Microsoft.EntityFrameworkCore.Design.props": {}
        }
      },
      "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Microsoft.Extensions.Caching.Memory": "9.0.8",
          "Microsoft.Extensions.Configuration.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.EntityFrameworkCore.Tools/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore.Design": "9.0.8"
        }
      },
      "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
        "type": "package",
        "build": {
          "build/_._": {}
        },
        "buildMultiTargeting": {
          "buildMultiTargeting/_._": {}
        }
      },
      "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Caching.Memory/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Caching.Abstractions": "9.0.8",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Binder/8.0.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets": {}
        }
      },
      "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.FileExtensions/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.Json/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Configuration.UserSecrets/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Json": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.props": {},
          "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.targets": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.DependencyModel/9.0.8": {
        "type": "package",
        "dependencies": {
          "System.Text.Encodings.Web": "9.0.8",
          "System.Text.Json": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.DependencyModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Diagnostics.Abstractions": "8.0.1",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Diagnostics.Abstractions/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Options": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Abstractions/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileSystemGlobbing": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.2",
          "Microsoft.Extensions.Configuration.CommandLine": "8.0.0",
          "Microsoft.Extensions.Configuration.EnvironmentVariables": "8.0.0",
          "Microsoft.Extensions.Configuration.FileExtensions": "8.0.1",
          "Microsoft.Extensions.Configuration.Json": "8.0.1",
          "Microsoft.Extensions.Configuration.UserSecrets": "8.0.1",
          "Microsoft.Extensions.DependencyInjection": "8.0.1",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Diagnostics": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.FileProviders.Physical": "8.0.0",
          "Microsoft.Extensions.Hosting.Abstractions": "8.0.1",
          "Microsoft.Extensions.Logging": "8.0.1",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging.Configuration": "8.0.1",
          "Microsoft.Extensions.Logging.Console": "8.0.1",
          "Microsoft.Extensions.Logging.Debug": "8.0.1",
          "Microsoft.Extensions.Logging.EventLog": "8.0.1",
          "Microsoft.Extensions.Logging.EventSource": "8.0.1",
          "Microsoft.Extensions.Options": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Hosting.Abstractions/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Diagnostics.Abstractions": "8.0.1",
          "Microsoft.Extensions.FileProviders.Abstractions": "8.0.0",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection": "9.0.8",
          "Microsoft.Extensions.Logging.Abstractions": "9.0.8",
          "Microsoft.Extensions.Options": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "System.Diagnostics.DiagnosticSource": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets": {}
        }
      },
      "Microsoft.Extensions.Logging.Configuration/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration": "8.0.0",
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.2",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging": "8.0.1",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2",
          "Microsoft.Extensions.Options": "8.0.2",
          "Microsoft.Extensions.Options.ConfigurationExtensions": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Console/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging": "8.0.1",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging.Configuration": "8.0.1",
          "Microsoft.Extensions.Options": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Console.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.Debug/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging": "8.0.1",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventLog/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging": "8.0.1",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2",
          "Microsoft.Extensions.Options": "8.0.2",
          "System.Diagnostics.EventLog": "8.0.1"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Logging.EventSource/8.0.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.2",
          "Microsoft.Extensions.Logging": "8.0.1",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2",
          "Microsoft.Extensions.Options": "8.0.2",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.ObjectPool/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.ObjectPool.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.ObjectPool.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.Extensions.Options/9.0.8": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.DependencyInjection.Abstractions": "9.0.8",
          "Microsoft.Extensions.Primitives": "9.0.8"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/Microsoft.Extensions.Options.targets": {}
        }
      },
      "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Configuration.Abstractions": "8.0.0",
          "Microsoft.Extensions.Configuration.Binder": "8.0.0",
          "Microsoft.Extensions.DependencyInjection.Abstractions": "8.0.0",
          "Microsoft.Extensions.Options": "8.0.0",
          "Microsoft.Extensions.Primitives": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "Microsoft.Extensions.Primitives/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.Extensions.Primitives.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "Microsoft.IdentityModel.Abstractions/8.14.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Logging/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Abstractions": "8.14.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Logging.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Logging": "7.1.2",
          "Microsoft.IdentityModel.Tokens": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.Protocols": "7.1.2",
          "System.IdentityModel.Tokens.Jwt": "7.1.2"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.IdentityModel.Tokens/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.0",
          "Microsoft.IdentityModel.Logging": "8.14.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.IdentityModel.Tokens.dll": {
            "related": ".xml"
          }
        }
      },
      "Microsoft.NET.Test.Sdk/17.14.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.CodeCoverage": "17.14.1",
          "Microsoft.TestPlatform.TestHost": "17.14.1"
        },
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        },
        "build": {
          "build/net8.0/Microsoft.NET.Test.Sdk.props": {},
          "build/net8.0/Microsoft.NET.Test.Sdk.targets": {}
        }
      },
      "Microsoft.OpenApi/1.6.14": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/Microsoft.OpenApi.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Microsoft.TestPlatform.ObjectModel/17.14.1": {
        "type": "package",
        "dependencies": {
          "System.Reflection.Metadata": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {}
        },
        "runtime": {
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {}
        },
        "resource": {
          "lib/net8.0/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/de/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/es/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/it/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/net8.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll": {
            "locale": "zh-Hant"
          }
        }
      },
      "Microsoft.TestPlatform.TestHost/17.14.1": {
        "type": "package",
        "dependencies": {
          "Microsoft.TestPlatform.ObjectModel": "17.14.1",
          "Newtonsoft.Json": "13.0.3"
        },
        "compile": {
          "lib/net8.0/Microsoft.TestPlatform.CommunicationUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.CrossPlatEngine.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.Utilities.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.Common.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {},
          "lib/net8.0/testhost.dll": {
            "related": ".deps.json"
          }
        },
        "runtime": {
          "lib/net8.0/Microsoft.TestPlatform.CommunicationUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.CrossPlatEngine.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll": {},
          "lib/net8.0/Microsoft.TestPlatform.Utilities.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.Common.dll": {},
          "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll": {},
          "lib/net8.0/testhost.dll": {
            "related": ".deps.json"
          }
        },
        "resource": {
          "lib/net8.0/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "cs"
          },
          "lib/net8.0/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "de"
          },
          "lib/net8.0/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "es"
          },
          "lib/net8.0/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "fr"
          },
          "lib/net8.0/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "it"
          },
          "lib/net8.0/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ja"
          },
          "lib/net8.0/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ko"
          },
          "lib/net8.0/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pl"
          },
          "lib/net8.0/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "pt-BR"
          },
          "lib/net8.0/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "ru"
          },
          "lib/net8.0/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "tr"
          },
          "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hans"
          },
          "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll": {
            "locale": "zh-Hant"
          },
          "lib/net8.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll": {
            "locale": "zh-Hant"
          }
        },
        "build": {
          "build/net8.0/Microsoft.TestPlatform.TestHost.props": {},
          "build/net8.0/Microsoft.TestPlatform.TestHost.targets": {}
        }
      },
      "Mono.TextTemplating/3.0.0": {
        "type": "package",
        "dependencies": {
          "System.CodeDom": "6.0.0"
        },
        "compile": {
          "lib/net6.0/_._": {}
        },
        "runtime": {
          "lib/net6.0/Mono.TextTemplating.dll": {}
        },
        "build": {
          "buildTransitive/Mono.TextTemplating.targets": {}
        }
      },
      "Newtonsoft.Json/13.0.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/Newtonsoft.Json.dll": {
            "related": ".xml"
          }
        }
      },
      "Npgsql/9.0.3": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.Logging.Abstractions": "8.0.2"
        },
        "compile": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.dll": {
            "related": ".xml"
          }
        }
      },
      "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
        "type": "package",
        "dependencies": {
          "Microsoft.EntityFrameworkCore": "[9.0.1, 10.0.0)",
          "Microsoft.EntityFrameworkCore.Relational": "[9.0.1, 10.0.0)",
          "Npgsql": "9.0.3"
        },
        "compile": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
            "related": ".xml"
          }
        }
      },
      "SharpZipLib/1.4.2": {
        "type": "package",
        "compile": {
          "lib/net6.0/ICSharpCode.SharpZipLib.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net6.0/ICSharpCode.SharpZipLib.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Snapshooter/1.0.1": {
        "type": "package",
        "dependencies": {
          "Newtonsoft.Json": "13.0.3"
        },
        "compile": {
          "lib/net8.0/Snapshooter.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Snapshooter.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Snapshooter.Xunit/1.0.1": {
        "type": "package",
        "dependencies": {
          "Snapshooter": "1.0.1",
          "xunit.assert": "2.4.2",
          "xunit.core": "2.4.2"
        },
        "compile": {
          "lib/net8.0/Snapshooter.Xunit.dll": {
            "related": ".pdb;.runtimeconfig.json"
          }
        },
        "runtime": {
          "lib/net8.0/Snapshooter.Xunit.dll": {
            "related": ".pdb;.runtimeconfig.json"
          }
        }
      },
      "SSH.NET/2024.2.0": {
        "type": "package",
        "dependencies": {
          "BouncyCastle.Cryptography": "2.4.0"
        },
        "compile": {
          "lib/net8.0/Renci.SshNet.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Renci.SshNet.dll": {
            "related": ".xml"
          }
        }
      },
      "Swashbuckle.AspNetCore/6.6.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.Extensions.ApiDescription.Server": "6.0.5",
          "Swashbuckle.AspNetCore.Swagger": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerGen": "6.6.2",
          "Swashbuckle.AspNetCore.SwaggerUI": "6.6.2"
        },
        "build": {
          "build/_._": {}
        }
      },
      "Swashbuckle.AspNetCore.Swagger/6.6.2": {
        "type": "package",
        "dependencies": {
          "Microsoft.OpenApi": "1.6.14"
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
        "type": "package",
        "dependencies": {
          "Swashbuckle.AspNetCore.Swagger": "6.6.2"
        },
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll": {
            "related": ".pdb;.xml"
          }
        }
      },
      "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
        "type": "package",
        "compile": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "related": ".pdb;.xml"
          }
        },
        "runtime": {
          "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll": {
            "related": ".pdb;.xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      },
      "System.Buffers/4.5.1": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        }
      },
      "System.CodeDom/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.CodeDom.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Collections.Immutable/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Collections.Immutable.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Collections.Immutable.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Convention": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0",
          "System.Composition.TypedParts": "7.0.0"
        },
        "compile": {
          "lib/netcoreapp2.0/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.0/_._": {}
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.AttributedModel/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.AttributedModel.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Convention/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Convention.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Hosting/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.Runtime": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Hosting.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.Runtime/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.Runtime.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Composition.TypedParts/7.0.0": {
        "type": "package",
        "dependencies": {
          "System.Composition.AttributedModel": "7.0.0",
          "System.Composition.Hosting": "7.0.0",
          "System.Composition.Runtime": "7.0.0"
        },
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Composition.TypedParts.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Diagnostics.DiagnosticSource/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.DiagnosticSource.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.Diagnostics.EventLog/8.0.1": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Diagnostics.EventLog.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.Messages.dll": {
            "assetType": "runtime",
            "rid": "win"
          },
          "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll": {
            "assetType": "runtime",
            "rid": "win"
          }
        }
      },
      "System.IdentityModel.Tokens.Jwt/8.14.0": {
        "type": "package",
        "dependencies": {
          "Microsoft.IdentityModel.JsonWebTokens": "8.14.0",
          "Microsoft.IdentityModel.Tokens": "8.14.0"
        },
        "compile": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll": {
            "related": ".xml"
          }
        }
      },
      "System.IO.Hashing/8.0.0": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IO.Hashing.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.IO.Pipelines/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.IO.Pipelines.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        }
      },
      "System.Reflection.Metadata/8.0.0": {
        "type": "package",
        "dependencies": {
          "System.Collections.Immutable": "8.0.0"
        },
        "compile": {
          "lib/net8.0/System.Reflection.Metadata.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Reflection.Metadata.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Runtime.CompilerServices.Unsafe/6.0.0": {
        "type": "package",
        "compile": {
          "lib/net6.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/netcoreapp3.1/_._": {}
        }
      },
      "System.Text.Encodings.Web/9.0.8": {
        "type": "package",
        "compile": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Encodings.Web.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/_._": {}
        },
        "runtimeTargets": {
          "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll": {
            "assetType": "runtime",
            "rid": "browser"
          }
        }
      },
      "System.Text.Json/9.0.8": {
        "type": "package",
        "dependencies": {
          "System.IO.Pipelines": "9.0.8",
          "System.Text.Encodings.Web": "9.0.8"
        },
        "compile": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/System.Text.Json.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net8.0/System.Text.Json.targets": {}
        }
      },
      "System.Threading.Channels/7.0.0": {
        "type": "package",
        "compile": {
          "lib/net7.0/_._": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net7.0/System.Threading.Channels.dll": {
            "related": ".xml"
          }
        },
        "build": {
          "buildTransitive/net6.0/_._": {}
        }
      },
      "System.Threading.Tasks.Extensions/4.5.4": {
        "type": "package",
        "compile": {
          "ref/netcoreapp2.1/_._": {}
        },
        "runtime": {
          "lib/netcoreapp2.1/_._": {}
        }
      },
      "Testcontainers/4.7.0": {
        "type": "package",
        "dependencies": {
          "Docker.DotNet.Enhanced": "3.128.5",
          "Docker.DotNet.Enhanced.X509": "3.128.5",
          "Microsoft.Extensions.Logging.Abstractions": "8.0.3",
          "SSH.NET": "2024.2.0",
          "SharpZipLib": "1.4.2"
        },
        "compile": {
          "lib/net8.0/Testcontainers.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Testcontainers.dll": {
            "related": ".xml"
          }
        }
      },
      "Testcontainers.PostgreSql/4.7.0": {
        "type": "package",
        "dependencies": {
          "Testcontainers": "4.7.0"
        },
        "compile": {
          "lib/net8.0/Testcontainers.PostgreSql.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Testcontainers.PostgreSql.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit/2.9.3": {
        "type": "package",
        "dependencies": {
          "xunit.analyzers": "1.18.0",
          "xunit.assert": "2.9.3",
          "xunit.core": "[2.9.3]"
        }
      },
      "xunit.abstractions/2.0.3": {
        "type": "package",
        "compile": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard2.0/xunit.abstractions.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.analyzers/1.18.0": {
        "type": "package"
      },
      "xunit.assert/2.9.3": {
        "type": "package",
        "compile": {
          "lib/net6.0/xunit.assert.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net6.0/xunit.assert.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.core/2.9.3": {
        "type": "package",
        "dependencies": {
          "xunit.extensibility.core": "[2.9.3]",
          "xunit.extensibility.execution": "[2.9.3]"
        },
        "build": {
          "build/xunit.core.props": {},
          "build/xunit.core.targets": {}
        },
        "buildMultiTargeting": {
          "buildMultiTargeting/xunit.core.props": {},
          "buildMultiTargeting/xunit.core.targets": {}
        }
      },
      "xunit.extensibility.core/2.9.3": {
        "type": "package",
        "dependencies": {
          "xunit.abstractions": "2.0.3"
        },
        "compile": {
          "lib/netstandard1.1/xunit.core.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard1.1/xunit.core.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.extensibility.execution/2.9.3": {
        "type": "package",
        "dependencies": {
          "xunit.extensibility.core": "[2.9.3]"
        },
        "compile": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/netstandard1.1/xunit.execution.dotnet.dll": {
            "related": ".xml"
          }
        }
      },
      "xunit.runner.visualstudio/3.1.4": {
        "type": "package",
        "compile": {
          "lib/net8.0/_._": {}
        },
        "runtime": {
          "lib/net8.0/_._": {}
        },
        "build": {
          "build/net8.0/xunit.runner.visualstudio.props": {}
        }
      },
      "Yarp.ReverseProxy/2.3.0": {
        "type": "package",
        "dependencies": {
          "System.IO.Hashing": "8.0.0"
        },
        "compile": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "related": ".xml"
          }
        },
        "runtime": {
          "lib/net8.0/Yarp.ReverseProxy.dll": {
            "related": ".xml"
          }
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ],
        "build": {
          "buildTransitive/net8.0/Yarp.ReverseProxy.targets": {}
        }
      },
      "ThoughtGarden.Api/1.0.0": {
        "type": "project",
        "framework": ".NETCoreApp,Version=v8.0",
        "dependencies": {
          "BCrypt.Net-Next": "4.0.3",
          "EFCore.NamingConventions": "9.0.0",
          "HotChocolate.AspNetCore": "15.1.9",
          "HotChocolate.AspNetCore.Authorization": "15.1.9",
          "HotChocolate.Data": "15.1.9",
          "HotChocolate.Data.EntityFramework": "15.1.9",
          "Microsoft.AspNetCore.Authentication.JwtBearer": "8.0.19",
          "Microsoft.EntityFrameworkCore": "9.0.8",
          "Npgsql.EntityFrameworkCore.PostgreSQL": "9.0.4",
          "Swashbuckle.AspNetCore": "6.6.2",
          "System.IdentityModel.Tokens.Jwt": "8.14.0"
        },
        "compile": {
          "bin/placeholder/ThoughtGarden.Api.dll": {}
        },
        "runtime": {
          "bin/placeholder/ThoughtGarden.Api.dll": {}
        },
        "frameworkReferences": [
          "Microsoft.AspNetCore.App"
        ]
      }
    }
  },
  "libraries": {
    "BCrypt.Net-Next/4.0.3": {
      "sha512": "W+U9WvmZQgi5cX6FS5GDtDoPzUCV4LkBLkywq/kRZhuDwcbavOzcDAr3LXJFqHUi952Yj3LEYoWW0jbEUQChsA==",
      "type": "package",
      "path": "bcrypt.net-next/4.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "bcrypt.net-next.4.0.3.nupkg.sha512",
        "bcrypt.net-next.nuspec",
        "ico.png",
        "lib/net20/BCrypt.Net-Next.dll",
        "lib/net20/BCrypt.Net-Next.xml",
        "lib/net35/BCrypt.Net-Next.dll",
        "lib/net35/BCrypt.Net-Next.xml",
        "lib/net462/BCrypt.Net-Next.dll",
        "lib/net462/BCrypt.Net-Next.xml",
        "lib/net472/BCrypt.Net-Next.dll",
        "lib/net472/BCrypt.Net-Next.xml",
        "lib/net48/BCrypt.Net-Next.dll",
        "lib/net48/BCrypt.Net-Next.xml",
        "lib/net5.0/BCrypt.Net-Next.dll",
        "lib/net5.0/BCrypt.Net-Next.xml",
        "lib/net6.0/BCrypt.Net-Next.dll",
        "lib/net6.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.0/BCrypt.Net-Next.dll",
        "lib/netstandard2.0/BCrypt.Net-Next.xml",
        "lib/netstandard2.1/BCrypt.Net-Next.dll",
        "lib/netstandard2.1/BCrypt.Net-Next.xml",
        "readme.md"
      ]
    },
    "BouncyCastle.Cryptography/2.4.0": {
      "sha512": "SwXsAV3sMvAU/Nn31pbjhWurYSjJ+/giI/0n6tCrYoupEK34iIHCuk3STAd9fx8yudM85KkLSVdn951vTng/vQ==",
      "type": "package",
      "path": "bouncycastle.cryptography/2.4.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "README.md",
        "bouncycastle.cryptography.2.4.0.nupkg.sha512",
        "bouncycastle.cryptography.nuspec",
        "lib/net461/BouncyCastle.Cryptography.dll",
        "lib/net461/BouncyCastle.Cryptography.xml",
        "lib/net6.0/BouncyCastle.Cryptography.dll",
        "lib/net6.0/BouncyCastle.Cryptography.xml",
        "lib/netstandard2.0/BouncyCastle.Cryptography.dll",
        "lib/netstandard2.0/BouncyCastle.Cryptography.xml",
        "packageIcon.png"
      ]
    },
    "ChilliCream.Nitro.App/28.0.7": {
      "sha512": "G6CZod8ForeoVMXigRyAxTTqiiUYcppE85UY/zy4XLMunpF1Ginn5njWK+F+93bw3x5SssPR/fexEpOtQqkVLw==",
      "type": "package",
      "path": "chillicream.nitro.app/28.0.7",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "chillicream.nitro.app.28.0.7.nupkg.sha512",
        "chillicream.nitro.app.nuspec",
        "lib/net8.0/ChilliCream.Nitro.App.dll",
        "lib/net9.0/ChilliCream.Nitro.App.dll"
      ]
    },
    "coverlet.collector/6.0.0": {
      "sha512": "tW3lsNS+dAEII6YGUX/VMoJjBS1QvsxqJeqLaJXub08y1FSjasFPtQ4UBUsudE9PNrzLjooClMsPtY2cZLdXpQ==",
      "type": "package",
      "path": "coverlet.collector/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "build/netstandard1.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "build/netstandard1.0/Microsoft.CSharp.dll",
        "build/netstandard1.0/Microsoft.DotNet.PlatformAbstractions.dll",
        "build/netstandard1.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "build/netstandard1.0/Microsoft.Extensions.DependencyInjection.dll",
        "build/netstandard1.0/Microsoft.Extensions.DependencyModel.dll",
        "build/netstandard1.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "build/netstandard1.0/Microsoft.TestPlatform.CoreUtilities.dll",
        "build/netstandard1.0/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "build/netstandard1.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "build/netstandard1.0/Mono.Cecil.Mdb.dll",
        "build/netstandard1.0/Mono.Cecil.Pdb.dll",
        "build/netstandard1.0/Mono.Cecil.Rocks.dll",
        "build/netstandard1.0/Mono.Cecil.dll",
        "build/netstandard1.0/Newtonsoft.Json.dll",
        "build/netstandard1.0/NuGet.Frameworks.dll",
        "build/netstandard1.0/System.AppContext.dll",
        "build/netstandard1.0/System.Collections.Immutable.dll",
        "build/netstandard1.0/System.Dynamic.Runtime.dll",
        "build/netstandard1.0/System.IO.FileSystem.Primitives.dll",
        "build/netstandard1.0/System.Linq.Expressions.dll",
        "build/netstandard1.0/System.Linq.dll",
        "build/netstandard1.0/System.ObjectModel.dll",
        "build/netstandard1.0/System.Reflection.Emit.ILGeneration.dll",
        "build/netstandard1.0/System.Reflection.Emit.Lightweight.dll",
        "build/netstandard1.0/System.Reflection.Emit.dll",
        "build/netstandard1.0/System.Reflection.Metadata.dll",
        "build/netstandard1.0/System.Reflection.TypeExtensions.dll",
        "build/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
        "build/netstandard1.0/System.Runtime.Serialization.Primitives.dll",
        "build/netstandard1.0/System.Text.RegularExpressions.dll",
        "build/netstandard1.0/System.Threading.Tasks.Extensions.dll",
        "build/netstandard1.0/System.Threading.dll",
        "build/netstandard1.0/System.Xml.ReaderWriter.dll",
        "build/netstandard1.0/System.Xml.XDocument.dll",
        "build/netstandard1.0/coverlet.collector.deps.json",
        "build/netstandard1.0/coverlet.collector.dll",
        "build/netstandard1.0/coverlet.collector.pdb",
        "build/netstandard1.0/coverlet.collector.targets",
        "build/netstandard1.0/coverlet.core.dll",
        "build/netstandard1.0/coverlet.core.pdb",
        "coverlet-icon.png",
        "coverlet.collector.6.0.0.nupkg.sha512",
        "coverlet.collector.nuspec"
      ]
    },
    "Docker.DotNet/3.125.5": {
      "sha512": "1tClPIBzz/7HP1XejCdTiRMviVRtS14omyRhHD0R6086woRRBCh61hJeVrpL6CVTnsRui4X9qaI8wO8xOCqKkQ==",
      "type": "package",
      "path": "docker.dotnet/3.125.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "docker.dotnet.3.125.5.nupkg.sha512",
        "docker.dotnet.nuspec",
        "icon.png",
        "lib/netstandard2.0/Docker.DotNet.dll",
        "lib/netstandard2.0/Docker.DotNet.pdb"
      ]
    },
    "Docker.DotNet.Enhanced/3.128.5": {
      "sha512": "RmhcxDmS/zEuWhV9XA5M/xwFinfGe8IRyyNuEu/7EmnLam35dxlIXabi1Kp/MeEWr1fNPjPFrgxKieZfPeOOqw==",
      "type": "package",
      "path": "docker.dotnet.enhanced/3.128.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "docker.dotnet.enhanced.3.128.5.nupkg.sha512",
        "docker.dotnet.enhanced.nuspec",
        "icon.png",
        "lib/net8.0/Docker.DotNet.dll",
        "lib/net9.0/Docker.DotNet.dll",
        "lib/netstandard2.0/Docker.DotNet.dll",
        "lib/netstandard2.1/Docker.DotNet.dll"
      ]
    },
    "Docker.DotNet.Enhanced.X509/3.128.5": {
      "sha512": "ofHQIPpv5HillvBZwk66wEGzHjV/G/771Ta1HjbOtcG8+Lv3bKNH19+fa+hgMzO4sZQCWGDIXygyDralePOKQA==",
      "type": "package",
      "path": "docker.dotnet.enhanced.x509/3.128.5",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "docker.dotnet.enhanced.x509.3.128.5.nupkg.sha512",
        "docker.dotnet.enhanced.x509.nuspec",
        "icon.png",
        "lib/net8.0/Docker.DotNet.X509.dll",
        "lib/net9.0/Docker.DotNet.X509.dll",
        "lib/netstandard2.0/Docker.DotNet.X509.dll",
        "lib/netstandard2.1/Docker.DotNet.X509.dll"
      ]
    },
    "DotNet.Testcontainers/1.6.0": {
      "sha512": "XQU1FfE6+VmG4WL12wcoGc2BQOyIuRmY0APnn7L9cej6KgaUnqlzFCOnfhhCnpS+KLMKMF+brY6OuE5CK68CXg==",
      "type": "package",
      "path": "dotnet.testcontainers/1.6.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "DotNet.Testcontainers.png",
        "LICENSE",
        "dotnet.testcontainers.1.6.0.nupkg.sha512",
        "dotnet.testcontainers.nuspec",
        "lib/netstandard2.0/DotNet.Testcontainers.dll",
        "lib/netstandard2.1/DotNet.Testcontainers.dll"
      ]
    },
    "EFCore.NamingConventions/9.0.0": {
      "sha512": "heKIYzPdEWx+Ba4xuG6jfEssW9rEi7I0lX38eoN7wo7qgg9uw7nn8UEmDQfwGEYPzSDpetCVANnDr5tqt2Asjg==",
      "type": "package",
      "path": "efcore.namingconventions/9.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "efcore.namingconventions.9.0.0.nupkg.sha512",
        "efcore.namingconventions.nuspec",
        "lib/net8.0/EFCore.NamingConventions.dll"
      ]
    },
    "GreenDonut/15.1.9": {
      "sha512": "482fPqj2Q7enNUsUDENHjrghwI1GPlUbsGQ425SdFJNSl6hhrWzNjMmwd2x1V6NZJCDWk6TAjJ35NK22T1eNNw==",
      "type": "package",
      "path": "greendonut/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.15.1.9.nupkg.sha512",
        "greendonut.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.dll",
        "lib/net8.0/GreenDonut.xml",
        "lib/net9.0/GreenDonut.dll",
        "lib/net9.0/GreenDonut.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Abstractions/15.1.9": {
      "sha512": "imB88uJvK18ZxMwmnLW1XRE7nPU0rRsV5pFzpbuzfVDabedsEqOnoGQDSOJUORJ1Dn6ZOFH7PBxWh92MnXP8JA==",
      "type": "package",
      "path": "greendonut.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.abstractions.15.1.9.nupkg.sha512",
        "greendonut.abstractions.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Abstractions.dll",
        "lib/net8.0/GreenDonut.Abstractions.xml",
        "lib/net9.0/GreenDonut.Abstractions.dll",
        "lib/net9.0/GreenDonut.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data/15.1.9": {
      "sha512": "T5mfw9CnQKhl4sa+5RbfBNk9hGTdSiGnUCYGFyXcREfLGMMe7kfOabjhR6T7FB7kZeEWb8GqcipU655jMbTX/w==",
      "type": "package",
      "path": "greendonut.data/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.15.1.9.nupkg.sha512",
        "greendonut.data.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.dll",
        "lib/net8.0/GreenDonut.Data.xml",
        "lib/net9.0/GreenDonut.Data.dll",
        "lib/net9.0/GreenDonut.Data.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data.Abstractions/15.1.9": {
      "sha512": "E/a5ms3kV8niLBPB0s7rkVuYV1yRAR6JHasTrMg9a9Yk0U18yUj28wXEKwZY1A3mze2S2vF3kebQDAHCN5bjwg==",
      "type": "package",
      "path": "greendonut.data.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.abstractions.15.1.9.nupkg.sha512",
        "greendonut.data.abstractions.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.Abstractions.dll",
        "lib/net8.0/GreenDonut.Data.Abstractions.xml",
        "lib/net9.0/GreenDonut.Data.Abstractions.dll",
        "lib/net9.0/GreenDonut.Data.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data.EntityFramework/15.1.9": {
      "sha512": "dBEK3bkLoq46n7Tg+Vn77FTXJn7ugp2OWcgo+CeqGTfQa+8MbWY9IohQGjAMFLt4TigTnU0ek63keNACv5vl5g==",
      "type": "package",
      "path": "greendonut.data.entityframework/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.entityframework.15.1.9.nupkg.sha512",
        "greendonut.data.entityframework.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.EntityFramework.dll",
        "lib/net8.0/GreenDonut.Data.EntityFramework.xml",
        "lib/net9.0/GreenDonut.Data.EntityFramework.dll",
        "lib/net9.0/GreenDonut.Data.EntityFramework.xml",
        "strawberryshake-signet.png"
      ]
    },
    "GreenDonut.Data.Primitives/15.1.9": {
      "sha512": "U7uS+C7lEvlgn48xtSFCHMKSjV0oJXgtlbYe6KPWZSJfhDwFxfUFmD58Tn1BxVpCbUqAjr7TzHZaNelhzIu/8A==",
      "type": "package",
      "path": "greendonut.data.primitives/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "greendonut.data.primitives.15.1.9.nupkg.sha512",
        "greendonut.data.primitives.nuspec",
        "hotchocolate-signet.png",
        "lib/net8.0/GreenDonut.Data.Primitives.dll",
        "lib/net8.0/GreenDonut.Data.Primitives.xml",
        "lib/net9.0/GreenDonut.Data.Primitives.dll",
        "lib/net9.0/GreenDonut.Data.Primitives.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate/15.1.9": {
      "sha512": "VTVw4bKfnLYuVU4BPzRLILU+IpN+ixblF4uqQ1aMQgwTueLfQ9cycQqvlunWBisRsrtbhcalyn/ksHYn9zgv3A==",
      "type": "package",
      "path": "hotchocolate/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.15.1.9.nupkg.sha512",
        "hotchocolate.nuspec",
        "lib/net8.0/HotChocolate.dll",
        "lib/net8.0/HotChocolate.xml",
        "lib/net9.0/HotChocolate.dll",
        "lib/net9.0/HotChocolate.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Abstractions/15.1.9": {
      "sha512": "jQL/Va5z9sksqG1/++Mm4nzwl5I+qppOOnV6z2/SeZ9BseaBxao9njBMd6wBkfMgbOoiOh5FGqWCVna7mdhJcw==",
      "type": "package",
      "path": "hotchocolate.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.abstractions.15.1.9.nupkg.sha512",
        "hotchocolate.abstractions.nuspec",
        "lib/net8.0/HotChocolate.Abstractions.dll",
        "lib/net8.0/HotChocolate.Abstractions.xml",
        "lib/net9.0/HotChocolate.Abstractions.dll",
        "lib/net9.0/HotChocolate.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.AspNetCore/15.1.9": {
      "sha512": "9G60X0PbDZOaA3k8gbIHTS9vwjvBo6jbKwQe8VKr6liEVHNWXYu2kvaxqQbIgd4FuG759Ie1TKLHSwX411ceag==",
      "type": "package",
      "path": "hotchocolate.aspnetcore/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "build/HotChocolate.AspNetCore.props",
        "build/HotChocolate.AspNetCore.targets",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.aspnetcore.15.1.9.nupkg.sha512",
        "hotchocolate.aspnetcore.nuspec",
        "lib/net8.0/HotChocolate.AspNetCore.dll",
        "lib/net8.0/HotChocolate.AspNetCore.xml",
        "lib/net9.0/HotChocolate.AspNetCore.dll",
        "lib/net9.0/HotChocolate.AspNetCore.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.AspNetCore.Authorization/15.1.9": {
      "sha512": "YQKitD1Yp0QdKPCcggHqGLuDDifJspmFTERyDyNxy4ZEL+emvc3PbTNqHp+/l/t+zRLtssNIpLoja1vXZ0sRqg==",
      "type": "package",
      "path": "hotchocolate.aspnetcore.authorization/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.aspnetcore.authorization.15.1.9.nupkg.sha512",
        "hotchocolate.aspnetcore.authorization.nuspec",
        "lib/net8.0/HotChocolate.AspNetCore.Authorization.dll",
        "lib/net8.0/HotChocolate.AspNetCore.Authorization.xml",
        "lib/net9.0/HotChocolate.AspNetCore.Authorization.dll",
        "lib/net9.0/HotChocolate.AspNetCore.Authorization.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Authorization/15.1.9": {
      "sha512": "wfKg+7F/DNzugwAHA4fd1flBStmfa7aXCo4fvpwFAqqpp3zguoKzzSVLw8VC1Ob0uTUutHWtqVVbBMYP8Cmq9g==",
      "type": "package",
      "path": "hotchocolate.authorization/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.authorization.15.1.9.nupkg.sha512",
        "hotchocolate.authorization.nuspec",
        "lib/net8.0/HotChocolate.Authorization.dll",
        "lib/net8.0/HotChocolate.Authorization.xml",
        "lib/net9.0/HotChocolate.Authorization.dll",
        "lib/net9.0/HotChocolate.Authorization.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.CostAnalysis/15.1.9": {
      "sha512": "XYseRG+XLHlmE8TnY6/dZCleKxxhHomR0kiriqaQ9Nt2nuJ0l8CTy7ucXK4ZYdikBrz46/KxXj0RwicIJzSN1Q==",
      "type": "package",
      "path": "hotchocolate.costanalysis/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.costanalysis.15.1.9.nupkg.sha512",
        "hotchocolate.costanalysis.nuspec",
        "lib/net8.0/HotChocolate.CostAnalysis.dll",
        "lib/net8.0/HotChocolate.CostAnalysis.xml",
        "lib/net9.0/HotChocolate.CostAnalysis.dll",
        "lib/net9.0/HotChocolate.CostAnalysis.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Data/15.1.9": {
      "sha512": "xYiRcqB3MTazm1+taZlnWk6qMDaF47DvyTakB+ERaotqSlHyXkQWuX5vPXyhGCTncu7Wvppv6HkOSdw5x1Q9lA==",
      "type": "package",
      "path": "hotchocolate.data/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "build/HotChocolate.Data.props",
        "build/HotChocolate.Data.targets",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.data.15.1.9.nupkg.sha512",
        "hotchocolate.data.nuspec",
        "lib/net8.0/HotChocolate.Data.dll",
        "lib/net8.0/HotChocolate.Data.xml",
        "lib/net9.0/HotChocolate.Data.dll",
        "lib/net9.0/HotChocolate.Data.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Data.EntityFramework/15.1.9": {
      "sha512": "BQ6c+NvWoygeok0ZwNf5Iof6CeFt+FBE2F8LOxCUW3r5t2g792CTG1tiZ7ZfrrAi3qwu3YdOYcLw+6tX+5M6pw==",
      "type": "package",
      "path": "hotchocolate.data.entityframework/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "build/HotChocolate.Data.EntityFramework.props",
        "build/HotChocolate.Data.EntityFramework.targets",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.data.entityframework.15.1.9.nupkg.sha512",
        "hotchocolate.data.entityframework.nuspec",
        "lib/net8.0/HotChocolate.Data.EntityFramework.dll",
        "lib/net8.0/HotChocolate.Data.EntityFramework.xml",
        "lib/net9.0/HotChocolate.Data.EntityFramework.dll",
        "lib/net9.0/HotChocolate.Data.EntityFramework.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Execution/15.1.9": {
      "sha512": "pTf6SyyMWiQLAp8NHcSBb/DYbkzEcVLLhrdh0BkX2VKwL6iknH3lKuQjP25LryIBiBpdB2ddl8ULNBjRBXMmMQ==",
      "type": "package",
      "path": "hotchocolate.execution/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.execution.15.1.9.nupkg.sha512",
        "hotchocolate.execution.nuspec",
        "lib/net8.0/HotChocolate.Execution.dll",
        "lib/net8.0/HotChocolate.Execution.xml",
        "lib/net9.0/HotChocolate.Execution.dll",
        "lib/net9.0/HotChocolate.Execution.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Execution.Abstractions/15.1.9": {
      "sha512": "x4Tx+n7e45tySRfBISeN8DCt2dcqPrR/JC/1dbnTVkgL5conIybhlfChuLNK36TbGPCNhqYgmow/jyNoorSAdg==",
      "type": "package",
      "path": "hotchocolate.execution.abstractions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.execution.abstractions.15.1.9.nupkg.sha512",
        "hotchocolate.execution.abstractions.nuspec",
        "lib/net8.0/HotChocolate.Execution.Abstractions.dll",
        "lib/net8.0/HotChocolate.Execution.Abstractions.xml",
        "lib/net9.0/HotChocolate.Execution.Abstractions.dll",
        "lib/net9.0/HotChocolate.Execution.Abstractions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Execution.Projections/15.1.9": {
      "sha512": "xcASpOZxMWNa8o8OIlduqPGgpNHaxYVp8K8hzWunCpWP2JsR39a/U/YE8J3Yaj3x4KUlBNXiTq914axLY4qkTA==",
      "type": "package",
      "path": "hotchocolate.execution.projections/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.execution.projections.15.1.9.nupkg.sha512",
        "hotchocolate.execution.projections.nuspec",
        "lib/net8.0/HotChocolate.Execution.Projections.dll",
        "lib/net8.0/HotChocolate.Execution.Projections.xml",
        "lib/net9.0/HotChocolate.Execution.Projections.dll",
        "lib/net9.0/HotChocolate.Execution.Projections.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Features/15.1.9": {
      "sha512": "dFNkiW5BeA/B37/WdeZzX3o4mBfGzpQtWM4O7iI7pzlXnInLwNB7nuD1B186eulNnRiQBCSqM0ZcFjbLtUuzag==",
      "type": "package",
      "path": "hotchocolate.features/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.features.15.1.9.nupkg.sha512",
        "hotchocolate.features.nuspec",
        "lib/net8.0/HotChocolate.Features.dll",
        "lib/net8.0/HotChocolate.Features.xml",
        "lib/net9.0/HotChocolate.Features.dll",
        "lib/net9.0/HotChocolate.Features.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Fetching/15.1.9": {
      "sha512": "oH0qn/8CjiOQJmyag3IX/qFPJ4Aoc3Xz3I/MqPETQ40IRkwN0RrXfnFYgyulcF9O0VTGoUFUf4G8sT67CP6ffg==",
      "type": "package",
      "path": "hotchocolate.fetching/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.fetching.15.1.9.nupkg.sha512",
        "hotchocolate.fetching.nuspec",
        "lib/net8.0/HotChocolate.Fetching.dll",
        "lib/net8.0/HotChocolate.Fetching.xml",
        "lib/net9.0/HotChocolate.Fetching.dll",
        "lib/net9.0/HotChocolate.Fetching.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language/15.1.9": {
      "sha512": "/6uru5EbOPm5lKZ0VRzEVfP11mbKIhaPlQINybWMCXq1LAn21P0DgY/fVCh2AoNeFeITCTO8itqPv4vLntsnQg==",
      "type": "package",
      "path": "hotchocolate.language/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.15.1.9.nupkg.sha512",
        "hotchocolate.language.nuspec",
        "lib/net8.0/HotChocolate.Language.dll",
        "lib/net8.0/HotChocolate.Language.xml",
        "lib/net9.0/HotChocolate.Language.dll",
        "lib/net9.0/HotChocolate.Language.xml",
        "lib/netstandard2.0/HotChocolate.Language.dll",
        "lib/netstandard2.0/HotChocolate.Language.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.SyntaxTree/15.1.9": {
      "sha512": "Tzuk9ZnpgLZNnxUl79tRYpr2/Gt/W6g8LvwcXkpU+aejGOi6UHxYJtas30U4XQOCPyEd24Waw1WdtVe2AYil3A==",
      "type": "package",
      "path": "hotchocolate.language.syntaxtree/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.syntaxtree.15.1.9.nupkg.sha512",
        "hotchocolate.language.syntaxtree.nuspec",
        "lib/net8.0/HotChocolate.Language.SyntaxTree.dll",
        "lib/net8.0/HotChocolate.Language.SyntaxTree.xml",
        "lib/net9.0/HotChocolate.Language.SyntaxTree.dll",
        "lib/net9.0/HotChocolate.Language.SyntaxTree.xml",
        "lib/netstandard2.0/HotChocolate.Language.SyntaxTree.dll",
        "lib/netstandard2.0/HotChocolate.Language.SyntaxTree.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.Utf8/15.1.9": {
      "sha512": "E/53yeCEZUpjLsxkCunN7AgMZVaIPnvZopqB6oyD+ygZjm7zkpWgssnI621GL0WxAmTbr7ehrHx5EXt8dN/TQw==",
      "type": "package",
      "path": "hotchocolate.language.utf8/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.utf8.15.1.9.nupkg.sha512",
        "hotchocolate.language.utf8.nuspec",
        "lib/net8.0/HotChocolate.Language.Utf8.dll",
        "lib/net8.0/HotChocolate.Language.Utf8.xml",
        "lib/net9.0/HotChocolate.Language.Utf8.dll",
        "lib/net9.0/HotChocolate.Language.Utf8.xml",
        "lib/netstandard2.0/HotChocolate.Language.Utf8.dll",
        "lib/netstandard2.0/HotChocolate.Language.Utf8.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.Visitors/15.1.9": {
      "sha512": "9LVHdE/22DwxpTzD+U0hTRik8oD+yqPr0gO9WlOHbqqV4oaI6m07KdkF6F48Z8evmMLtfPWmOjUX2dNI5k9Wgg==",
      "type": "package",
      "path": "hotchocolate.language.visitors/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.visitors.15.1.9.nupkg.sha512",
        "hotchocolate.language.visitors.nuspec",
        "lib/net8.0/HotChocolate.Language.Visitors.dll",
        "lib/net8.0/HotChocolate.Language.Visitors.xml",
        "lib/net9.0/HotChocolate.Language.Visitors.dll",
        "lib/net9.0/HotChocolate.Language.Visitors.xml",
        "lib/netstandard2.0/HotChocolate.Language.Visitors.dll",
        "lib/netstandard2.0/HotChocolate.Language.Visitors.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Language.Web/15.1.9": {
      "sha512": "SMRx4Ix4/EW2Dk3gBgyEbuPPUPkZdCOHIyiNeUzyWYuGOe7T/aj2pTBYUlKLxCJhWeH++BViEGMpx4J7uzKo0A==",
      "type": "package",
      "path": "hotchocolate.language.web/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.language.web.15.1.9.nupkg.sha512",
        "hotchocolate.language.web.nuspec",
        "lib/net8.0/HotChocolate.Language.Web.dll",
        "lib/net8.0/HotChocolate.Language.Web.xml",
        "lib/net9.0/HotChocolate.Language.Web.dll",
        "lib/net9.0/HotChocolate.Language.Web.xml",
        "lib/netstandard2.0/HotChocolate.Language.Web.dll",
        "lib/netstandard2.0/HotChocolate.Language.Web.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Primitives/15.1.9": {
      "sha512": "41ZTC75xe4cPJ4FcogVBktp5U6tOplwlbmqwLreY/yY7WikghlNAooczGJQFJiutEl0IkCanLLVKeizPY2dJAw==",
      "type": "package",
      "path": "hotchocolate.primitives/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.primitives.15.1.9.nupkg.sha512",
        "hotchocolate.primitives.nuspec",
        "lib/net8.0/HotChocolate.Primitives.dll",
        "lib/net8.0/HotChocolate.Primitives.xml",
        "lib/net9.0/HotChocolate.Primitives.dll",
        "lib/net9.0/HotChocolate.Primitives.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Subscriptions/15.1.9": {
      "sha512": "Vw4UK1J/ck5HBV+prYKaS0fcPKWMynBWML49pQOVDqtRDctoCNNIk0w7G83QWRNmrQwLr70unUeh8jkeTl5U2A==",
      "type": "package",
      "path": "hotchocolate.subscriptions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.subscriptions.15.1.9.nupkg.sha512",
        "hotchocolate.subscriptions.nuspec",
        "lib/net8.0/HotChocolate.Subscriptions.dll",
        "lib/net8.0/HotChocolate.Subscriptions.xml",
        "lib/net9.0/HotChocolate.Subscriptions.dll",
        "lib/net9.0/HotChocolate.Subscriptions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Subscriptions.InMemory/15.1.9": {
      "sha512": "mbrdirU8+4O6J0zovdxoEQaqHmyeqwKMn2Yk82rOj67+M4Wd69Tl/7OF59bBFG8Plrk+fqnEb/DW5Iv8w6mnWA==",
      "type": "package",
      "path": "hotchocolate.subscriptions.inmemory/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.subscriptions.inmemory.15.1.9.nupkg.sha512",
        "hotchocolate.subscriptions.inmemory.nuspec",
        "lib/net8.0/HotChocolate.Subscriptions.InMemory.dll",
        "lib/net8.0/HotChocolate.Subscriptions.InMemory.xml",
        "lib/net9.0/HotChocolate.Subscriptions.InMemory.dll",
        "lib/net9.0/HotChocolate.Subscriptions.InMemory.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Transport.Sockets/15.1.9": {
      "sha512": "ex9DQdgwUa8tdQDl1W2dWCBH24BE8+hgp++8iQKUFC5a00caAe6g9lzAzFCfv2s2OFIb97YzGxvct26qvCF+Aw==",
      "type": "package",
      "path": "hotchocolate.transport.sockets/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.transport.sockets.15.1.9.nupkg.sha512",
        "hotchocolate.transport.sockets.nuspec",
        "lib/net8.0/HotChocolate.Transport.Sockets.dll",
        "lib/net8.0/HotChocolate.Transport.Sockets.xml",
        "lib/net9.0/HotChocolate.Transport.Sockets.dll",
        "lib/net9.0/HotChocolate.Transport.Sockets.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types/15.1.9": {
      "sha512": "4nATgti5zOSsEyRFW0CNmYctQ7kwaINFisPTiQ7TvTD1DD7sOxWxEjEFJtuZcgocK+1OkmAlpx7jUU1+SclU6A==",
      "type": "package",
      "path": "hotchocolate.types/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.15.1.9.nupkg.sha512",
        "hotchocolate.types.nuspec",
        "lib/net8.0/HotChocolate.Types.dll",
        "lib/net8.0/HotChocolate.Types.xml",
        "lib/net9.0/HotChocolate.Types.dll",
        "lib/net9.0/HotChocolate.Types.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.CursorPagination/15.1.9": {
      "sha512": "k4EEq9WgIhWOLhkG+pSc7rsnMqE0urhUv1SsbNYx60h+xAw7R39b+kC8sL8Yjjtypw4Sr1xDjE2NIj9dCOm4tw==",
      "type": "package",
      "path": "hotchocolate.types.cursorpagination/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.cursorpagination.15.1.9.nupkg.sha512",
        "hotchocolate.types.cursorpagination.nuspec",
        "lib/net8.0/HotChocolate.Types.CursorPagination.dll",
        "lib/net8.0/HotChocolate.Types.CursorPagination.xml",
        "lib/net9.0/HotChocolate.Types.CursorPagination.dll",
        "lib/net9.0/HotChocolate.Types.CursorPagination.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.CursorPagination.Extensions/15.1.9": {
      "sha512": "uYU38ejpAnAQYMavSxZ2UuFdCKdOLeaDytEGgAmgJS48LgZrlwRI6PAj7tK7tugzgFReMn1zeXUmfgBf2SZtng==",
      "type": "package",
      "path": "hotchocolate.types.cursorpagination.extensions/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.cursorpagination.extensions.15.1.9.nupkg.sha512",
        "hotchocolate.types.cursorpagination.extensions.nuspec",
        "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.dll",
        "lib/net8.0/HotChocolate.Types.CursorPagination.Extensions.xml",
        "lib/net9.0/HotChocolate.Types.CursorPagination.Extensions.dll",
        "lib/net9.0/HotChocolate.Types.CursorPagination.Extensions.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Errors/15.1.9": {
      "sha512": "4stl4t1o97u26oXmYOrtTgznvDCECnOquXctbHbh8kjGYzmwHeCw5Wga09K4mPoi+bdJA47jTgZwUdC8ja8xKw==",
      "type": "package",
      "path": "hotchocolate.types.errors/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.errors.15.1.9.nupkg.sha512",
        "hotchocolate.types.errors.nuspec",
        "lib/net8.0/HotChocolate.Types.Errors.dll",
        "lib/net8.0/HotChocolate.Types.Errors.xml",
        "lib/net9.0/HotChocolate.Types.Errors.dll",
        "lib/net9.0/HotChocolate.Types.Errors.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Mutations/15.1.9": {
      "sha512": "lnODSHF51sjH6MUOs90s0vvROiQx3YGGe0ZJxqg0uZShrdiIygbw6jA1S9mf9VHj4q04WuJIsC5pGf89Rk19iw==",
      "type": "package",
      "path": "hotchocolate.types.mutations/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.mutations.15.1.9.nupkg.sha512",
        "hotchocolate.types.mutations.nuspec",
        "lib/net8.0/HotChocolate.Types.Mutations.dll",
        "lib/net8.0/HotChocolate.Types.Mutations.xml",
        "lib/net9.0/HotChocolate.Types.Mutations.dll",
        "lib/net9.0/HotChocolate.Types.Mutations.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Queries/15.1.9": {
      "sha512": "EmmTu5NX402uvmCAaiNw623ty4BfxBDrCl1BPVhCLShmoQKfS8WXduImtGZFvjSNN1eJ6hT4IDDjNCtgmCV3Kw==",
      "type": "package",
      "path": "hotchocolate.types.queries/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.queries.15.1.9.nupkg.sha512",
        "hotchocolate.types.queries.nuspec",
        "lib/net8.0/HotChocolate.Types.Queries.dll",
        "lib/net8.0/HotChocolate.Types.Queries.xml",
        "lib/net9.0/HotChocolate.Types.Queries.dll",
        "lib/net9.0/HotChocolate.Types.Queries.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Scalars.Upload/15.1.9": {
      "sha512": "eBAhdK80UpxGKUoQ3+GXivSHTjV3Qf73p5BRRZcQGSfN/05R9UE2TtNfNDNbXsPmEXN7vSYbLtvtyvD+0AWodA==",
      "type": "package",
      "path": "hotchocolate.types.scalars.upload/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.scalars.upload.15.1.9.nupkg.sha512",
        "hotchocolate.types.scalars.upload.nuspec",
        "lib/net8.0/HotChocolate.Types.Scalars.Upload.dll",
        "lib/net8.0/HotChocolate.Types.Scalars.Upload.xml",
        "lib/net9.0/HotChocolate.Types.Scalars.Upload.dll",
        "lib/net9.0/HotChocolate.Types.Scalars.Upload.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Types.Shared/15.1.9": {
      "sha512": "I34zCMRDoH27Ma0G1xF/WL6j9H9NCGxfkXY6axlIemtH1ZgSYbQCUTw6UdeSZyGbBlwAObxh54c96NsPIlay3Q==",
      "type": "package",
      "path": "hotchocolate.types.shared/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.types.shared.15.1.9.nupkg.sha512",
        "hotchocolate.types.shared.nuspec",
        "lib/net8.0/HotChocolate.Types.Shared.dll",
        "lib/net8.0/HotChocolate.Types.Shared.xml",
        "lib/net9.0/HotChocolate.Types.Shared.dll",
        "lib/net9.0/HotChocolate.Types.Shared.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Utilities/15.1.9": {
      "sha512": "z1pmsidrY/2u+26lzqfxP3YlxhLBQyPyyWmbrTRAta6riy4AT5iTRlCrApVZRZJxvrRsrI0Q8rz6k+nsXPn75A==",
      "type": "package",
      "path": "hotchocolate.utilities/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.utilities.15.1.9.nupkg.sha512",
        "hotchocolate.utilities.nuspec",
        "lib/net8.0/HotChocolate.Utilities.dll",
        "lib/net8.0/HotChocolate.Utilities.xml",
        "lib/net9.0/HotChocolate.Utilities.dll",
        "lib/net9.0/HotChocolate.Utilities.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Utilities.DependencyInjection/15.1.9": {
      "sha512": "ReYfZNdFn9CPDwkWtUrDfziLvr5wqvkV1NPPf3g27VYLskzOGYQ0PJfZgzyj1JfR+FYnjKjcjITenzrRc+0Q4w==",
      "type": "package",
      "path": "hotchocolate.utilities.dependencyinjection/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.utilities.dependencyinjection.15.1.9.nupkg.sha512",
        "hotchocolate.utilities.dependencyinjection.nuspec",
        "lib/net8.0/HotChocolate.Utilities.DependencyInjection.dll",
        "lib/net8.0/HotChocolate.Utilities.DependencyInjection.xml",
        "lib/net9.0/HotChocolate.Utilities.DependencyInjection.dll",
        "lib/net9.0/HotChocolate.Utilities.DependencyInjection.xml",
        "strawberryshake-signet.png"
      ]
    },
    "HotChocolate.Validation/15.1.9": {
      "sha512": "WwkVdB83XzehdRrSbqVsj83/Vnpia0fGNPv60jEbyhdZZUzMRF/g8VW2+JaFFi3PVGk+Ccd11yKbyGAh4au/cw==",
      "type": "package",
      "path": "hotchocolate.validation/15.1.9",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "greendonut-signet.png",
        "hotchocolate-signet.png",
        "hotchocolate.validation.15.1.9.nupkg.sha512",
        "hotchocolate.validation.nuspec",
        "lib/net8.0/HotChocolate.Validation.dll",
        "lib/net8.0/HotChocolate.Validation.xml",
        "lib/net9.0/HotChocolate.Validation.dll",
        "lib/net9.0/HotChocolate.Validation.xml",
        "strawberryshake-signet.png"
      ]
    },
    "Humanizer.Core/2.14.1": {
      "sha512": "lQKvtaTDOXnoVJ20ibTuSIOf2i0uO0MPbDhd1jm238I+U/2ZnRENj0cktKZhtchBMtCUSRQ5v4xBCUbKNmyVMw==",
      "type": "package",
      "path": "humanizer.core/2.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "humanizer.core.2.14.1.nupkg.sha512",
        "humanizer.core.nuspec",
        "lib/net6.0/Humanizer.dll",
        "lib/net6.0/Humanizer.xml",
        "lib/netstandard1.0/Humanizer.dll",
        "lib/netstandard1.0/Humanizer.xml",
        "lib/netstandard2.0/Humanizer.dll",
        "lib/netstandard2.0/Humanizer.xml",
        "logo.png"
      ]
    },
    "Microsoft.AspNetCore.Authentication.JwtBearer/8.0.19": {
      "sha512": "vkGkpvEGGLFHeYhlBqdJiOL/7aYiUmLg2PTfuDDjBDUDb5QTpoeWLNOOoodTlu88J+GluGE+DFF1kd9hxJd5bA==",
      "type": "package",
      "path": "microsoft.aspnetcore.authentication.jwtbearer/8.0.19",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.dll",
        "lib/net8.0/Microsoft.AspNetCore.Authentication.JwtBearer.xml",
        "microsoft.aspnetcore.authentication.jwtbearer.8.0.19.nupkg.sha512",
        "microsoft.aspnetcore.authentication.jwtbearer.nuspec"
      ]
    },
    "Microsoft.AspNetCore.Mvc.Testing/8.0.19": {
      "sha512": "KeVY5Hp8sghfQd/YrZYiVeTi3bvPQGnucuUWWDlXkTQMm2TumXWdp44roF77D1vwH5eQrgUbNEmPwWNe1S013g==",
      "type": "package",
      "path": "microsoft.aspnetcore.mvc.testing/8.0.19",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "build/net8.0/Microsoft.AspNetCore.Mvc.Testing.targets",
        "buildTransitive/net8.0/Microsoft.AspNetCore.Mvc.Testing.targets",
        "lib/net8.0/Microsoft.AspNetCore.Mvc.Testing.dll",
        "lib/net8.0/Microsoft.AspNetCore.Mvc.Testing.xml",
        "microsoft.aspnetcore.mvc.testing.8.0.19.nupkg.sha512",
        "microsoft.aspnetcore.mvc.testing.nuspec",
        "tasks/netstandard2.0/Microsoft.AspNetCore.Mvc.Testing.Tasks.dll"
      ]
    },
    "Microsoft.AspNetCore.TestHost/8.0.19": {
      "sha512": "iTKZC+re7D1GRYIltORRTONhX9sZ8AbIU2QFP+2eLneACdKoARGla/zuQq7U0jvekd/nNJxZM2rwn98mKnGDPw==",
      "type": "package",
      "path": "microsoft.aspnetcore.testhost/8.0.19",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net8.0/Microsoft.AspNetCore.TestHost.dll",
        "lib/net8.0/Microsoft.AspNetCore.TestHost.xml",
        "microsoft.aspnetcore.testhost.8.0.19.nupkg.sha512",
        "microsoft.aspnetcore.testhost.nuspec"
      ]
    },
    "Microsoft.Bcl.AsyncInterfaces/7.0.0": {
      "sha512": "3aeMZ1N0lJoSyzqiP03hqemtb1BijhsJADdobn/4nsMJ8V1H+CrpuduUe4hlRdx+ikBQju1VGjMD1GJ3Sk05Eg==",
      "type": "package",
      "path": "microsoft.bcl.asyncinterfaces/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Bcl.AsyncInterfaces.targets",
        "buildTransitive/net462/_._",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/net462/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
        "microsoft.bcl.asyncinterfaces.7.0.0.nupkg.sha512",
        "microsoft.bcl.asyncinterfaces.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Build.Framework/17.8.3": {
      "sha512": "NrQZJW8TlKVPx72yltGb8SVz3P5mNRk9fNiD/ao8jRSk48WqIIdCn99q4IjlVmPcruuQ+yLdjNQLL8Rb4c916g==",
      "type": "package",
      "path": "microsoft.build.framework/17.8.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "MSBuild-NuGet-Icon.png",
        "README.md",
        "lib/net472/Microsoft.Build.Framework.dll",
        "lib/net472/Microsoft.Build.Framework.pdb",
        "lib/net472/Microsoft.Build.Framework.xml",
        "lib/net8.0/Microsoft.Build.Framework.dll",
        "lib/net8.0/Microsoft.Build.Framework.pdb",
        "lib/net8.0/Microsoft.Build.Framework.xml",
        "microsoft.build.framework.17.8.3.nupkg.sha512",
        "microsoft.build.framework.nuspec",
        "notices/THIRDPARTYNOTICES.txt",
        "ref/net472/Microsoft.Build.Framework.dll",
        "ref/net472/Microsoft.Build.Framework.xml",
        "ref/net8.0/Microsoft.Build.Framework.dll",
        "ref/net8.0/Microsoft.Build.Framework.xml",
        "ref/netstandard2.0/Microsoft.Build.Framework.dll",
        "ref/netstandard2.0/Microsoft.Build.Framework.xml"
      ]
    },
    "Microsoft.Build.Locator/1.7.8": {
      "sha512": "sPy10x527Ph16S2u0yGME4S6ohBKJ69WfjeGG/bvELYeZVmJdKjxgnlL8cJJJLGV/cZIRqSfB12UDB8ICakOog==",
      "type": "package",
      "path": "microsoft.build.locator/1.7.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "MSBuild-NuGet-Icon.png",
        "build/Microsoft.Build.Locator.props",
        "build/Microsoft.Build.Locator.targets",
        "lib/net46/Microsoft.Build.Locator.dll",
        "lib/net6.0/Microsoft.Build.Locator.dll",
        "microsoft.build.locator.1.7.8.nupkg.sha512",
        "microsoft.build.locator.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Analyzers/3.3.4": {
      "sha512": "AxkxcPR+rheX0SmvpLVIGLhOUXAKG56a64kV9VQZ4y9gR9ZmPXnqZvHJnmwLSwzrEP6junUF11vuc+aqo5r68g==",
      "type": "package",
      "path": "microsoft.codeanalysis.analyzers/3.3.4",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "analyzers/dotnet/cs/Microsoft.CodeAnalysis.Analyzers.dll",
        "analyzers/dotnet/cs/Microsoft.CodeAnalysis.CSharp.Analyzers.dll",
        "analyzers/dotnet/cs/cs/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/de/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/es/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/fr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/it/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ja/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ko/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pl/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/pt-BR/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/ru/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/tr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/zh-Hans/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/cs/zh-Hant/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/Microsoft.CodeAnalysis.Analyzers.dll",
        "analyzers/dotnet/vb/Microsoft.CodeAnalysis.VisualBasic.Analyzers.dll",
        "analyzers/dotnet/vb/cs/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/de/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/es/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/fr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/it/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ja/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ko/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/pl/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/pt-BR/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/ru/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/tr/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/zh-Hans/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "analyzers/dotnet/vb/zh-Hant/Microsoft.CodeAnalysis.Analyzers.resources.dll",
        "buildTransitive/Microsoft.CodeAnalysis.Analyzers.props",
        "buildTransitive/Microsoft.CodeAnalysis.Analyzers.targets",
        "buildTransitive/config/analysislevel_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevel_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_all.globalconfig",
        "buildTransitive/config/analysislevel_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_default.globalconfig",
        "buildTransitive/config/analysislevel_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_none.globalconfig",
        "buildTransitive/config/analysislevel_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_all.globalconfig",
        "buildTransitive/config/analysislevel_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_default.globalconfig",
        "buildTransitive/config/analysislevel_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevel_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_none.globalconfig",
        "buildTransitive/config/analysislevel_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevel_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevel_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelcorrectness_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_all.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_default.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_none.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevellibrary_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscompatibility_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysiscorrectness_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdesign_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisdocumentation_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysislocalization_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisperformance_4_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_2_9_8_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_3_recommended_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_all.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_all_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_default.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_default_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_minimum.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_minimum_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_none.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_none_warnaserror.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_recommended.globalconfig",
        "buildTransitive/config/analysislevelmicrosoftcodeanalysisreleasetracking_4_3_recommended_warnaserror.globalconfig",
        "documentation/Analyzer Configuration.md",
        "documentation/Microsoft.CodeAnalysis.Analyzers.md",
        "documentation/Microsoft.CodeAnalysis.Analyzers.sarif",
        "editorconfig/AllRulesDefault/.editorconfig",
        "editorconfig/AllRulesDisabled/.editorconfig",
        "editorconfig/AllRulesEnabled/.editorconfig",
        "editorconfig/CorrectnessRulesDefault/.editorconfig",
        "editorconfig/CorrectnessRulesEnabled/.editorconfig",
        "editorconfig/DataflowRulesDefault/.editorconfig",
        "editorconfig/DataflowRulesEnabled/.editorconfig",
        "editorconfig/LibraryRulesDefault/.editorconfig",
        "editorconfig/LibraryRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCompatibilityRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCompatibilityRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCorrectnessRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisCorrectnessRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDesignRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDesignRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDocumentationRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisDocumentationRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisLocalizationRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisLocalizationRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisPerformanceRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisPerformanceRulesEnabled/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisReleaseTrackingRulesDefault/.editorconfig",
        "editorconfig/MicrosoftCodeAnalysisReleaseTrackingRulesEnabled/.editorconfig",
        "editorconfig/PortedFromFxCopRulesDefault/.editorconfig",
        "editorconfig/PortedFromFxCopRulesEnabled/.editorconfig",
        "microsoft.codeanalysis.analyzers.3.3.4.nupkg.sha512",
        "microsoft.codeanalysis.analyzers.nuspec",
        "rulesets/AllRulesDefault.ruleset",
        "rulesets/AllRulesDisabled.ruleset",
        "rulesets/AllRulesEnabled.ruleset",
        "rulesets/CorrectnessRulesDefault.ruleset",
        "rulesets/CorrectnessRulesEnabled.ruleset",
        "rulesets/DataflowRulesDefault.ruleset",
        "rulesets/DataflowRulesEnabled.ruleset",
        "rulesets/LibraryRulesDefault.ruleset",
        "rulesets/LibraryRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisCompatibilityRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisCompatibilityRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisCorrectnessRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisCorrectnessRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisDesignRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisDesignRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisDocumentationRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisDocumentationRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisLocalizationRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisLocalizationRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisPerformanceRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisPerformanceRulesEnabled.ruleset",
        "rulesets/MicrosoftCodeAnalysisReleaseTrackingRulesDefault.ruleset",
        "rulesets/MicrosoftCodeAnalysisReleaseTrackingRulesEnabled.ruleset",
        "rulesets/PortedFromFxCopRulesDefault.ruleset",
        "rulesets/PortedFromFxCopRulesEnabled.ruleset",
        "tools/install.ps1",
        "tools/uninstall.ps1"
      ]
    },
    "Microsoft.CodeAnalysis.Common/4.8.0": {
      "sha512": "/jR+e/9aT+BApoQJABlVCKnnggGQbvGh7BKq2/wI1LamxC+LbzhcLj4Vj7gXCofl1n4E521YfF9w0WcASGg/KA==",
      "type": "package",
      "path": "microsoft.codeanalysis.common/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.resources.dll",
        "microsoft.codeanalysis.common.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.common.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.CSharp/4.8.0": {
      "sha512": "+3+qfdb/aaGD8PZRCrsdobbzGs1m9u119SkkJt8e/mk3xLJz/udLtS2T6nY27OTXxBBw10HzAbC8Z9w08VyP/g==",
      "type": "package",
      "path": "microsoft.codeanalysis.csharp/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.resources.dll",
        "microsoft.codeanalysis.csharp.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.csharp.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.CSharp.Workspaces/4.8.0": {
      "sha512": "3amm4tq4Lo8/BGvg9p3BJh3S9nKq2wqCXfS7138i69TUpo/bD+XvD0hNurpEBtcNZhi1FyutiomKJqVF39ugYA==",
      "type": "package",
      "path": "microsoft.codeanalysis.csharp.workspaces/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.CSharp.Workspaces.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.CSharp.Workspaces.resources.dll",
        "microsoft.codeanalysis.csharp.workspaces.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.csharp.workspaces.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Workspaces.Common/4.8.0": {
      "sha512": "LXyV+MJKsKRu3FGJA3OmSk40OUIa/dQCFLOnm5X8MNcujx7hzGu8o+zjXlb/cy5xUdZK2UKYb9YaQ2E8m9QehQ==",
      "type": "package",
      "path": "microsoft.codeanalysis.workspaces.common/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.dll",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.pdb",
        "lib/netstandard2.0/Microsoft.CodeAnalysis.Workspaces.xml",
        "lib/netstandard2.0/cs/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/de/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/es/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/it/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.resources.dll",
        "microsoft.codeanalysis.workspaces.common.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.workspaces.common.nuspec"
      ]
    },
    "Microsoft.CodeAnalysis.Workspaces.MSBuild/4.8.0": {
      "sha512": "IEYreI82QZKklp54yPHxZNG9EKSK6nHEkeuf+0Asie9llgS1gp0V1hw7ODG+QyoB7MuAnNQHmeV1Per/ECpv6A==",
      "type": "package",
      "path": "microsoft.codeanalysis.workspaces.msbuild/4.8.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.rtf",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.exe",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net472/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net472/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net472/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.runtimeconfig.json",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net6.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net6.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net6.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.runtimeconfig.json",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.xml",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.dll",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.pdb",
        "lib/net7.0/Microsoft.CodeAnalysis.Workspaces.MSBuild.xml",
        "lib/net7.0/cs/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/de/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/es/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/fr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/it/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ja/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ko/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/pl/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/pt-BR/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/ru/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/tr/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/zh-Hans/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "lib/net7.0/zh-Hant/Microsoft.CodeAnalysis.Workspaces.MSBuild.BuildHost.resources.dll",
        "microsoft.codeanalysis.workspaces.msbuild.4.8.0.nupkg.sha512",
        "microsoft.codeanalysis.workspaces.msbuild.nuspec"
      ]
    },
    "Microsoft.CodeCoverage/17.14.1": {
      "sha512": "pmTrhfFIoplzFVbhVwUquT+77CbGH+h4/3mBpdmIlYtBi9nAB+kKI6dN3A/nV4DFi3wLLx/BlHIPK+MkbQ6Tpg==",
      "type": "package",
      "path": "microsoft.codecoverage/17.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "build/netstandard2.0/CodeCoverage/CodeCoverage.config",
        "build/netstandard2.0/CodeCoverage/CodeCoverage.exe",
        "build/netstandard2.0/CodeCoverage/Cov_x86.config",
        "build/netstandard2.0/CodeCoverage/amd64/CodeCoverage.exe",
        "build/netstandard2.0/CodeCoverage/amd64/Cov_x64.config",
        "build/netstandard2.0/CodeCoverage/amd64/covrun64.dll",
        "build/netstandard2.0/CodeCoverage/amd64/msdia140.dll",
        "build/netstandard2.0/CodeCoverage/arm64/Cov_arm64.config",
        "build/netstandard2.0/CodeCoverage/arm64/covrunarm64.dll",
        "build/netstandard2.0/CodeCoverage/arm64/msdia140.dll",
        "build/netstandard2.0/CodeCoverage/codecoveragemessages.dll",
        "build/netstandard2.0/CodeCoverage/coreclr/Microsoft.VisualStudio.CodeCoverage.Shim.dll",
        "build/netstandard2.0/CodeCoverage/covrun32.dll",
        "build/netstandard2.0/CodeCoverage/msdia140.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Core.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Instrumentation.Core.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Instrumentation.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.Interprocess.dll",
        "build/netstandard2.0/Microsoft.CodeCoverage.props",
        "build/netstandard2.0/Microsoft.CodeCoverage.targets",
        "build/netstandard2.0/Microsoft.DiaSymReader.dll",
        "build/netstandard2.0/Microsoft.VisualStudio.TraceDataCollector.dll",
        "build/netstandard2.0/Mono.Cecil.Pdb.dll",
        "build/netstandard2.0/Mono.Cecil.Rocks.dll",
        "build/netstandard2.0/Mono.Cecil.dll",
        "build/netstandard2.0/ThirdPartyNotices.txt",
        "build/netstandard2.0/alpine/x64/Cov_x64.config",
        "build/netstandard2.0/alpine/x64/libCoverageInstrumentationMethod.so",
        "build/netstandard2.0/alpine/x64/libInstrumentationEngine.so",
        "build/netstandard2.0/arm64/MicrosoftInstrumentationEngine_arm64.dll",
        "build/netstandard2.0/cs/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/de/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/es/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/fr/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/it/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ja/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ko/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/macos/x64/Cov_x64.config",
        "build/netstandard2.0/macos/x64/libCoverageInstrumentationMethod.dylib",
        "build/netstandard2.0/macos/x64/libInstrumentationEngine.dylib",
        "build/netstandard2.0/pl/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/pt-BR/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ru/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/tr/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/ubuntu/x64/Cov_x64.config",
        "build/netstandard2.0/ubuntu/x64/libCoverageInstrumentationMethod.so",
        "build/netstandard2.0/ubuntu/x64/libInstrumentationEngine.so",
        "build/netstandard2.0/x64/MicrosoftInstrumentationEngine_x64.dll",
        "build/netstandard2.0/x86/MicrosoftInstrumentationEngine_x86.dll",
        "build/netstandard2.0/zh-Hans/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "build/netstandard2.0/zh-Hant/Microsoft.VisualStudio.TraceDataCollector.resources.dll",
        "lib/net462/Microsoft.VisualStudio.CodeCoverage.Shim.dll",
        "lib/net8.0/Microsoft.VisualStudio.CodeCoverage.Shim.dll",
        "microsoft.codecoverage.17.14.1.nupkg.sha512",
        "microsoft.codecoverage.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore/9.0.8": {
      "sha512": "bNGdPhN762+BIIO5MFYLjafRqkSS1MqLOc/erd55InvLnFxt9H3N5JNsuag1ZHyBor1VtD42U0CHpgqkWeAYgQ==",
      "type": "package",
      "path": "microsoft.entityframeworkcore/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "buildTransitive/net8.0/Microsoft.EntityFrameworkCore.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.xml",
        "microsoft.entityframeworkcore.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Abstractions/9.0.8": {
      "sha512": "B2yfAIQRRAQ4zvvWqh+HudD+juV3YoLlpXnrog3tU0PM9AFpuq6xo0+mEglN1P43WgdcUiF+65CWBcZe35s15Q==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
        "microsoft.entityframeworkcore.abstractions.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.abstractions.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Analyzers/9.0.8": {
      "sha512": "2EYStCXt4Hi9p3J3EYMQbItJDtASJd064Kcs8C8hj8Jt5srILrR9qlaL0Ryvk8NrWQoCQvIELsmiuqLEZMLvGA==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.analyzers/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
        "docs/PACKAGE.md",
        "microsoft.entityframeworkcore.analyzers.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.analyzers.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Design/9.0.8": {
      "sha512": "02e8OcoumSUAES3VkXrMT9EnNCUKWJoifn5+8fFEbAtRhKL3xg2a/Mj6rsAUGF7tkYFox6oKzJCn0jbm6b8Lbw==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.design/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "build/net8.0/Microsoft.EntityFrameworkCore.Design.props",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Design.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Design.xml",
        "microsoft.entityframeworkcore.design.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.design.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Relational/9.0.8": {
      "sha512": "OVhfyxiHxMvYpwQ8Jy3YZi4koy6TK5/Q7C1oq3z6db+HEGuu6x9L1BX5zDIdJxxlRePMyO4D8ORiXj/D7+MUqw==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.relational/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "PACKAGE.md",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.dll",
        "lib/net8.0/Microsoft.EntityFrameworkCore.Relational.xml",
        "microsoft.entityframeworkcore.relational.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.relational.nuspec"
      ]
    },
    "Microsoft.EntityFrameworkCore.Tools/9.0.8": {
      "sha512": "gtjwfJsEB5Mz5qOhdYjm+9KWJEVmVu5xxOgrxHxW6dNmhGfwdNXnNx5Nvdk6IHt0hmn0OK6MREMZEOsjrnSCfA==",
      "type": "package",
      "path": "microsoft.entityframeworkcore.tools/9.0.8",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "docs/PACKAGE.md",
        "microsoft.entityframeworkcore.tools.9.0.8.nupkg.sha512",
        "microsoft.entityframeworkcore.tools.nuspec",
        "tools/EntityFrameworkCore.PS2.psd1",
        "tools/EntityFrameworkCore.PS2.psm1",
        "tools/EntityFrameworkCore.psd1",
        "tools/EntityFrameworkCore.psm1",
        "tools/about_EntityFrameworkCore.help.txt",
        "tools/init.ps1",
        "tools/net472/any/ef.exe",
        "tools/net472/win-arm64/ef.exe",
        "tools/net472/win-x86/ef.exe",
        "tools/netcoreapp2.0/any/ef.dll",
        "tools/netcoreapp2.0/any/ef.runtimeconfig.json"
      ]
    },
    "Microsoft.Extensions.ApiDescription.Server/6.0.5": {
      "sha512": "Ckb5EDBUNJdFWyajfXzUIMRkhf52fHZOQuuZg/oiu8y7zDCVwD0iHhew6MnThjHmevanpxL3f5ci2TtHQEN6bw==",
      "type": "package",
      "path": "microsoft.extensions.apidescription.server/6.0.5",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "build/Microsoft.Extensions.ApiDescription.Server.props",
        "build/Microsoft.Extensions.ApiDescription.Server.targets",
        "buildMultiTargeting/Microsoft.Extensions.ApiDescription.Server.props",
        "buildMultiTargeting/Microsoft.Extensions.ApiDescription.Server.targets",
        "microsoft.extensions.apidescription.server.6.0.5.nupkg.sha512",
        "microsoft.extensions.apidescription.server.nuspec",
        "tools/Newtonsoft.Json.dll",
        "tools/dotnet-getdocument.deps.json",
        "tools/dotnet-getdocument.dll",
        "tools/dotnet-getdocument.runtimeconfig.json",
        "tools/net461-x86/GetDocument.Insider.exe",
        "tools/net461-x86/GetDocument.Insider.exe.config",
        "tools/net461-x86/Microsoft.Win32.Primitives.dll",
        "tools/net461-x86/System.AppContext.dll",
        "tools/net461-x86/System.Buffers.dll",
        "tools/net461-x86/System.Collections.Concurrent.dll",
        "tools/net461-x86/System.Collections.NonGeneric.dll",
        "tools/net461-x86/System.Collections.Specialized.dll",
        "tools/net461-x86/System.Collections.dll",
        "tools/net461-x86/System.ComponentModel.EventBasedAsync.dll",
        "tools/net461-x86/System.ComponentModel.Primitives.dll",
        "tools/net461-x86/System.ComponentModel.TypeConverter.dll",
        "tools/net461-x86/System.ComponentModel.dll",
        "tools/net461-x86/System.Console.dll",
        "tools/net461-x86/System.Data.Common.dll",
        "tools/net461-x86/System.Diagnostics.Contracts.dll",
        "tools/net461-x86/System.Diagnostics.Debug.dll",
        "tools/net461-x86/System.Diagnostics.DiagnosticSource.dll",
        "tools/net461-x86/System.Diagnostics.FileVersionInfo.dll",
        "tools/net461-x86/System.Diagnostics.Process.dll",
        "tools/net461-x86/System.Diagnostics.StackTrace.dll",
        "tools/net461-x86/System.Diagnostics.TextWriterTraceListener.dll",
        "tools/net461-x86/System.Diagnostics.Tools.dll",
        "tools/net461-x86/System.Diagnostics.TraceSource.dll",
        "tools/net461-x86/System.Diagnostics.Tracing.dll",
        "tools/net461-x86/System.Drawing.Primitives.dll",
        "tools/net461-x86/System.Dynamic.Runtime.dll",
        "tools/net461-x86/System.Globalization.Calendars.dll",
        "tools/net461-x86/System.Globalization.Extensions.dll",
        "tools/net461-x86/System.Globalization.dll",
        "tools/net461-x86/System.IO.Compression.ZipFile.dll",
        "tools/net461-x86/System.IO.Compression.dll",
        "tools/net461-x86/System.IO.FileSystem.DriveInfo.dll",
        "tools/net461-x86/System.IO.FileSystem.Primitives.dll",
        "tools/net461-x86/System.IO.FileSystem.Watcher.dll",
        "tools/net461-x86/System.IO.FileSystem.dll",
        "tools/net461-x86/System.IO.IsolatedStorage.dll",
        "tools/net461-x86/System.IO.MemoryMappedFiles.dll",
        "tools/net461-x86/System.IO.Pipes.dll",
        "tools/net461-x86/System.IO.UnmanagedMemoryStream.dll",
        "tools/net461-x86/System.IO.dll",
        "tools/net461-x86/System.Linq.Expressions.dll",
        "tools/net461-x86/System.Linq.Parallel.dll",
        "tools/net461-x86/System.Linq.Queryable.dll",
        "tools/net461-x86/System.Linq.dll",
        "tools/net461-x86/System.Memory.dll",
        "tools/net461-x86/System.Net.Http.dll",
        "tools/net461-x86/System.Net.NameResolution.dll",
        "tools/net461-x86/System.Net.NetworkInformation.dll",
        "tools/net461-x86/System.Net.Ping.dll",
        "tools/net461-x86/System.Net.Primitives.dll",
        "tools/net461-x86/System.Net.Requests.dll",
        "tools/net461-x86/System.Net.Security.dll",
        "tools/net461-x86/System.Net.Sockets.dll",
        "tools/net461-x86/System.Net.WebHeaderCollection.dll",
        "tools/net461-x86/System.Net.WebSockets.Client.dll",
        "tools/net461-x86/System.Net.WebSockets.dll",
        "tools/net461-x86/System.Numerics.Vectors.dll",
        "tools/net461-x86/System.ObjectModel.dll",
        "tools/net461-x86/System.Reflection.Extensions.dll",
        "tools/net461-x86/System.Reflection.Primitives.dll",
        "tools/net461-x86/System.Reflection.dll",
        "tools/net461-x86/System.Resources.Reader.dll",
        "tools/net461-x86/System.Resources.ResourceManager.dll",
        "tools/net461-x86/System.Resources.Writer.dll",
        "tools/net461-x86/System.Runtime.CompilerServices.Unsafe.dll",
        "tools/net461-x86/System.Runtime.CompilerServices.VisualC.dll",
        "tools/net461-x86/System.Runtime.Extensions.dll",
        "tools/net461-x86/System.Runtime.Handles.dll",
        "tools/net461-x86/System.Runtime.InteropServices.RuntimeInformation.dll",
        "tools/net461-x86/System.Runtime.InteropServices.dll",
        "tools/net461-x86/System.Runtime.Numerics.dll",
        "tools/net461-x86/System.Runtime.Serialization.Formatters.dll",
        "tools/net461-x86/System.Runtime.Serialization.Json.dll",
        "tools/net461-x86/System.Runtime.Serialization.Primitives.dll",
        "tools/net461-x86/System.Runtime.Serialization.Xml.dll",
        "tools/net461-x86/System.Runtime.dll",
        "tools/net461-x86/System.Security.Claims.dll",
        "tools/net461-x86/System.Security.Cryptography.Algorithms.dll",
        "tools/net461-x86/System.Security.Cryptography.Csp.dll",
        "tools/net461-x86/System.Security.Cryptography.Encoding.dll",
        "tools/net461-x86/System.Security.Cryptography.Primitives.dll",
        "tools/net461-x86/System.Security.Cryptography.X509Certificates.dll",
        "tools/net461-x86/System.Security.Principal.dll",
        "tools/net461-x86/System.Security.SecureString.dll",
        "tools/net461-x86/System.Text.Encoding.Extensions.dll",
        "tools/net461-x86/System.Text.Encoding.dll",
        "tools/net461-x86/System.Text.RegularExpressions.dll",
        "tools/net461-x86/System.Threading.Overlapped.dll",
        "tools/net461-x86/System.Threading.Tasks.Parallel.dll",
        "tools/net461-x86/System.Threading.Tasks.dll",
        "tools/net461-x86/System.Threading.Thread.dll",
        "tools/net461-x86/System.Threading.ThreadPool.dll",
        "tools/net461-x86/System.Threading.Timer.dll",
        "tools/net461-x86/System.Threading.dll",
        "tools/net461-x86/System.ValueTuple.dll",
        "tools/net461-x86/System.Xml.ReaderWriter.dll",
        "tools/net461-x86/System.Xml.XDocument.dll",
        "tools/net461-x86/System.Xml.XPath.XDocument.dll",
        "tools/net461-x86/System.Xml.XPath.dll",
        "tools/net461-x86/System.Xml.XmlDocument.dll",
        "tools/net461-x86/System.Xml.XmlSerializer.dll",
        "tools/net461-x86/netstandard.dll",
        "tools/net461/GetDocument.Insider.exe",
        "tools/net461/GetDocument.Insider.exe.config",
        "tools/net461/Microsoft.Win32.Primitives.dll",
        "tools/net461/System.AppContext.dll",
        "tools/net461/System.Buffers.dll",
        "tools/net461/System.Collections.Concurrent.dll",
        "tools/net461/System.Collections.NonGeneric.dll",
        "tools/net461/System.Collections.Specialized.dll",
        "tools/net461/System.Collections.dll",
        "tools/net461/System.ComponentModel.EventBasedAsync.dll",
        "tools/net461/System.ComponentModel.Primitives.dll",
        "tools/net461/System.ComponentModel.TypeConverter.dll",
        "tools/net461/System.ComponentModel.dll",
        "tools/net461/System.Console.dll",
        "tools/net461/System.Data.Common.dll",
        "tools/net461/System.Diagnostics.Contracts.dll",
        "tools/net461/System.Diagnostics.Debug.dll",
        "tools/net461/System.Diagnostics.DiagnosticSource.dll",
        "tools/net461/System.Diagnostics.FileVersionInfo.dll",
        "tools/net461/System.Diagnostics.Process.dll",
        "tools/net461/System.Diagnostics.StackTrace.dll",
        "tools/net461/System.Diagnostics.TextWriterTraceListener.dll",
        "tools/net461/System.Diagnostics.Tools.dll",
        "tools/net461/System.Diagnostics.TraceSource.dll",
        "tools/net461/System.Diagnostics.Tracing.dll",
        "tools/net461/System.Drawing.Primitives.dll",
        "tools/net461/System.Dynamic.Runtime.dll",
        "tools/net461/System.Globalization.Calendars.dll",
        "tools/net461/System.Globalization.Extensions.dll",
        "tools/net461/System.Globalization.dll",
        "tools/net461/System.IO.Compression.ZipFile.dll",
        "tools/net461/System.IO.Compression.dll",
        "tools/net461/System.IO.FileSystem.DriveInfo.dll",
        "tools/net461/System.IO.FileSystem.Primitives.dll",
        "tools/net461/System.IO.FileSystem.Watcher.dll",
        "tools/net461/System.IO.FileSystem.dll",
        "tools/net461/System.IO.IsolatedStorage.dll",
        "tools/net461/System.IO.MemoryMappedFiles.dll",
        "tools/net461/System.IO.Pipes.dll",
        "tools/net461/System.IO.UnmanagedMemoryStream.dll",
        "tools/net461/System.IO.dll",
        "tools/net461/System.Linq.Expressions.dll",
        "tools/net461/System.Linq.Parallel.dll",
        "tools/net461/System.Linq.Queryable.dll",
        "tools/net461/System.Linq.dll",
        "tools/net461/System.Memory.dll",
        "tools/net461/System.Net.Http.dll",
        "tools/net461/System.Net.NameResolution.dll",
        "tools/net461/System.Net.NetworkInformation.dll",
        "tools/net461/System.Net.Ping.dll",
        "tools/net461/System.Net.Primitives.dll",
        "tools/net461/System.Net.Requests.dll",
        "tools/net461/System.Net.Security.dll",
        "tools/net461/System.Net.Sockets.dll",
        "tools/net461/System.Net.WebHeaderCollection.dll",
        "tools/net461/System.Net.WebSockets.Client.dll",
        "tools/net461/System.Net.WebSockets.dll",
        "tools/net461/System.Numerics.Vectors.dll",
        "tools/net461/System.ObjectModel.dll",
        "tools/net461/System.Reflection.Extensions.dll",
        "tools/net461/System.Reflection.Primitives.dll",
        "tools/net461/System.Reflection.dll",
        "tools/net461/System.Resources.Reader.dll",
        "tools/net461/System.Resources.ResourceManager.dll",
        "tools/net461/System.Resources.Writer.dll",
        "tools/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "tools/net461/System.Runtime.CompilerServices.VisualC.dll",
        "tools/net461/System.Runtime.Extensions.dll",
        "tools/net461/System.Runtime.Handles.dll",
        "tools/net461/System.Runtime.InteropServices.RuntimeInformation.dll",
        "tools/net461/System.Runtime.InteropServices.dll",
        "tools/net461/System.Runtime.Numerics.dll",
        "tools/net461/System.Runtime.Serialization.Formatters.dll",
        "tools/net461/System.Runtime.Serialization.Json.dll",
        "tools/net461/System.Runtime.Serialization.Primitives.dll",
        "tools/net461/System.Runtime.Serialization.Xml.dll",
        "tools/net461/System.Runtime.dll",
        "tools/net461/System.Security.Claims.dll",
        "tools/net461/System.Security.Cryptography.Algorithms.dll",
        "tools/net461/System.Security.Cryptography.Csp.dll",
        "tools/net461/System.Security.Cryptography.Encoding.dll",
        "tools/net461/System.Security.Cryptography.Primitives.dll",
        "tools/net461/System.Security.Cryptography.X509Certificates.dll",
        "tools/net461/System.Security.Principal.dll",
        "tools/net461/System.Security.SecureString.dll",
        "tools/net461/System.Text.Encoding.Extensions.dll",
        "tools/net461/System.Text.Encoding.dll",
        "tools/net461/System.Text.RegularExpressions.dll",
        "tools/net461/System.Threading.Overlapped.dll",
        "tools/net461/System.Threading.Tasks.Parallel.dll",
        "tools/net461/System.Threading.Tasks.dll",
        "tools/net461/System.Threading.Thread.dll",
        "tools/net461/System.Threading.ThreadPool.dll",
        "tools/net461/System.Threading.Timer.dll",
        "tools/net461/System.Threading.dll",
        "tools/net461/System.ValueTuple.dll",
        "tools/net461/System.Xml.ReaderWriter.dll",
        "tools/net461/System.Xml.XDocument.dll",
        "tools/net461/System.Xml.XPath.XDocument.dll",
        "tools/net461/System.Xml.XPath.dll",
        "tools/net461/System.Xml.XmlDocument.dll",
        "tools/net461/System.Xml.XmlSerializer.dll",
        "tools/net461/netstandard.dll",
        "tools/netcoreapp2.1/GetDocument.Insider.deps.json",
        "tools/netcoreapp2.1/GetDocument.Insider.dll",
        "tools/netcoreapp2.1/GetDocument.Insider.runtimeconfig.json",
        "tools/netcoreapp2.1/System.Diagnostics.DiagnosticSource.dll"
      ]
    },
    "Microsoft.Extensions.Caching.Abstractions/9.0.8": {
      "sha512": "4h7bsVoKoiK+SlPM+euX/ayGnKZhl47pPCidLTiio9xyG+vgVVfcYxcYQgjm0SCrdSxjG0EGIAKF8EFr3G8Ifw==",
      "type": "package",
      "path": "microsoft.extensions.caching.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
        "microsoft.extensions.caching.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.caching.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Caching.Memory/9.0.8": {
      "sha512": "grR+oPyj8HVn4DT8CFUUdSw2pZZKS13KjytFe4txpHQliGM1GEDotohmjgvyl3hm7RFB3FRqvbouEX3/1ewp5A==",
      "type": "package",
      "path": "microsoft.extensions.caching.memory/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Caching.Memory.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Caching.Memory.targets",
        "lib/net462/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net462/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net8.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/net9.0/Microsoft.Extensions.Caching.Memory.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
        "microsoft.extensions.caching.memory.9.0.8.nupkg.sha512",
        "microsoft.extensions.caching.memory.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration/8.0.0": {
      "sha512": "0J/9YNXTMWSZP2p2+nvl8p71zpSwokZXZuJW+VjdErkegAnFdO1XlqtA62SJtgVYHdKu3uPxJHcMR/r35HwFBA==",
      "type": "package",
      "path": "microsoft.extensions.configuration/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.targets",
        "lib/net462/Microsoft.Extensions.Configuration.dll",
        "lib/net462/Microsoft.Extensions.Configuration.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.xml",
        "microsoft.extensions.configuration.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Abstractions/9.0.8": {
      "sha512": "yNou2KM35RvzOh4vUFtl2l33rWPvOCoba+nzEDJ+BgD8aOL/jew4WPCibQvntRfOJ2pJU8ARygSMD+pdjvDHuA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
        "microsoft.extensions.configuration.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.configuration.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Binder/8.0.2": {
      "sha512": "7IQhGK+wjyGrNsPBjJcZwWAr+Wf6D4+TwOptUt77bWtgNkiV8tDEbhFS+dDamtQFZ2X7kWG9m71iZQRj2x3zgQ==",
      "type": "package",
      "path": "microsoft.extensions.configuration.binder/8.0.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/cs/Microsoft.Extensions.Configuration.Binder.SourceGeneration.dll",
        "analyzers/dotnet/cs/cs/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/de/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/es/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/fr/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/it/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ja/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ko/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/pl/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/pt-BR/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/ru/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/tr/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/zh-Hans/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "analyzers/dotnet/cs/zh-Hant/Microsoft.Extensions.Configuration.Binder.SourceGeneration.resources.dll",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.Binder.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Binder.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.xml",
        "microsoft.extensions.configuration.binder.8.0.2.nupkg.sha512",
        "microsoft.extensions.configuration.binder.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.CommandLine/8.0.0": {
      "sha512": "NZuZMz3Q8Z780nKX3ifV1fE7lS+6pynDHK71OfU4OZ1ItgvDOhyOC7E6z+JMZrAj63zRpwbdldYFk499t3+1dQ==",
      "type": "package",
      "path": "microsoft.extensions.configuration.commandline/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.CommandLine.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.CommandLine.targets",
        "lib/net462/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net462/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.CommandLine.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.CommandLine.xml",
        "microsoft.extensions.configuration.commandline.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.commandline.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.EnvironmentVariables/8.0.0": {
      "sha512": "plvZ0ZIpq+97gdPNNvhwvrEZ92kNml9hd1pe3idMA7svR0PztdzVLkoWLcRFgySYXUJc3kSM3Xw3mNFMo/bxRA==",
      "type": "package",
      "path": "microsoft.extensions.configuration.environmentvariables/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.EnvironmentVariables.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.targets",
        "lib/net462/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net462/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.EnvironmentVariables.xml",
        "microsoft.extensions.configuration.environmentvariables.8.0.0.nupkg.sha512",
        "microsoft.extensions.configuration.environmentvariables.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.FileExtensions/8.0.1": {
      "sha512": "EJzSNO9oaAXnTdtdNO6npPRsIIeZCBSNmdQ091VDO7fBiOtJAAeEq6dtrVXIi3ZyjC5XRSAtVvF8SzcneRHqKQ==",
      "type": "package",
      "path": "microsoft.extensions.configuration.fileextensions/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.FileExtensions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.FileExtensions.targets",
        "lib/net462/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net462/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
        "microsoft.extensions.configuration.fileextensions.8.0.1.nupkg.sha512",
        "microsoft.extensions.configuration.fileextensions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.Json/8.0.1": {
      "sha512": "L89DLNuimOghjV3tLx0ArFDwVEJD6+uGB3BMCMX01kaLzXkaXHb2021xOMl2QOxUxbdePKUZsUY7n2UUkycjRg==",
      "type": "package",
      "path": "microsoft.extensions.configuration.json/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.Json.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.Json.targets",
        "lib/net462/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net462/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Configuration.Json.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Configuration.Json.xml",
        "microsoft.extensions.configuration.json.8.0.1.nupkg.sha512",
        "microsoft.extensions.configuration.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Configuration.UserSecrets/8.0.1": {
      "sha512": "7tYqdPPpAK+3jO9d5LTuCK2VxrEdf85Ol4trUr6ds4jclBecadWZ/RyPCbNjfbN5iGTfUnD/h65TOQuqQv2c+A==",
      "type": "package",
      "path": "microsoft.extensions.configuration.usersecrets/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/net462/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/net462/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/net6.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.props",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.targets",
        "lib/net462/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net462/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net6.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net6.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net7.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net7.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/net8.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Configuration.UserSecrets.xml",
        "microsoft.extensions.configuration.usersecrets.8.0.1.nupkg.sha512",
        "microsoft.extensions.configuration.usersecrets.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection/9.0.8": {
      "sha512": "JJjI2Fa+QtZcUyuNjbKn04OjIUX5IgFGFu/Xc+qvzh1rXdZHLcnqqVXhR4093bGirTwacRlHiVg1XYI9xum6QQ==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
        "microsoft.extensions.dependencyinjection.9.0.8.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyInjection.Abstractions/9.0.8": {
      "sha512": "xY3lTjj4+ZYmiKIkyWitddrp1uL5uYiweQjqo4BKBw01ZC4HhcfgLghDpPZcUlppgWAFqFy9SgkiYWOMx365pw==",
      "type": "package",
      "path": "microsoft.extensions.dependencyinjection.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyInjection.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
        "microsoft.extensions.dependencyinjection.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.dependencyinjection.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.DependencyModel/9.0.8": {
      "sha512": "3CW02zNjyqJ2eORo8Zkznpw6+QvK+tYUKZgKuKuAIYdy73TRFvpaqCwYws1k6/lMSJ7ZqABfWn0/wa5bRsIJ4w==",
      "type": "package",
      "path": "microsoft.extensions.dependencymodel/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.DependencyModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.DependencyModel.targets",
        "lib/net462/Microsoft.Extensions.DependencyModel.dll",
        "lib/net462/Microsoft.Extensions.DependencyModel.xml",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net8.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/net9.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/net9.0/Microsoft.Extensions.DependencyModel.xml",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.dll",
        "lib/netstandard2.0/Microsoft.Extensions.DependencyModel.xml",
        "microsoft.extensions.dependencymodel.9.0.8.nupkg.sha512",
        "microsoft.extensions.dependencymodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Diagnostics/8.0.1": {
      "sha512": "doVPCUUCY7c6LhBsEfiy3W1bvS7Mi6LkfQMS8nlC22jZWNxBv8VO8bdfeyvpYFst6Kxqk7HBC6lytmEoBssvSQ==",
      "type": "package",
      "path": "microsoft.extensions.diagnostics/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Diagnostics.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Diagnostics.targets",
        "lib/net462/Microsoft.Extensions.Diagnostics.dll",
        "lib/net462/Microsoft.Extensions.Diagnostics.xml",
        "lib/net6.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net6.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/net7.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net7.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.xml",
        "microsoft.extensions.diagnostics.8.0.1.nupkg.sha512",
        "microsoft.extensions.diagnostics.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Diagnostics.Abstractions/8.0.1": {
      "sha512": "elH2vmwNmsXuKmUeMQ4YW9ldXiF+gSGDgg1vORksob5POnpaI6caj1Hu8zaYbEuibhqCoWg0YRWDazBY3zjBfg==",
      "type": "package",
      "path": "microsoft.extensions.diagnostics.abstractions/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Diagnostics.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Diagnostics.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net6.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net6.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net7.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net7.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Diagnostics.Abstractions.xml",
        "microsoft.extensions.diagnostics.abstractions.8.0.1.nupkg.sha512",
        "microsoft.extensions.diagnostics.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileProviders.Abstractions/8.0.0": {
      "sha512": "ZbaMlhJlpisjuWbvXr4LdAst/1XxH3vZ6A0BsgTphZ2L4PGuxRLz7Jr/S7mkAAnOn78Vu0fKhEgNF5JO3zfjqQ==",
      "type": "package",
      "path": "microsoft.extensions.fileproviders.abstractions/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileProviders.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileProviders.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/net6.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net6.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
        "microsoft.extensions.fileproviders.abstractions.8.0.0.nupkg.sha512",
        "microsoft.extensions.fileproviders.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileProviders.Physical/8.0.0": {
      "sha512": "UboiXxpPUpwulHvIAVE36Knq0VSHaAmfrFkegLyBZeaADuKezJ/AIXYAW8F5GBlGk/VaibN2k/Zn1ca8YAfVdA==",
      "type": "package",
      "path": "microsoft.extensions.fileproviders.physical/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileProviders.Physical.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileProviders.Physical.targets",
        "lib/net462/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net462/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net6.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net6.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net7.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net7.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/net8.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.xml",
        "microsoft.extensions.fileproviders.physical.8.0.0.nupkg.sha512",
        "microsoft.extensions.fileproviders.physical.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.FileSystemGlobbing/8.0.0": {
      "sha512": "OK+670i7esqlQrPjdIKRbsyMCe9g5kSLpRRQGSr4Q58AOYEe/hCnfLZprh7viNisSUUQZmMrbbuDaIrP+V1ebQ==",
      "type": "package",
      "path": "microsoft.extensions.filesystemglobbing/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.FileSystemGlobbing.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.FileSystemGlobbing.targets",
        "lib/net462/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net462/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net6.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net6.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net7.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net7.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/net8.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.xml",
        "microsoft.extensions.filesystemglobbing.8.0.0.nupkg.sha512",
        "microsoft.extensions.filesystemglobbing.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting/8.0.1": {
      "sha512": "bP9EEkHBEfjgYiG8nUaXqMk/ujwJrffOkNPP7onpRMO8R+OUSESSP4xHkCAXgYZ1COP2Q9lXlU5gkMFh20gRuw==",
      "type": "package",
      "path": "microsoft.extensions.hosting/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.targets",
        "lib/net462/Microsoft.Extensions.Hosting.dll",
        "lib/net462/Microsoft.Extensions.Hosting.xml",
        "lib/net6.0/Microsoft.Extensions.Hosting.dll",
        "lib/net6.0/Microsoft.Extensions.Hosting.xml",
        "lib/net7.0/Microsoft.Extensions.Hosting.dll",
        "lib/net7.0/Microsoft.Extensions.Hosting.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.xml",
        "microsoft.extensions.hosting.8.0.1.nupkg.sha512",
        "microsoft.extensions.hosting.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Hosting.Abstractions/8.0.1": {
      "sha512": "nHwq9aPBdBPYXPti6wYEEfgXddfBrYC+CQLn+qISiwQq5tpfaqDZSKOJNxoe9rfQxGf1c+2wC/qWFe1QYJPYqw==",
      "type": "package",
      "path": "microsoft.extensions.hosting.abstractions/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Hosting.Abstractions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Hosting.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net6.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net6.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net7.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net7.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Hosting.Abstractions.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.Abstractions.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Hosting.Abstractions.xml",
        "microsoft.extensions.hosting.abstractions.8.0.1.nupkg.sha512",
        "microsoft.extensions.hosting.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging/9.0.8": {
      "sha512": "Z/7ze+0iheT7FJeZPqJKARYvyC2bmwu3whbm/48BJjdlGVvgDguoCqJIkI/67NkroTYobd5geai1WheNQvWrgA==",
      "type": "package",
      "path": "microsoft.extensions.logging/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.targets",
        "lib/net462/Microsoft.Extensions.Logging.dll",
        "lib/net462/Microsoft.Extensions.Logging.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Logging.xml",
        "microsoft.extensions.logging.9.0.8.nupkg.sha512",
        "microsoft.extensions.logging.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Abstractions/9.0.8": {
      "sha512": "pYnAffJL7ARD/HCnnPvnFKSIHnTSmWz84WIlT9tPeQ4lHNiu0Az7N/8itihWvcF8sT+VVD5lq8V+ckMzu4SbOw==",
      "type": "package",
      "path": "microsoft.extensions.logging.abstractions/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Logging.Generators.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Logging.Generators.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Logging.Generators.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net462/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.targets",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net462/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/net9.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
        "microsoft.extensions.logging.abstractions.9.0.8.nupkg.sha512",
        "microsoft.extensions.logging.abstractions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Configuration/8.0.1": {
      "sha512": "QWwTrsgOnJMmn+XUslm8D2H1n3PkP/u/v52FODtyBc/k4W9r3i2vcXXeeX/upnzllJYRRbrzVzT0OclfNJtBJA==",
      "type": "package",
      "path": "microsoft.extensions.logging.configuration/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Configuration.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Configuration.targets",
        "lib/net462/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net462/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Configuration.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Configuration.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Configuration.xml",
        "microsoft.extensions.logging.configuration.8.0.1.nupkg.sha512",
        "microsoft.extensions.logging.configuration.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Console/8.0.1": {
      "sha512": "uzcg/5U2eLyn5LIKlERkdSxw6VPC1yydnOSQiRRWGBGN3kphq3iL4emORzrojScDmxRhv49gp5BI8U3Dz7y4iA==",
      "type": "package",
      "path": "microsoft.extensions.logging.console/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Console.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Console.targets",
        "lib/net462/Microsoft.Extensions.Logging.Console.dll",
        "lib/net462/Microsoft.Extensions.Logging.Console.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Console.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Console.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Console.xml",
        "microsoft.extensions.logging.console.8.0.1.nupkg.sha512",
        "microsoft.extensions.logging.console.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.Debug/8.0.1": {
      "sha512": "B8hqNuYudC2RB+L/DI33uO4rf5by41fZVdcVL2oZj0UyoAZqnwTwYHp1KafoH4nkl1/23piNeybFFASaV2HkFg==",
      "type": "package",
      "path": "microsoft.extensions.logging.debug/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.Debug.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.Debug.targets",
        "lib/net462/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net462/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.Debug.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Debug.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.Debug.xml",
        "microsoft.extensions.logging.debug.8.0.1.nupkg.sha512",
        "microsoft.extensions.logging.debug.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.EventLog/8.0.1": {
      "sha512": "ZD1m4GXoxcZeDJIq8qePKj+QAWeQNO/OG8skvrOG8RQfxLp9MAKRoliTc27xanoNUzeqvX5HhS/I7c0BvwAYUg==",
      "type": "package",
      "path": "microsoft.extensions.logging.eventlog/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.EventLog.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.EventLog.targets",
        "lib/net462/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net462/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.EventLog.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventLog.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventLog.xml",
        "microsoft.extensions.logging.eventlog.8.0.1.nupkg.sha512",
        "microsoft.extensions.logging.eventlog.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Logging.EventSource/8.0.1": {
      "sha512": "YMXMAla6B6sEf/SnfZYTty633Ool3AH7KOw2LOaaEqwSo2piK4f7HMtzyc3CNiipDnq1fsUSuG5Oc7ZzpVy8WQ==",
      "type": "package",
      "path": "microsoft.extensions.logging.eventsource/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Logging.EventSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Logging.EventSource.targets",
        "lib/net462/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net462/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net6.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net6.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net7.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net7.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/net8.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/net8.0/Microsoft.Extensions.Logging.EventSource.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventSource.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Logging.EventSource.xml",
        "microsoft.extensions.logging.eventsource.8.0.1.nupkg.sha512",
        "microsoft.extensions.logging.eventsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.ObjectPool/8.0.0": {
      "sha512": "4pm+XgxSukskwjzDDfSjG4KNUIOdFF2VaqZZDtTzoyQMOVSnlV6ZM8a9aVu5dg9LVZTB//utzSc8fOi0b0Mb2Q==",
      "type": "package",
      "path": "microsoft.extensions.objectpool/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net462/Microsoft.Extensions.ObjectPool.dll",
        "lib/net462/Microsoft.Extensions.ObjectPool.xml",
        "lib/net8.0/Microsoft.Extensions.ObjectPool.dll",
        "lib/net8.0/Microsoft.Extensions.ObjectPool.xml",
        "lib/netstandard2.0/Microsoft.Extensions.ObjectPool.dll",
        "lib/netstandard2.0/Microsoft.Extensions.ObjectPool.xml",
        "microsoft.extensions.objectpool.8.0.0.nupkg.sha512",
        "microsoft.extensions.objectpool.nuspec"
      ]
    },
    "Microsoft.Extensions.Options/9.0.8": {
      "sha512": "OmTaQ0v4gxGQkehpwWIqPoEiwsPuG/u4HUsbOFoWGx4DKET2AXzopnFe/fE608FIhzc/kcg2p8JdyMRCCUzitQ==",
      "type": "package",
      "path": "microsoft.extensions.options/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn4.4/cs/Microsoft.Extensions.Options.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/Microsoft.Extensions.Options.SourceGeneration.resources.dll",
        "buildTransitive/net461/Microsoft.Extensions.Options.targets",
        "buildTransitive/net462/Microsoft.Extensions.Options.targets",
        "buildTransitive/net8.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.targets",
        "buildTransitive/netstandard2.0/Microsoft.Extensions.Options.targets",
        "lib/net462/Microsoft.Extensions.Options.dll",
        "lib/net462/Microsoft.Extensions.Options.xml",
        "lib/net8.0/Microsoft.Extensions.Options.dll",
        "lib/net8.0/Microsoft.Extensions.Options.xml",
        "lib/net9.0/Microsoft.Extensions.Options.dll",
        "lib/net9.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
        "lib/netstandard2.1/Microsoft.Extensions.Options.dll",
        "lib/netstandard2.1/Microsoft.Extensions.Options.xml",
        "microsoft.extensions.options.9.0.8.nupkg.sha512",
        "microsoft.extensions.options.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Options.ConfigurationExtensions/8.0.0": {
      "sha512": "0f4DMRqEd50zQh+UyJc+/HiBsZ3vhAQALgdkcQEalSH1L2isdC7Yj54M3cyo5e+BeO5fcBQ7Dxly8XiBBcvRgw==",
      "type": "package",
      "path": "microsoft.extensions.options.configurationextensions/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Options.ConfigurationExtensions.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Options.ConfigurationExtensions.targets",
        "lib/net462/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net462/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net6.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net6.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net7.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net7.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/net8.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Options.ConfigurationExtensions.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Options.ConfigurationExtensions.xml",
        "microsoft.extensions.options.configurationextensions.8.0.0.nupkg.sha512",
        "microsoft.extensions.options.configurationextensions.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.Extensions.Primitives/9.0.8": {
      "sha512": "tizSIOEsIgSNSSh+hKeUVPK7xmTIjR8s+mJWOu1KXV3htvNQiPMFRMO17OdI1y/4ZApdBVk49u/08QGC9yvLug==",
      "type": "package",
      "path": "microsoft.extensions.primitives/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/Microsoft.Extensions.Primitives.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/Microsoft.Extensions.Primitives.targets",
        "lib/net462/Microsoft.Extensions.Primitives.dll",
        "lib/net462/Microsoft.Extensions.Primitives.xml",
        "lib/net8.0/Microsoft.Extensions.Primitives.dll",
        "lib/net8.0/Microsoft.Extensions.Primitives.xml",
        "lib/net9.0/Microsoft.Extensions.Primitives.dll",
        "lib/net9.0/Microsoft.Extensions.Primitives.xml",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
        "microsoft.extensions.primitives.9.0.8.nupkg.sha512",
        "microsoft.extensions.primitives.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "Microsoft.IdentityModel.Abstractions/8.14.0": {
      "sha512": "iwbCpSjD3ehfTwBhtSNEtKPK0ICun6ov7Ibx6ISNA9bfwIyzI2Siwyi9eJFCJBwxowK9xcA1mj+jBWiigeqgcQ==",
      "type": "package",
      "path": "microsoft.identitymodel.abstractions/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net462/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net472/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net472/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net6.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net8.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/net9.0/Microsoft.IdentityModel.Abstractions.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Abstractions.xml",
        "microsoft.identitymodel.abstractions.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.abstractions.nuspec"
      ]
    },
    "Microsoft.IdentityModel.JsonWebTokens/8.14.0": {
      "sha512": "4jOpiA4THdtpLyMdAb24dtj7+6GmvhOhxf5XHLYWmPKF8ApEnApal1UnJsKO4HxUWRXDA6C4WQVfYyqsRhpNpQ==",
      "type": "package",
      "path": "microsoft.identitymodel.jsonwebtokens/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net462/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net472/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.JsonWebTokens.xml",
        "microsoft.identitymodel.jsonwebtokens.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.jsonwebtokens.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Logging/8.14.0": {
      "sha512": "eqqnemdW38CKZEHS6diA50BV94QICozDZEvSrsvN3SJXUFwVB9gy+/oz76gldP7nZliA16IglXjXTCTdmU/Ejg==",
      "type": "package",
      "path": "microsoft.identitymodel.logging/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Logging.dll",
        "lib/net462/Microsoft.IdentityModel.Logging.xml",
        "lib/net472/Microsoft.IdentityModel.Logging.dll",
        "lib/net472/Microsoft.IdentityModel.Logging.xml",
        "lib/net6.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net6.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net8.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net8.0/Microsoft.IdentityModel.Logging.xml",
        "lib/net9.0/Microsoft.IdentityModel.Logging.dll",
        "lib/net9.0/Microsoft.IdentityModel.Logging.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Logging.xml",
        "microsoft.identitymodel.logging.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.logging.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols/7.1.2": {
      "sha512": "SydLwMRFx6EHPWJ+N6+MVaoArN1Htt92b935O3RUWPY1yUF63zEjvd3lBu79eWdZUwedP8TN2I5V9T3nackvIQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.xml",
        "microsoft.identitymodel.protocols.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Protocols.OpenIdConnect/7.1.2": {
      "sha512": "6lHQoLXhnMQ42mGrfDkzbIOR3rzKM1W1tgTeMPLgLCqwwGw0d96xFi/UiX/fYsu7d6cD5MJiL3+4HuI8VU+sVQ==",
      "type": "package",
      "path": "microsoft.identitymodel.protocols.openidconnect/7.1.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net461/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net462/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net472/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net6.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/net8.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Protocols.OpenIdConnect.xml",
        "microsoft.identitymodel.protocols.openidconnect.7.1.2.nupkg.sha512",
        "microsoft.identitymodel.protocols.openidconnect.nuspec"
      ]
    },
    "Microsoft.IdentityModel.Tokens/8.14.0": {
      "sha512": "lKIZiBiGd36k02TCdMHp1KlNWisyIvQxcYJvIkz7P4gSQ9zi8dgh6S5Grj8NNG7HWYIPfQymGyoZ6JB5d1Lo1g==",
      "type": "package",
      "path": "microsoft.identitymodel.tokens/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/Microsoft.IdentityModel.Tokens.dll",
        "lib/net462/Microsoft.IdentityModel.Tokens.xml",
        "lib/net472/Microsoft.IdentityModel.Tokens.dll",
        "lib/net472/Microsoft.IdentityModel.Tokens.xml",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net6.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net8.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/net9.0/Microsoft.IdentityModel.Tokens.xml",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.dll",
        "lib/netstandard2.0/Microsoft.IdentityModel.Tokens.xml",
        "microsoft.identitymodel.tokens.8.14.0.nupkg.sha512",
        "microsoft.identitymodel.tokens.nuspec"
      ]
    },
    "Microsoft.NET.Test.Sdk/17.14.1": {
      "sha512": "HJKqKOE+vshXra2aEHpi2TlxYX7Z9VFYkr+E5rwEvHC8eIXiyO+K9kNm8vmNom3e2rA56WqxU+/N9NJlLGXsJQ==",
      "type": "package",
      "path": "microsoft.net.test.sdk/17.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "build/net462/Microsoft.NET.Test.Sdk.props",
        "build/net462/Microsoft.NET.Test.Sdk.targets",
        "build/net8.0/Microsoft.NET.Test.Sdk.Program.cs",
        "build/net8.0/Microsoft.NET.Test.Sdk.Program.fs",
        "build/net8.0/Microsoft.NET.Test.Sdk.Program.vb",
        "build/net8.0/Microsoft.NET.Test.Sdk.props",
        "build/net8.0/Microsoft.NET.Test.Sdk.targets",
        "build/netcoreapp2.0/Microsoft.NET.Test.Sdk.props",
        "build/netcoreapp2.0/Microsoft.NET.Test.Sdk.targets",
        "build/netstandard2.0/Microsoft.NET.Test.Sdk.props",
        "build/netstandard2.0/Microsoft.NET.Test.Sdk.targets",
        "buildMultiTargeting/net462/Microsoft.NET.Test.Sdk.props",
        "buildMultiTargeting/net8.0/Microsoft.NET.Test.Sdk.props",
        "buildMultiTargeting/netcoreapp2.0/Microsoft.NET.Test.Sdk.props",
        "buildMultiTargeting/netcoreapp2.0/Microsoft.NET.Test.Sdk.targets",
        "buildMultiTargeting/netstandard2.0/Microsoft.NET.Test.Sdk.props",
        "buildMultiTargeting/netstandard2.0/Microsoft.NET.Test.Sdk.targets",
        "lib/native/_._",
        "lib/net462/_._",
        "lib/net8.0/_._",
        "microsoft.net.test.sdk.17.14.1.nupkg.sha512",
        "microsoft.net.test.sdk.nuspec"
      ]
    },
    "Microsoft.OpenApi/1.6.14": {
      "sha512": "tTaBT8qjk3xINfESyOPE2rIellPvB7qpVqiWiyA/lACVvz+xOGiXhFUfohcx82NLbi5avzLW0lx+s6oAqQijfw==",
      "type": "package",
      "path": "microsoft.openapi/1.6.14",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/netstandard2.0/Microsoft.OpenApi.dll",
        "lib/netstandard2.0/Microsoft.OpenApi.pdb",
        "lib/netstandard2.0/Microsoft.OpenApi.xml",
        "microsoft.openapi.1.6.14.nupkg.sha512",
        "microsoft.openapi.nuspec"
      ]
    },
    "Microsoft.TestPlatform.ObjectModel/17.14.1": {
      "sha512": "xTP1W6Mi6SWmuxd3a+jj9G9UoC850WGwZUps1Wah9r1ZxgXhdJfj1QqDLJkFjHDCvN42qDL2Ps5KjQYWUU0zcQ==",
      "type": "package",
      "path": "microsoft.testplatform.objectmodel/17.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "lib/net462/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/net462/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/net462/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/net462/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net462/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net462/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/net8.0/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/net8.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/netstandard2.0/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/netstandard2.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/netstandard2.0/cs/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/cs/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/de/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/de/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/es/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/es/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/fr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/it/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/it/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/ja/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/ko/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/pl/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/pt-BR/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/ru/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/tr/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.TestPlatform.CoreUtilities.resources.dll",
        "lib/netstandard2.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.ObjectModel.resources.dll",
        "microsoft.testplatform.objectmodel.17.14.1.nupkg.sha512",
        "microsoft.testplatform.objectmodel.nuspec"
      ]
    },
    "Microsoft.TestPlatform.TestHost/17.14.1": {
      "sha512": "d78LPzGKkJwsJXAQwsbJJ7LE7D1wB+rAyhHHAaODF+RDSQ0NgMjDFkSA1Djw18VrxO76GlKAjRUhl+H8NL8Z+Q==",
      "type": "package",
      "path": "microsoft.testplatform.testhost/17.14.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "ThirdPartyNotices.txt",
        "build/net8.0/Microsoft.TestPlatform.TestHost.props",
        "build/net8.0/Microsoft.TestPlatform.TestHost.targets",
        "build/net8.0/x64/testhost.dll",
        "build/net8.0/x64/testhost.exe",
        "build/net8.0/x86/testhost.x86.dll",
        "build/net8.0/x86/testhost.x86.exe",
        "lib/net462/_._",
        "lib/net8.0/Microsoft.TestPlatform.CommunicationUtilities.dll",
        "lib/net8.0/Microsoft.TestPlatform.CoreUtilities.dll",
        "lib/net8.0/Microsoft.TestPlatform.CrossPlatEngine.dll",
        "lib/net8.0/Microsoft.TestPlatform.PlatformAbstractions.dll",
        "lib/net8.0/Microsoft.TestPlatform.Utilities.dll",
        "lib/net8.0/Microsoft.VisualStudio.TestPlatform.Common.dll",
        "lib/net8.0/Microsoft.VisualStudio.TestPlatform.ObjectModel.dll",
        "lib/net8.0/cs/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/cs/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/cs/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/de/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/de/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/de/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/es/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/es/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/es/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/fr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/fr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/fr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/it/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/it/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/it/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/ja/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/ja/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/ja/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/ko/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/ko/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/ko/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/pl/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/pl/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/pl/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/pt-BR/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/pt-BR/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/pt-BR/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/ru/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/ru/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/ru/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/testhost.deps.json",
        "lib/net8.0/testhost.dll",
        "lib/net8.0/tr/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/tr/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/tr/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/x64/msdia140.dll",
        "lib/net8.0/x86/msdia140.dll",
        "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/zh-Hans/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/zh-Hans/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CommunicationUtilities.resources.dll",
        "lib/net8.0/zh-Hant/Microsoft.TestPlatform.CrossPlatEngine.resources.dll",
        "lib/net8.0/zh-Hant/Microsoft.VisualStudio.TestPlatform.Common.resources.dll",
        "microsoft.testplatform.testhost.17.14.1.nupkg.sha512",
        "microsoft.testplatform.testhost.nuspec"
      ]
    },
    "Mono.TextTemplating/3.0.0": {
      "sha512": "YqueG52R/Xej4VVbKuRIodjiAhV0HR/XVbLbNrJhCZnzjnSjgMJ/dCdV0akQQxavX6hp/LC6rqLGLcXeQYU7XA==",
      "type": "package",
      "path": "mono.texttemplating/3.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.txt/LICENSE",
        "buildTransitive/Mono.TextTemplating.targets",
        "lib/net472/Mono.TextTemplating.dll",
        "lib/net6.0/Mono.TextTemplating.dll",
        "lib/netstandard2.0/Mono.TextTemplating.dll",
        "mono.texttemplating.3.0.0.nupkg.sha512",
        "mono.texttemplating.nuspec",
        "readme.md"
      ]
    },
    "Newtonsoft.Json/13.0.3": {
      "sha512": "HrC5BXdl00IP9zeV+0Z848QWPAoCr9P3bDEZguI+gkLcBKAOxix/tLEAAHC+UvDNPv4a2d18lOReHMOagPa+zQ==",
      "type": "package",
      "path": "newtonsoft.json/13.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.md",
        "README.md",
        "lib/net20/Newtonsoft.Json.dll",
        "lib/net20/Newtonsoft.Json.xml",
        "lib/net35/Newtonsoft.Json.dll",
        "lib/net35/Newtonsoft.Json.xml",
        "lib/net40/Newtonsoft.Json.dll",
        "lib/net40/Newtonsoft.Json.xml",
        "lib/net45/Newtonsoft.Json.dll",
        "lib/net45/Newtonsoft.Json.xml",
        "lib/net6.0/Newtonsoft.Json.dll",
        "lib/net6.0/Newtonsoft.Json.xml",
        "lib/netstandard1.0/Newtonsoft.Json.dll",
        "lib/netstandard1.0/Newtonsoft.Json.xml",
        "lib/netstandard1.3/Newtonsoft.Json.dll",
        "lib/netstandard1.3/Newtonsoft.Json.xml",
        "lib/netstandard2.0/Newtonsoft.Json.dll",
        "lib/netstandard2.0/Newtonsoft.Json.xml",
        "newtonsoft.json.13.0.3.nupkg.sha512",
        "newtonsoft.json.nuspec",
        "packageIcon.png"
      ]
    },
    "Npgsql/9.0.3": {
      "sha512": "tPvY61CxOAWxNsKLEBg+oR646X4Bc8UmyQ/tJszL/7mEmIXQnnBhVJZrZEEUv0Bstu0mEsHZD5At3EO8zQRAYw==",
      "type": "package",
      "path": "npgsql/9.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net6.0/Npgsql.dll",
        "lib/net6.0/Npgsql.xml",
        "lib/net8.0/Npgsql.dll",
        "lib/net8.0/Npgsql.xml",
        "npgsql.9.0.3.nupkg.sha512",
        "npgsql.nuspec",
        "postgresql.png"
      ]
    },
    "Npgsql.EntityFrameworkCore.PostgreSQL/9.0.4": {
      "sha512": "mw5vcY2IEc7L+IeGrxpp/J5OSnCcjkjAgJYCm/eD52wpZze8zsSifdqV7zXslSMmfJG2iIUGZyo3KuDtEFKwMQ==",
      "type": "package",
      "path": "npgsql.entityframeworkcore.postgresql/9.0.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
        "lib/net8.0/Npgsql.EntityFrameworkCore.PostgreSQL.xml",
        "npgsql.entityframeworkcore.postgresql.9.0.4.nupkg.sha512",
        "npgsql.entityframeworkcore.postgresql.nuspec",
        "postgresql.png"
      ]
    },
    "SharpZipLib/1.4.2": {
      "sha512": "yjj+3zgz8zgXpiiC3ZdF/iyTBbz2fFvMxZFEBPUcwZjIvXOf37Ylm+K58hqMfIBt5JgU/Z2uoUS67JmTLe973A==",
      "type": "package",
      "path": "sharpziplib/1.4.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "images/sharpziplib-nuget-256x256.png",
        "lib/net6.0/ICSharpCode.SharpZipLib.dll",
        "lib/net6.0/ICSharpCode.SharpZipLib.pdb",
        "lib/net6.0/ICSharpCode.SharpZipLib.xml",
        "lib/netstandard2.0/ICSharpCode.SharpZipLib.dll",
        "lib/netstandard2.0/ICSharpCode.SharpZipLib.pdb",
        "lib/netstandard2.0/ICSharpCode.SharpZipLib.xml",
        "lib/netstandard2.1/ICSharpCode.SharpZipLib.dll",
        "lib/netstandard2.1/ICSharpCode.SharpZipLib.pdb",
        "lib/netstandard2.1/ICSharpCode.SharpZipLib.xml",
        "sharpziplib.1.4.2.nupkg.sha512",
        "sharpziplib.nuspec"
      ]
    },
    "Snapshooter/1.0.1": {
      "sha512": "Nwto0wB33ZMQ6AuqKLG+55e86fID1XYq/wwZ2zqJBCImy7SOv5AaykCHXCX7/O4faMIWpRkMU3b13If7OxJOJg==",
      "type": "package",
      "path": "snapshooter/1.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net462/Snapshooter.dll",
        "lib/net462/Snapshooter.pdb",
        "lib/net462/Snapshooter.xml",
        "lib/net6.0/Snapshooter.dll",
        "lib/net6.0/Snapshooter.pdb",
        "lib/net6.0/Snapshooter.xml",
        "lib/net8.0/Snapshooter.dll",
        "lib/net8.0/Snapshooter.pdb",
        "lib/net8.0/Snapshooter.xml",
        "lib/net9.0/Snapshooter.dll",
        "lib/net9.0/Snapshooter.pdb",
        "lib/net9.0/Snapshooter.xml",
        "lib/netstandard2.0/Snapshooter.dll",
        "lib/netstandard2.0/Snapshooter.pdb",
        "lib/netstandard2.0/Snapshooter.xml",
        "snapshooter.1.0.1.nupkg.sha512",
        "snapshooter.nuspec"
      ]
    },
    "Snapshooter.Xunit/1.0.1": {
      "sha512": "x3X0GhM/9c718S7aDMpummHhLLS06mnowCjTdHZOcmCqgj1jedUR8HpV05pzXTpmS/nSxwZoiO7zF3xh+uyBOQ==",
      "type": "package",
      "path": "snapshooter.xunit/1.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net462/Snapshooter.Xunit.dll",
        "lib/net462/Snapshooter.Xunit.pdb",
        "lib/net6.0/Snapshooter.Xunit.dll",
        "lib/net6.0/Snapshooter.Xunit.pdb",
        "lib/net6.0/Snapshooter.Xunit.runtimeconfig.json",
        "lib/net8.0/Snapshooter.Xunit.dll",
        "lib/net8.0/Snapshooter.Xunit.pdb",
        "lib/net8.0/Snapshooter.Xunit.runtimeconfig.json",
        "lib/net9.0/Snapshooter.Xunit.dll",
        "lib/net9.0/Snapshooter.Xunit.pdb",
        "lib/net9.0/Snapshooter.Xunit.runtimeconfig.json",
        "lib/netstandard2.0/Snapshooter.Xunit.dll",
        "lib/netstandard2.0/Snapshooter.Xunit.pdb",
        "snapshooter.xunit.1.0.1.nupkg.sha512",
        "snapshooter.xunit.nuspec"
      ]
    },
    "SSH.NET/2024.2.0": {
      "sha512": "9r+4UF2P51lTztpd+H7SJywk7WgmlWB//Cm2o96c6uGVZU5r58ys2/cD9pCgTk0zCdSkfflWL1WtqQ9I4IVO9Q==",
      "type": "package",
      "path": "ssh.net/2024.2.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "SS-NET-icon-h500.png",
        "lib/net462/Renci.SshNet.dll",
        "lib/net462/Renci.SshNet.xml",
        "lib/net6.0/Renci.SshNet.dll",
        "lib/net6.0/Renci.SshNet.xml",
        "lib/net7.0/Renci.SshNet.dll",
        "lib/net7.0/Renci.SshNet.xml",
        "lib/net8.0/Renci.SshNet.dll",
        "lib/net8.0/Renci.SshNet.xml",
        "lib/netstandard2.0/Renci.SshNet.dll",
        "lib/netstandard2.0/Renci.SshNet.xml",
        "lib/netstandard2.1/Renci.SshNet.dll",
        "lib/netstandard2.1/Renci.SshNet.xml",
        "ssh.net.2024.2.0.nupkg.sha512",
        "ssh.net.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore/6.6.2": {
      "sha512": "+NB4UYVYN6AhDSjW0IJAd1AGD8V33gemFNLPaxKTtPkHB+HaKAKf9MGAEUPivEWvqeQfcKIw8lJaHq6LHljRuw==",
      "type": "package",
      "path": "swashbuckle.aspnetcore/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "build/Swashbuckle.AspNetCore.props",
        "swashbuckle.aspnetcore.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore.Swagger/6.6.2": {
      "sha512": "ovgPTSYX83UrQUWiS5vzDcJ8TEX1MAxBgDFMK45rC24MorHEPQlZAHlaXj/yth4Zf6xcktpUgTEBvffRQVwDKA==",
      "type": "package",
      "path": "swashbuckle.aspnetcore.swagger/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net5.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net5.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net5.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/net6.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net6.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net6.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/net7.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net7.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net7.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/net8.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/net8.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/net8.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.Swagger.xml",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.dll",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.pdb",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.Swagger.xml",
        "package-readme.md",
        "swashbuckle.aspnetcore.swagger.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.swagger.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore.SwaggerGen/6.6.2": {
      "sha512": "zv4ikn4AT1VYuOsDCpktLq4QDq08e7Utzbir86M5/ZkRaLXbCPF11E1/vTmOiDzRTl0zTZINQU2qLKwTcHgfrA==",
      "type": "package",
      "path": "swashbuckle.aspnetcore.swaggergen/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerGen.dll",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerGen.pdb",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerGen.xml",
        "package-readme.md",
        "swashbuckle.aspnetcore.swaggergen.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.swaggergen.nuspec"
      ]
    },
    "Swashbuckle.AspNetCore.SwaggerUI/6.6.2": {
      "sha512": "mBBb+/8Hm2Q3Wygag+hu2jj69tZW5psuv0vMRXY07Wy+Rrj40vRP8ZTbKBhs91r45/HXT4aY4z0iSBYx1h6JvA==",
      "type": "package",
      "path": "swashbuckle.aspnetcore.swaggerui/6.6.2",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net5.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net6.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net7.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/net8.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/netcoreapp3.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerUI.dll",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerUI.pdb",
        "lib/netstandard2.0/Swashbuckle.AspNetCore.SwaggerUI.xml",
        "package-readme.md",
        "swashbuckle.aspnetcore.swaggerui.6.6.2.nupkg.sha512",
        "swashbuckle.aspnetcore.swaggerui.nuspec"
      ]
    },
    "System.Buffers/4.5.1": {
      "sha512": "Rw7ijyl1qqRS0YQD/WycNst8hUUMgrMH4FCn1nNm27M4VxchZ1js3fVjQaANHO5f3sN4isvP4a+Met9Y4YomAg==",
      "type": "package",
      "path": "system.buffers/4.5.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/net461/System.Buffers.dll",
        "lib/net461/System.Buffers.xml",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard1.1/System.Buffers.dll",
        "lib/netstandard1.1/System.Buffers.xml",
        "lib/netstandard2.0/System.Buffers.dll",
        "lib/netstandard2.0/System.Buffers.xml",
        "lib/uap10.0.16299/_._",
        "ref/net45/System.Buffers.dll",
        "ref/net45/System.Buffers.xml",
        "ref/netcoreapp2.0/_._",
        "ref/netstandard1.1/System.Buffers.dll",
        "ref/netstandard1.1/System.Buffers.xml",
        "ref/netstandard2.0/System.Buffers.dll",
        "ref/netstandard2.0/System.Buffers.xml",
        "ref/uap10.0.16299/_._",
        "system.buffers.4.5.1.nupkg.sha512",
        "system.buffers.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "System.CodeDom/6.0.0": {
      "sha512": "CPc6tWO1LAer3IzfZufDBRL+UZQcj5uS207NHALQzP84Vp/z6wF0Aa0YZImOQY8iStY0A2zI/e3ihKNPfUm8XA==",
      "type": "package",
      "path": "system.codedom/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.CodeDom.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.CodeDom.dll",
        "lib/net461/System.CodeDom.xml",
        "lib/net6.0/System.CodeDom.dll",
        "lib/net6.0/System.CodeDom.xml",
        "lib/netstandard2.0/System.CodeDom.dll",
        "lib/netstandard2.0/System.CodeDom.xml",
        "system.codedom.6.0.0.nupkg.sha512",
        "system.codedom.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Collections.Immutable/8.0.0": {
      "sha512": "AurL6Y5BA1WotzlEvVaIDpqzpIPvYnnldxru8oXJU2yFxFUy3+pNXjXd1ymO+RA0rq0+590Q8gaz2l3Sr7fmqg==",
      "type": "package",
      "path": "system.collections.immutable/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Collections.Immutable.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Collections.Immutable.targets",
        "lib/net462/System.Collections.Immutable.dll",
        "lib/net462/System.Collections.Immutable.xml",
        "lib/net6.0/System.Collections.Immutable.dll",
        "lib/net6.0/System.Collections.Immutable.xml",
        "lib/net7.0/System.Collections.Immutable.dll",
        "lib/net7.0/System.Collections.Immutable.xml",
        "lib/net8.0/System.Collections.Immutable.dll",
        "lib/net8.0/System.Collections.Immutable.xml",
        "lib/netstandard2.0/System.Collections.Immutable.dll",
        "lib/netstandard2.0/System.Collections.Immutable.xml",
        "system.collections.immutable.8.0.0.nupkg.sha512",
        "system.collections.immutable.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition/7.0.0": {
      "sha512": "tRwgcAkDd85O8Aq6zHDANzQaq380cek9lbMg5Qma46u5BZXq/G+XvIYmu+UI+BIIZ9zssXLYrkTykEqxxvhcmg==",
      "type": "package",
      "path": "system.composition/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.targets",
        "lib/net461/_._",
        "lib/netcoreapp2.0/_._",
        "lib/netstandard2.0/_._",
        "system.composition.7.0.0.nupkg.sha512",
        "system.composition.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.AttributedModel/7.0.0": {
      "sha512": "2QzClqjElKxgI1jK1Jztnq44/8DmSuTSGGahXqQ4TdEV0h9s2KikQZIgcEqVzR7OuWDFPGLHIprBJGQEPr8fAQ==",
      "type": "package",
      "path": "system.composition.attributedmodel/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.AttributedModel.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.AttributedModel.targets",
        "lib/net462/System.Composition.AttributedModel.dll",
        "lib/net462/System.Composition.AttributedModel.xml",
        "lib/net6.0/System.Composition.AttributedModel.dll",
        "lib/net6.0/System.Composition.AttributedModel.xml",
        "lib/net7.0/System.Composition.AttributedModel.dll",
        "lib/net7.0/System.Composition.AttributedModel.xml",
        "lib/netstandard2.0/System.Composition.AttributedModel.dll",
        "lib/netstandard2.0/System.Composition.AttributedModel.xml",
        "system.composition.attributedmodel.7.0.0.nupkg.sha512",
        "system.composition.attributedmodel.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Convention/7.0.0": {
      "sha512": "IMhTlpCs4HmlD8B+J8/kWfwX7vrBBOs6xyjSTzBlYSs7W4OET4tlkR/Sg9NG8jkdJH9Mymq0qGdYS1VPqRTBnQ==",
      "type": "package",
      "path": "system.composition.convention/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Convention.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Convention.targets",
        "lib/net462/System.Composition.Convention.dll",
        "lib/net462/System.Composition.Convention.xml",
        "lib/net6.0/System.Composition.Convention.dll",
        "lib/net6.0/System.Composition.Convention.xml",
        "lib/net7.0/System.Composition.Convention.dll",
        "lib/net7.0/System.Composition.Convention.xml",
        "lib/netstandard2.0/System.Composition.Convention.dll",
        "lib/netstandard2.0/System.Composition.Convention.xml",
        "system.composition.convention.7.0.0.nupkg.sha512",
        "system.composition.convention.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Hosting/7.0.0": {
      "sha512": "eB6gwN9S+54jCTBJ5bpwMOVerKeUfGGTYCzz3QgDr1P55Gg/Wb27ShfPIhLMjmZ3MoAKu8uUSv6fcCdYJTN7Bg==",
      "type": "package",
      "path": "system.composition.hosting/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Hosting.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Hosting.targets",
        "lib/net462/System.Composition.Hosting.dll",
        "lib/net462/System.Composition.Hosting.xml",
        "lib/net6.0/System.Composition.Hosting.dll",
        "lib/net6.0/System.Composition.Hosting.xml",
        "lib/net7.0/System.Composition.Hosting.dll",
        "lib/net7.0/System.Composition.Hosting.xml",
        "lib/netstandard2.0/System.Composition.Hosting.dll",
        "lib/netstandard2.0/System.Composition.Hosting.xml",
        "system.composition.hosting.7.0.0.nupkg.sha512",
        "system.composition.hosting.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.Runtime/7.0.0": {
      "sha512": "aZJ1Zr5Txe925rbo4742XifEyW0MIni1eiUebmcrP3HwLXZ3IbXUj4MFMUH/RmnJOAQiS401leg/2Sz1MkApDw==",
      "type": "package",
      "path": "system.composition.runtime/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.Runtime.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.Runtime.targets",
        "lib/net462/System.Composition.Runtime.dll",
        "lib/net462/System.Composition.Runtime.xml",
        "lib/net6.0/System.Composition.Runtime.dll",
        "lib/net6.0/System.Composition.Runtime.xml",
        "lib/net7.0/System.Composition.Runtime.dll",
        "lib/net7.0/System.Composition.Runtime.xml",
        "lib/netstandard2.0/System.Composition.Runtime.dll",
        "lib/netstandard2.0/System.Composition.Runtime.xml",
        "system.composition.runtime.7.0.0.nupkg.sha512",
        "system.composition.runtime.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Composition.TypedParts/7.0.0": {
      "sha512": "ZK0KNPfbtxVceTwh+oHNGUOYV2WNOHReX2AXipuvkURC7s/jPwoWfsu3SnDBDgofqbiWr96geofdQ2erm/KTHg==",
      "type": "package",
      "path": "system.composition.typedparts/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Composition.TypedParts.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Composition.TypedParts.targets",
        "lib/net462/System.Composition.TypedParts.dll",
        "lib/net462/System.Composition.TypedParts.xml",
        "lib/net6.0/System.Composition.TypedParts.dll",
        "lib/net6.0/System.Composition.TypedParts.xml",
        "lib/net7.0/System.Composition.TypedParts.dll",
        "lib/net7.0/System.Composition.TypedParts.xml",
        "lib/netstandard2.0/System.Composition.TypedParts.dll",
        "lib/netstandard2.0/System.Composition.TypedParts.xml",
        "system.composition.typedparts.7.0.0.nupkg.sha512",
        "system.composition.typedparts.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.DiagnosticSource/9.0.8": {
      "sha512": "Lj8/a1Hzli1z6jo8H9urc16GxkpVJtJM+W9fmivXMNu7nwzHziGkxn4vO0DFscMbudkEVKSezdDuHk5kgM0X/g==",
      "type": "package",
      "path": "system.diagnostics.diagnosticsource/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.DiagnosticSource.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.DiagnosticSource.targets",
        "lib/net462/System.Diagnostics.DiagnosticSource.dll",
        "lib/net462/System.Diagnostics.DiagnosticSource.xml",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net8.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/net9.0/System.Diagnostics.DiagnosticSource.xml",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.dll",
        "lib/netstandard2.0/System.Diagnostics.DiagnosticSource.xml",
        "system.diagnostics.diagnosticsource.9.0.8.nupkg.sha512",
        "system.diagnostics.diagnosticsource.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Diagnostics.EventLog/8.0.1": {
      "sha512": "n1ZP7NM2Gkn/MgD8+eOT5MulMj6wfeQMNS2Pizvq5GHCZfjlFMXV2irQlQmJhwA2VABC57M0auudO89Iu2uRLg==",
      "type": "package",
      "path": "system.diagnostics.eventlog/8.0.1",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Diagnostics.EventLog.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Diagnostics.EventLog.targets",
        "lib/net462/System.Diagnostics.EventLog.dll",
        "lib/net462/System.Diagnostics.EventLog.xml",
        "lib/net6.0/System.Diagnostics.EventLog.dll",
        "lib/net6.0/System.Diagnostics.EventLog.xml",
        "lib/net7.0/System.Diagnostics.EventLog.dll",
        "lib/net7.0/System.Diagnostics.EventLog.xml",
        "lib/net8.0/System.Diagnostics.EventLog.dll",
        "lib/net8.0/System.Diagnostics.EventLog.xml",
        "lib/netstandard2.0/System.Diagnostics.EventLog.dll",
        "lib/netstandard2.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net6.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net6.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net6.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net7.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net7.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net7.0/System.Diagnostics.EventLog.xml",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.Messages.dll",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.dll",
        "runtimes/win/lib/net8.0/System.Diagnostics.EventLog.xml",
        "system.diagnostics.eventlog.8.0.1.nupkg.sha512",
        "system.diagnostics.eventlog.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.IdentityModel.Tokens.Jwt/8.14.0": {
      "sha512": "EYGgN/S+HK7S6F3GaaPLFAfK0UzMrkXFyWCvXpQWFYmZln3dqtbyIO7VuTM/iIIPMzkelg8ZLlBPvMhxj6nOAA==",
      "type": "package",
      "path": "system.identitymodel.tokens.jwt/8.14.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "README.md",
        "lib/net462/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net462/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net472/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net472/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net6.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net8.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/net9.0/System.IdentityModel.Tokens.Jwt.xml",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.dll",
        "lib/netstandard2.0/System.IdentityModel.Tokens.Jwt.xml",
        "system.identitymodel.tokens.jwt.8.14.0.nupkg.sha512",
        "system.identitymodel.tokens.jwt.nuspec"
      ]
    },
    "System.IO.Hashing/8.0.0": {
      "sha512": "ne1843evDugl0md7Fjzy6QjJrzsjh46ZKbhf8GwBXb5f/gw97J4bxMs0NQKifDuThh/f0bZ0e62NPl1jzTuRqA==",
      "type": "package",
      "path": "system.io.hashing/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.IO.Hashing.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.IO.Hashing.targets",
        "lib/net462/System.IO.Hashing.dll",
        "lib/net462/System.IO.Hashing.xml",
        "lib/net6.0/System.IO.Hashing.dll",
        "lib/net6.0/System.IO.Hashing.xml",
        "lib/net7.0/System.IO.Hashing.dll",
        "lib/net7.0/System.IO.Hashing.xml",
        "lib/net8.0/System.IO.Hashing.dll",
        "lib/net8.0/System.IO.Hashing.xml",
        "lib/netstandard2.0/System.IO.Hashing.dll",
        "lib/netstandard2.0/System.IO.Hashing.xml",
        "system.io.hashing.8.0.0.nupkg.sha512",
        "system.io.hashing.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.IO.Pipelines/9.0.8": {
      "sha512": "6vPmJt73mgUo1gzc/OcXlJvClz/2jxZ4TQPRfriVaLoGRH2mye530D9WHJYbFQRNMxF3PWCoeofsFdCyN7fLzA==",
      "type": "package",
      "path": "system.io.pipelines/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.IO.Pipelines.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.IO.Pipelines.targets",
        "lib/net462/System.IO.Pipelines.dll",
        "lib/net462/System.IO.Pipelines.xml",
        "lib/net8.0/System.IO.Pipelines.dll",
        "lib/net8.0/System.IO.Pipelines.xml",
        "lib/net9.0/System.IO.Pipelines.dll",
        "lib/net9.0/System.IO.Pipelines.xml",
        "lib/netstandard2.0/System.IO.Pipelines.dll",
        "lib/netstandard2.0/System.IO.Pipelines.xml",
        "system.io.pipelines.9.0.8.nupkg.sha512",
        "system.io.pipelines.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Reflection.Metadata/8.0.0": {
      "sha512": "ptvgrFh7PvWI8bcVqG5rsA/weWM09EnthFHR5SCnS6IN+P4mj6rE1lBDC4U8HL9/57htKAqy4KQ3bBj84cfYyQ==",
      "type": "package",
      "path": "system.reflection.metadata/8.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Reflection.Metadata.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Reflection.Metadata.targets",
        "lib/net462/System.Reflection.Metadata.dll",
        "lib/net462/System.Reflection.Metadata.xml",
        "lib/net6.0/System.Reflection.Metadata.dll",
        "lib/net6.0/System.Reflection.Metadata.xml",
        "lib/net7.0/System.Reflection.Metadata.dll",
        "lib/net7.0/System.Reflection.Metadata.xml",
        "lib/net8.0/System.Reflection.Metadata.dll",
        "lib/net8.0/System.Reflection.Metadata.xml",
        "lib/netstandard2.0/System.Reflection.Metadata.dll",
        "lib/netstandard2.0/System.Reflection.Metadata.xml",
        "system.reflection.metadata.8.0.0.nupkg.sha512",
        "system.reflection.metadata.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Runtime.CompilerServices.Unsafe/6.0.0": {
      "sha512": "/iUeP3tq1S0XdNNoMz5C9twLSrM/TH+qElHkXWaPvuNOt+99G75NrV0OS2EqHx5wMN7popYjpc8oTjC1y16DLg==",
      "type": "package",
      "path": "system.runtime.compilerservices.unsafe/6.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.targets",
        "buildTransitive/netcoreapp3.1/_._",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net461/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/net6.0/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netcoreapp3.1/System.Runtime.CompilerServices.Unsafe.xml",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
        "system.runtime.compilerservices.unsafe.6.0.0.nupkg.sha512",
        "system.runtime.compilerservices.unsafe.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Encodings.Web/9.0.8": {
      "sha512": "W+LotQsM4wBJ4PG7uRkyul4wqL4Fz7R4ty6uXrCNZUhbaHYANgrPaYR2ZpMVpdCjQEJ17Jr1NMN8hv4SHaHY4A==",
      "type": "package",
      "path": "system.text.encodings.web/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Text.Encodings.Web.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net8.0/_._",
        "buildTransitive/netcoreapp2.0/System.Text.Encodings.Web.targets",
        "lib/net462/System.Text.Encodings.Web.dll",
        "lib/net462/System.Text.Encodings.Web.xml",
        "lib/net8.0/System.Text.Encodings.Web.dll",
        "lib/net8.0/System.Text.Encodings.Web.xml",
        "lib/net9.0/System.Text.Encodings.Web.dll",
        "lib/net9.0/System.Text.Encodings.Web.xml",
        "lib/netstandard2.0/System.Text.Encodings.Web.dll",
        "lib/netstandard2.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net8.0/System.Text.Encodings.Web.xml",
        "runtimes/browser/lib/net9.0/System.Text.Encodings.Web.dll",
        "runtimes/browser/lib/net9.0/System.Text.Encodings.Web.xml",
        "system.text.encodings.web.9.0.8.nupkg.sha512",
        "system.text.encodings.web.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Text.Json/9.0.8": {
      "sha512": "mIQir9jBqk0V7X0Nw5hzPJZC8DuGdf+2DS3jAVsr6rq5+/VyH5rza0XGcONJUWBrZ+G6BCwNyjWYd9lncBu48A==",
      "type": "package",
      "path": "system.text.json/9.0.8",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "PACKAGE.md",
        "THIRD-PARTY-NOTICES.TXT",
        "analyzers/dotnet/roslyn3.11/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn3.11/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn3.11/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.0/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.0/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/System.Text.Json.SourceGeneration.dll",
        "analyzers/dotnet/roslyn4.4/cs/cs/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/de/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/es/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/fr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/it/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ja/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ko/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pl/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/pt-BR/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/ru/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/tr/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hans/System.Text.Json.SourceGeneration.resources.dll",
        "analyzers/dotnet/roslyn4.4/cs/zh-Hant/System.Text.Json.SourceGeneration.resources.dll",
        "buildTransitive/net461/System.Text.Json.targets",
        "buildTransitive/net462/System.Text.Json.targets",
        "buildTransitive/net8.0/System.Text.Json.targets",
        "buildTransitive/netcoreapp2.0/System.Text.Json.targets",
        "buildTransitive/netstandard2.0/System.Text.Json.targets",
        "lib/net462/System.Text.Json.dll",
        "lib/net462/System.Text.Json.xml",
        "lib/net8.0/System.Text.Json.dll",
        "lib/net8.0/System.Text.Json.xml",
        "lib/net9.0/System.Text.Json.dll",
        "lib/net9.0/System.Text.Json.xml",
        "lib/netstandard2.0/System.Text.Json.dll",
        "lib/netstandard2.0/System.Text.Json.xml",
        "system.text.json.9.0.8.nupkg.sha512",
        "system.text.json.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Channels/7.0.0": {
      "sha512": "qmeeYNROMsONF6ndEZcIQ+VxR4Q/TX/7uIVLJqtwIWL7dDWeh0l1UIqgo4wYyjG//5lUNhwkLDSFl+pAWO6oiA==",
      "type": "package",
      "path": "system.threading.channels/7.0.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "Icon.png",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "buildTransitive/net461/System.Threading.Channels.targets",
        "buildTransitive/net462/_._",
        "buildTransitive/net6.0/_._",
        "buildTransitive/netcoreapp2.0/System.Threading.Channels.targets",
        "lib/net462/System.Threading.Channels.dll",
        "lib/net462/System.Threading.Channels.xml",
        "lib/net6.0/System.Threading.Channels.dll",
        "lib/net6.0/System.Threading.Channels.xml",
        "lib/net7.0/System.Threading.Channels.dll",
        "lib/net7.0/System.Threading.Channels.xml",
        "lib/netstandard2.0/System.Threading.Channels.dll",
        "lib/netstandard2.0/System.Threading.Channels.xml",
        "lib/netstandard2.1/System.Threading.Channels.dll",
        "lib/netstandard2.1/System.Threading.Channels.xml",
        "system.threading.channels.7.0.0.nupkg.sha512",
        "system.threading.channels.nuspec",
        "useSharedDesignerContext.txt"
      ]
    },
    "System.Threading.Tasks.Extensions/4.5.4": {
      "sha512": "zteT+G8xuGu6mS+mzDzYXbzS7rd3K6Fjb9RiZlYlJPam2/hU7JCBZBVEcywNuR+oZ1ncTvc/cq0faRr3P01OVg==",
      "type": "package",
      "path": "system.threading.tasks.extensions/4.5.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE.TXT",
        "THIRD-PARTY-NOTICES.TXT",
        "lib/MonoAndroid10/_._",
        "lib/MonoTouch10/_._",
        "lib/net461/System.Threading.Tasks.Extensions.dll",
        "lib/net461/System.Threading.Tasks.Extensions.xml",
        "lib/netcoreapp2.1/_._",
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.dll",
        "lib/netstandard1.0/System.Threading.Tasks.Extensions.xml",
        "lib/netstandard2.0/System.Threading.Tasks.Extensions.dll",
        "lib/netstandard2.0/System.Threading.Tasks.Extensions.xml",
        "lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.dll",
        "lib/portable-net45+win8+wp8+wpa81/System.Threading.Tasks.Extensions.xml",
        "lib/xamarinios10/_._",
        "lib/xamarinmac20/_._",
        "lib/xamarintvos10/_._",
        "lib/xamarinwatchos10/_._",
        "ref/MonoAndroid10/_._",
        "ref/MonoTouch10/_._",
        "ref/netcoreapp2.1/_._",
        "ref/xamarinios10/_._",
        "ref/xamarinmac20/_._",
        "ref/xamarintvos10/_._",
        "ref/xamarinwatchos10/_._",
        "system.threading.tasks.extensions.4.5.4.nupkg.sha512",
        "system.threading.tasks.extensions.nuspec",
        "useSharedDesignerContext.txt",
        "version.txt"
      ]
    },
    "Testcontainers/4.7.0": {
      "sha512": "Nx4HR4e7XcKV5BVIqYdCpF8PAYFpukZ8QpoBe+sY9FL5q0RDtsy81MElVXIJVO4Wg3Q6j2f39QaF7i+2jf6YjA==",
      "type": "package",
      "path": "testcontainers/4.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "README.md",
        "docs/banner.png",
        "docs/logo.png",
        "lib/net8.0/Testcontainers.dll",
        "lib/net8.0/Testcontainers.xml",
        "lib/net9.0/Testcontainers.dll",
        "lib/net9.0/Testcontainers.xml",
        "lib/netstandard2.0/Testcontainers.dll",
        "lib/netstandard2.0/Testcontainers.xml",
        "lib/netstandard2.1/Testcontainers.dll",
        "lib/netstandard2.1/Testcontainers.xml",
        "testcontainers.4.7.0.nupkg.sha512",
        "testcontainers.nuspec"
      ]
    },
    "Testcontainers.PostgreSql/4.7.0": {
      "sha512": "RwR8cZIWaZLFYtXtIlwjMbGwUcbdQqcJj6zuUNN+RQooDmkbAlrp5WpPwVkMDSdNTi4BF3wiMnsw62j20OI6FA==",
      "type": "package",
      "path": "testcontainers.postgresql/4.7.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "LICENSE",
        "README.md",
        "docs/banner.png",
        "docs/logo.png",
        "lib/net8.0/Testcontainers.PostgreSql.dll",
        "lib/net8.0/Testcontainers.PostgreSql.xml",
        "lib/net9.0/Testcontainers.PostgreSql.dll",
        "lib/net9.0/Testcontainers.PostgreSql.xml",
        "lib/netstandard2.0/Testcontainers.PostgreSql.dll",
        "lib/netstandard2.0/Testcontainers.PostgreSql.xml",
        "lib/netstandard2.1/Testcontainers.PostgreSql.dll",
        "lib/netstandard2.1/Testcontainers.PostgreSql.xml",
        "testcontainers.postgresql.4.7.0.nupkg.sha512",
        "testcontainers.postgresql.nuspec"
      ]
    },
    "xunit/2.9.3": {
      "sha512": "TlXQBinK35LpOPKHAqbLY4xlEen9TBafjs0V5KnA4wZsoQLQJiirCR4CbIXvOH8NzkW4YeJKP5P/Bnrodm0h9Q==",
      "type": "package",
      "path": "xunit/2.9.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "xunit.2.9.3.nupkg.sha512",
        "xunit.nuspec"
      ]
    },
    "xunit.abstractions/2.0.3": {
      "sha512": "pot1I4YOxlWjIb5jmwvvQNbTrZ3lJQ+jUGkGjWE3hEFM0l5gOnBWS+H3qsex68s5cO52g+44vpGzhAt+42vwKg==",
      "type": "package",
      "path": "xunit.abstractions/2.0.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "lib/net35/xunit.abstractions.dll",
        "lib/net35/xunit.abstractions.xml",
        "lib/netstandard1.0/xunit.abstractions.dll",
        "lib/netstandard1.0/xunit.abstractions.xml",
        "lib/netstandard2.0/xunit.abstractions.dll",
        "lib/netstandard2.0/xunit.abstractions.xml",
        "xunit.abstractions.2.0.3.nupkg.sha512",
        "xunit.abstractions.nuspec"
      ]
    },
    "xunit.analyzers/1.18.0": {
      "sha512": "OtFMHN8yqIcYP9wcVIgJrq01AfTxijjAqVDy/WeQVSyrDC1RzBWeQPztL49DN2syXRah8TYnfvk035s7L95EZQ==",
      "type": "package",
      "path": "xunit.analyzers/1.18.0",
      "hasTools": true,
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "analyzers/dotnet/cs/xunit.analyzers.dll",
        "analyzers/dotnet/cs/xunit.analyzers.fixes.dll",
        "tools/install.ps1",
        "tools/uninstall.ps1",
        "xunit.analyzers.1.18.0.nupkg.sha512",
        "xunit.analyzers.nuspec"
      ]
    },
    "xunit.assert/2.9.3": {
      "sha512": "/Kq28fCE7MjOV42YLVRAJzRF0WmEqsmflm0cfpMjGtzQ2lR5mYVj1/i0Y8uDAOLczkL3/jArrwehfMD0YogMAA==",
      "type": "package",
      "path": "xunit.assert/2.9.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "lib/net6.0/xunit.assert.dll",
        "lib/net6.0/xunit.assert.xml",
        "lib/netstandard1.1/xunit.assert.dll",
        "lib/netstandard1.1/xunit.assert.xml",
        "xunit.assert.2.9.3.nupkg.sha512",
        "xunit.assert.nuspec"
      ]
    },
    "xunit.core/2.9.3": {
      "sha512": "BiAEvqGvyme19wE0wTKdADH+NloYqikiU0mcnmiNyXaF9HyHmE6sr/3DC5vnBkgsWaE6yPyWszKSPSApWdRVeQ==",
      "type": "package",
      "path": "xunit.core/2.9.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "build/xunit.core.props",
        "build/xunit.core.targets",
        "buildMultiTargeting/xunit.core.props",
        "buildMultiTargeting/xunit.core.targets",
        "xunit.core.2.9.3.nupkg.sha512",
        "xunit.core.nuspec"
      ]
    },
    "xunit.extensibility.core/2.9.3": {
      "sha512": "kf3si0YTn2a8J8eZNb+zFpwfoyvIrQ7ivNk5ZYA5yuYk1bEtMe4DxJ2CF/qsRgmEnDr7MnW1mxylBaHTZ4qErA==",
      "type": "package",
      "path": "xunit.extensibility.core/2.9.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "lib/net452/xunit.core.dll",
        "lib/net452/xunit.core.dll.tdnet",
        "lib/net452/xunit.core.xml",
        "lib/net452/xunit.runner.tdnet.dll",
        "lib/net452/xunit.runner.utility.net452.dll",
        "lib/netstandard1.1/xunit.core.dll",
        "lib/netstandard1.1/xunit.core.xml",
        "xunit.extensibility.core.2.9.3.nupkg.sha512",
        "xunit.extensibility.core.nuspec"
      ]
    },
    "xunit.extensibility.execution/2.9.3": {
      "sha512": "yMb6vMESlSrE3Wfj7V6cjQ3S4TXdXpRqYeNEI3zsX31uTsGMJjEw6oD5F5u1cHnMptjhEECnmZSsPxB6ChZHDQ==",
      "type": "package",
      "path": "xunit.extensibility.execution/2.9.3",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "lib/net452/xunit.execution.desktop.dll",
        "lib/net452/xunit.execution.desktop.xml",
        "lib/netstandard1.1/xunit.execution.dotnet.dll",
        "lib/netstandard1.1/xunit.execution.dotnet.xml",
        "xunit.extensibility.execution.2.9.3.nupkg.sha512",
        "xunit.extensibility.execution.nuspec"
      ]
    },
    "xunit.runner.visualstudio/3.1.4": {
      "sha512": "5mj99LvCqrq3CNi06xYdyIAXOEh+5b33F2nErCzI5zWiDdLHXiPXEWFSUAF8zlIv0ZWqjZNCwHTQeAPYbF3pCg==",
      "type": "package",
      "path": "xunit.runner.visualstudio/3.1.4",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "_content/README.md",
        "_content/logo-128-transparent.png",
        "build/net472/xunit.abstractions.dll",
        "build/net472/xunit.runner.visualstudio.props",
        "build/net472/xunit.runner.visualstudio.testadapter.dll",
        "build/net8.0/xunit.abstractions.dll",
        "build/net8.0/xunit.runner.visualstudio.props",
        "build/net8.0/xunit.runner.visualstudio.testadapter.dll",
        "lib/net472/_._",
        "lib/net8.0/_._",
        "xunit.runner.visualstudio.3.1.4.nupkg.sha512",
        "xunit.runner.visualstudio.nuspec"
      ]
    },
    "Yarp.ReverseProxy/2.3.0": {
      "sha512": "gxtkN3a+9biu9V9Zd5NaTO6VZWXAnS2mhQ0R/VXmSPoTuiQNZsakKikrKpDtKxrL5nUYzbRsHtl40WNq+ZBKKg==",
      "type": "package",
      "path": "yarp.reverseproxy/2.3.0",
      "files": [
        ".nupkg.metadata",
        ".signature.p7s",
        "ConfigurationSchema.json",
        "README.md",
        "buildTransitive/net6.0/Yarp.ReverseProxy.targets",
        "buildTransitive/net7.0/Yarp.ReverseProxy.targets",
        "buildTransitive/net8.0/Yarp.ReverseProxy.targets",
        "icon.png",
        "lib/net6.0/Yarp.ReverseProxy.dll",
        "lib/net6.0/Yarp.ReverseProxy.xml",
        "lib/net7.0/Yarp.ReverseProxy.dll",
        "lib/net7.0/Yarp.ReverseProxy.xml",
        "lib/net8.0/Yarp.ReverseProxy.dll",
        "lib/net8.0/Yarp.ReverseProxy.xml",
        "yarp.reverseproxy.2.3.0.nupkg.sha512",
        "yarp.reverseproxy.nuspec"
      ]
    },
    "ThoughtGarden.Api/1.0.0": {
      "type": "project",
      "path": "../ThoughtGarden.Api/ThoughtGarden.Api.csproj",
      "msbuildProject": "../ThoughtGarden.Api/ThoughtGarden.Api.csproj"
    }
  },
  "projectFileDependencyGroups": {
    "net8.0": [
      "DotNet.Testcontainers >= 1.6.0",
      "HotChocolate.AspNetCore >= 15.1.9",
      "HotChocolate.Execution >= 15.1.9",
      "Microsoft.AspNetCore.Mvc.Testing >= 8.0.19",
      "Microsoft.EntityFrameworkCore >= 9.0.8",
      "Microsoft.EntityFrameworkCore.Design >= 9.0.8",
      "Microsoft.EntityFrameworkCore.Tools >= 9.0.8",
      "Microsoft.NET.Test.Sdk >= 17.14.1",
      "Npgsql.EntityFrameworkCore.PostgreSQL >= 9.0.4",
      "Snapshooter.Xunit >= 1.0.1",
      "Testcontainers.PostgreSql >= 4.7.0",
      "ThoughtGarden.Api >= 1.0.0",
      "coverlet.collector >= 6.0.0",
      "xunit >= 2.9.3",
      "xunit.runner.visualstudio >= 3.1.4"
    ]
  },
  "packageFolders": {
    "C:\\Users\\mcrae\\.nuget\\packages\\": {},
    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
  },
  "project": {
    "version": "1.0.0",
    "restore": {
      "projectUniqueName": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\ThoughtGarden.Api.Tests.csproj",
      "projectName": "ThoughtGarden.Api.Tests",
      "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\ThoughtGarden.Api.Tests.csproj",
      "packagesPath": "C:\\Users\\mcrae\\.nuget\\packages\\",
      "outputPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\obj\\",
      "projectStyle": "PackageReference",
      "fallbackFolders": [
        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
      ],
      "configFilePaths": [
        "C:\\Users\\mcrae\\AppData\\Roaming\\NuGet\\NuGet.Config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
      ],
      "originalTargetFrameworks": [
        "net8.0"
      ],
      "sources": {
        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
        "https://api.nuget.org/v3/index.json": {}
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "projectReferences": {
            "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj": {
              "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj"
            }
          }
        }
      },
      "warningProperties": {
        "warnAsError": [
          "NU1605"
        ]
      },
      "restoreAuditProperties": {
        "enableAudit": "true",
        "auditLevel": "low",
        "auditMode": "direct"
      },
      "SdkAnalysisLevel": "9.0.300"
    },
    "frameworks": {
      "net8.0": {
        "targetAlias": "net8.0",
        "dependencies": {
          "DotNet.Testcontainers": {
            "target": "Package",
            "version": "[1.6.0, )"
          },
          "HotChocolate.AspNetCore": {
            "target": "Package",
            "version": "[15.1.9, )"
          },
          "HotChocolate.Execution": {
            "target": "Package",
            "version": "[15.1.9, )"
          },
          "Microsoft.AspNetCore.Mvc.Testing": {
            "target": "Package",
            "version": "[8.0.19, )"
          },
          "Microsoft.EntityFrameworkCore": {
            "target": "Package",
            "version": "[9.0.8, )"
          },
          "Microsoft.EntityFrameworkCore.Design": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[9.0.8, )"
          },
          "Microsoft.EntityFrameworkCore.Tools": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[9.0.8, )"
          },
          "Microsoft.NET.Test.Sdk": {
            "target": "Package",
            "version": "[17.14.1, )"
          },
          "Npgsql.EntityFrameworkCore.PostgreSQL": {
            "target": "Package",
            "version": "[9.0.4, )"
          },
          "Snapshooter.Xunit": {
            "target": "Package",
            "version": "[1.0.1, )"
          },
          "Testcontainers.PostgreSql": {
            "target": "Package",
            "version": "[4.7.0, )"
          },
          "coverlet.collector": {
            "target": "Package",
            "version": "[6.0.0, )"
          },
          "xunit": {
            "target": "Package",
            "version": "[2.9.3, )"
          },
          "xunit.runner.visualstudio": {
            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
            "suppressParent": "All",
            "target": "Package",
            "version": "[3.1.4, )"
          }
        },
        "imports": [
          "net461",
          "net462",
          "net47",
          "net471",
          "net472",
          "net48",
          "net481"
        ],
        "assetTargetFallback": true,
        "warn": true,
        "frameworkReferences": {
          "Microsoft.NETCore.App": {
            "privateAssets": "all"
          }
        },
        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.305/PortableRuntimeIdentifierGraph.json"
      }
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\project.assets.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\ThoughtGarden.Api.Tests.csproj.nuget.dgspec.json =====
{
  "format": 1,
  "restore": {
    "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\ThoughtGarden.Api.Tests.csproj": {}
  },
  "projects": {
    "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\ThoughtGarden.Api.Tests.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\ThoughtGarden.Api.Tests.csproj",
        "projectName": "ThoughtGarden.Api.Tests",
        "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\ThoughtGarden.Api.Tests.csproj",
        "packagesPath": "C:\\Users\\mcrae\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api.Tests\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\mcrae\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {
              "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj": {
                "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj"
              }
            }
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "DotNet.Testcontainers": {
              "target": "Package",
              "version": "[1.6.0, )"
            },
            "HotChocolate.AspNetCore": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.Execution": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "Microsoft.AspNetCore.Mvc.Testing": {
              "target": "Package",
              "version": "[8.0.19, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Microsoft.EntityFrameworkCore.Design": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Microsoft.EntityFrameworkCore.Tools": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Microsoft.NET.Test.Sdk": {
              "target": "Package",
              "version": "[17.14.1, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "Snapshooter.Xunit": {
              "target": "Package",
              "version": "[1.0.1, )"
            },
            "Testcontainers.PostgreSql": {
              "target": "Package",
              "version": "[4.7.0, )"
            },
            "coverlet.collector": {
              "target": "Package",
              "version": "[6.0.0, )"
            },
            "xunit": {
              "target": "Package",
              "version": "[2.9.3, )"
            },
            "xunit.runner.visualstudio": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[3.1.4, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.305/PortableRuntimeIdentifierGraph.json"
        }
      }
    },
    "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj": {
      "version": "1.0.0",
      "restore": {
        "projectUniqueName": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj",
        "projectName": "ThoughtGarden.Api",
        "projectPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\ThoughtGarden.Api.csproj",
        "packagesPath": "C:\\Users\\mcrae\\.nuget\\packages\\",
        "outputPath": "C:\\Users\\mcrae\\Documents\\repos\\thought_garden\\thought_garden_backend\\src\\ThoughtGarden.Api\\obj\\",
        "projectStyle": "PackageReference",
        "fallbackFolders": [
          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
        ],
        "configFilePaths": [
          "C:\\Users\\mcrae\\AppData\\Roaming\\NuGet\\NuGet.Config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
        ],
        "originalTargetFrameworks": [
          "net8.0"
        ],
        "sources": {
          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
          "https://api.nuget.org/v3/index.json": {}
        },
        "frameworks": {
          "net8.0": {
            "targetAlias": "net8.0",
            "projectReferences": {}
          }
        },
        "warningProperties": {
          "warnAsError": [
            "NU1605"
          ]
        },
        "restoreAuditProperties": {
          "enableAudit": "true",
          "auditLevel": "low",
          "auditMode": "direct"
        },
        "SdkAnalysisLevel": "9.0.300"
      },
      "frameworks": {
        "net8.0": {
          "targetAlias": "net8.0",
          "dependencies": {
            "BCrypt.Net-Next": {
              "target": "Package",
              "version": "[4.0.3, )"
            },
            "EFCore.NamingConventions": {
              "target": "Package",
              "version": "[9.0.0, )"
            },
            "HotChocolate.AspNetCore": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.AspNetCore.Authorization": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.Data": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "HotChocolate.Data.EntityFramework": {
              "target": "Package",
              "version": "[15.1.9, )"
            },
            "Microsoft.AspNetCore.Authentication.JwtBearer": {
              "target": "Package",
              "version": "[8.0.19, )"
            },
            "Microsoft.EntityFrameworkCore": {
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Microsoft.EntityFrameworkCore.Design": {
              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
              "suppressParent": "All",
              "target": "Package",
              "version": "[9.0.8, )"
            },
            "Npgsql.EntityFrameworkCore.PostgreSQL": {
              "target": "Package",
              "version": "[9.0.4, )"
            },
            "Swashbuckle.AspNetCore": {
              "target": "Package",
              "version": "[6.6.2, )"
            },
            "System.IdentityModel.Tokens.Jwt": {
              "target": "Package",
              "version": "[8.14.0, )"
            }
          },
          "imports": [
            "net461",
            "net462",
            "net47",
            "net471",
            "net472",
            "net48",
            "net481"
          ],
          "assetTargetFallback": true,
          "warn": true,
          "frameworkReferences": {
            "Microsoft.AspNetCore.App": {
              "privateAssets": "none"
            },
            "Microsoft.NETCore.App": {
              "privateAssets": "all"
            }
          },
          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\9.0.305/PortableRuntimeIdentifierGraph.json"
        }
      }
    }
  }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\obj\ThoughtGarden.Api.Tests.csproj.nuget.dgspec.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\JwtTokenGenerator.cs =====
using System;
using System.IdentityModel.Tokens.Jwt;
using System.Security.Claims;
using Microsoft.IdentityModel.Tokens;

namespace ThoughtGarden.Api.Tests.Utils
{
    public static class JwtTokenGenerator
    {
        public static string GenerateToken(
            string key,
            string issuer,
            string audience,
            int userId,
            string username,
            string email,
            string role = "User")
        {
            var claims = new[]
            {
                new Claim(JwtRegisteredClaimNames.Sub, userId.ToString()),
                new Claim(ClaimTypes.NameIdentifier, userId.ToString()),   // needed for GetProfile
                new Claim(JwtRegisteredClaimNames.Email, email),
                new Claim("username", username),
                new Claim(ClaimTypes.Role, role),                          // role-based auth
                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString())
            };

            var creds = new SigningCredentials(
                new SymmetricSecurityKey(Convert.FromBase64String(key)),
                SecurityAlgorithms.HmacSha256);

            var token = new JwtSecurityToken(
                issuer,
                audience,
                claims,
                expires: DateTime.UtcNow.AddHours(1),
                signingCredentials: creds);

            return new JwtSecurityTokenHandler().WriteToken(token);
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\JwtTokenGenerator.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\PostgresFixture.cs =====
using DotNet.Testcontainers.Builders;
using DotNet.Testcontainers.Containers;
using Testcontainers.PostgreSql;
using Xunit;

namespace ThoughtGarden.Api.Tests
{
    public class PostgresFixture : IAsyncLifetime
    {
        private readonly PostgreSqlContainer _postgresContainer;

        public string ConnectionString => _postgresContainer.GetConnectionString();

        public PostgresFixture()
        {
            _postgresContainer = new PostgreSqlBuilder()
                .WithDatabase("thoughtgarden")
                .WithUsername("postgres")
                .WithPassword("postgres")
                .WithCleanUp(true)   // remove container after test run
                .Build();
        }

        public async Task InitializeAsync()
        {
            await _postgresContainer.StartAsync();
        }

        public async Task DisposeAsync()
        {
            await _postgresContainer.DisposeAsync();
        }
    }
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\PostgresFixture.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\ThoughtGarden.Api.Tests.csproj =====
<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="6.0.0" />
    <PackageReference Include="DotNet.Testcontainers" Version="1.6.0" />
    <PackageReference Include="HotChocolate.AspNetCore" Version="15.1.9" />
    <PackageReference Include="HotChocolate.Execution" Version="15.1.9" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Testing" Version="8.0.19" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.8" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.8">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="9.0.8">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.14.1" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="9.0.4" />
    <PackageReference Include="Snapshooter.Xunit" Version="1.0.1" />
    <PackageReference Include="Testcontainers.PostgreSql" Version="4.7.0" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.1.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ThoughtGarden.Api\ThoughtGarden.Api.csproj" />
  </ItemGroup>

</Project>
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\ThoughtGarden.Api.Tests.csproj =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\XunitConfig.cs =====
using Xunit;

[assembly: CollectionBehavior(DisableTestParallelization = true)]
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\src\ThoughtGarden.Api.Tests\XunitConfig.cs =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\package-lock.json =====
{
  "name": "thought_garden_backend",
  "lockfileVersion": 3,
  "requires": true,
  "packages": {}
}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\package-lock.json =====

===== FILE START: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\package.json =====
{}
===== FILE END: C:\Users\mcrae\Documents\repos\thought_garden\thought_garden_backend\package.json =====

